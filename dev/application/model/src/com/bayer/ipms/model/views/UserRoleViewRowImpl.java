package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.common.UserRoleViewRow;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 27 15:29:39 EEST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UserRoleViewRowImpl extends IPMSViewRowImpl implements UserRoleViewRow {
    public static final int ENTITY_USERROLE = 0;
    public static final int ENTITY_EMPLOYEE = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getId();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UserId {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getUserId();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setUserId((String) value);
            }
        }
        ,
        RoleCode {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getRoleCode();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setRoleCode((String) value);
            }
        }
        ,
        CreateDate {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getCreateDate();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProgramId {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getProgramId();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setProgramId((String) value);
            }
        }
        ,
        CreateUserId {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getCreateUserId();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UpdateUserId {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getUpdateUserId();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UpdateDate {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getUpdateDate();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EmployeeName {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getEmployeeName();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        _EmployeeCode {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.get_EmployeeCode();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.set_EmployeeCode((String) value);
            }
        }
        ,
        ProgramView {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getProgramView();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RoleView {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getRoleView();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UserView {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getUserView();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RoleAccessView {
            protected Object get(UserRoleViewRowImpl obj) {
                return obj.getRoleAccessView();
            }

            protected void put(UserRoleViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;


        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }


        protected abstract Object get(UserRoleViewRowImpl object);

        protected abstract void put(UserRoleViewRowImpl object, Object value);
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int ROLECODE = AttributesEnum.RoleCode.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int PROGRAMID = AttributesEnum.ProgramId.index();
    public static final int CREATEUSERID = AttributesEnum.CreateUserId.index();
    public static final int UPDATEUSERID = AttributesEnum.UpdateUserId.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int EMPLOYEENAME = AttributesEnum.EmployeeName.index();
    public static final int _EMPLOYEECODE = AttributesEnum._EmployeeCode.index();
    public static final int PROGRAMVIEW = AttributesEnum.ProgramView.index();
    public static final int ROLEVIEW = AttributesEnum.RoleView.index();
    public static final int USERVIEW = AttributesEnum.UserView.index();
    public static final int ROLEACCESSVIEW = AttributesEnum.RoleAccessView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UserRoleViewRowImpl() {
    }

    /**
     * Gets UserRole entity object.
     * @return the UserRole
     */
    public IPMSEntityImpl getUserRole() {
        return (IPMSEntityImpl)getEntity(0);
    }

    /**
     * Gets Employee entity object.
     * @return the Employee
     */
    public IPMSEntityImpl getEmployee() {
        return (IPMSEntityImpl)getEntity(1);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }


    /**
     * Gets the attribute value for USER_ID using the alias name UserId.
     * @return the USER_ID
     */
    public String getUserId() {
        return (String) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_ID using the alias name UserId.
     * @param value value to set the USER_ID
     */
    public void setUserId(String value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for ROLE_CODE using the alias name RoleCode.
     * @return the ROLE_CODE
     */
    public String getRoleCode() {
        return (String) getAttributeInternal(ROLECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for ROLE_CODE using the alias name RoleCode.
     * @param value value to set the ROLE_CODE
     */
    public void setRoleCode(String value) {
        setAttributeInternal(ROLECODE, value);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date)getAttributeInternal(CREATEDATE);
    }


    /**
     * Gets the attribute value for PROGRAM_ID using the alias name ProgramId.
     * @return the PROGRAM_ID
     */
    public String getProgramId() {
        return (String) getAttributeInternal(PROGRAMID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROGRAM_ID using the alias name ProgramId.
     * @param value value to set the PROGRAM_ID
     */
    public void setProgramId(String value) {
        setAttributeInternal(PROGRAMID, value);
    }

    /**
     * Gets the attribute value for CREATE_USER_ID using the alias name CreateUserId.
     * @return the CREATE_USER_ID
     */
    public String getCreateUserId() {
        return (String) getAttributeInternal(CREATEUSERID);
    }


    /**
     * Gets the attribute value for UPDATE_USER_ID using the alias name UpdateUserId.
     * @return the UPDATE_USER_ID
     */
    public String getUpdateUserId() {
        return (String) getAttributeInternal(UPDATEUSERID);
    }


    /**
     * Gets the attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @return the UPDATE_DATE
     */
    public Date getUpdateDate() {
        return (Date) getAttributeInternal(UPDATEDATE);
    }


    /**
     * Gets the attribute value for EMPLOYEENAME using the alias name EmployeeName.
     * @return the EMPLOYEENAME
     */
    public String getEmployeeName() {
        return (String) getAttributeInternal(EMPLOYEENAME);
    }


    /**
     * Gets the attribute value for CODE using the alias name _EmployeeCode.
     * @return the CODE
     */
    public String get_EmployeeCode() {
        return (String) getAttributeInternal(_EMPLOYEECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name _EmployeeCode.
     * @param value value to set the CODE
     */
    public void set_EmployeeCode(String value) {
        setAttributeInternal(_EMPLOYEECODE, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link ProgramView.
     */
    public oracle.jbo.Row getProgramView() {
        return (oracle.jbo.Row) getAttributeInternal(PROGRAMVIEW);
    }

    /**
     * Sets the master-detail link ProgramView between this object and <code>value</code>.
     */
    public void setProgramView(oracle.jbo.Row value) {
        setAttributeInternal(PROGRAMVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RoleView.
     */
    public RowSet getRoleView() {
        return (RowSet)getAttributeInternal(ROLEVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UserView.
     */
    public RowSet getUserView() {
        return (RowSet)getAttributeInternal(USERVIEW);
    }


    /**
     * Gets the view accessor <code>RowSet</code> RoleAccessView.
     */
    public RowSet getRoleAccessView() {
        return (RowSet) getAttributeInternal(ROLEACCESSVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
