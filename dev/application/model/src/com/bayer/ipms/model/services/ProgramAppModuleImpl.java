package com.bayer.ipms.model.services;

import com.bayer.ipms.model.base.IPMSApplicationModuleImpl;
import com.bayer.ipms.model.base.IPMSViewObjectImpl;
import com.bayer.ipms.model.services.common.ProgramAppModule;
import com.bayer.ipms.model.utils.ModelUtils;
import com.bayer.ipms.model.views.CollaborationDetailsViewImpl;
import com.bayer.ipms.model.views.DiscrepancyDetailsViewImpl;
import com.bayer.ipms.model.views.GoalPhaseImpl;
import com.bayer.ipms.model.views.GoalStatusViewImpl;
import com.bayer.ipms.model.views.LicenseDetailsViewImpl;
import com.bayer.ipms.model.views.LtcPlanViewImpl;
import com.bayer.ipms.model.views.LtcValueViewImpl;
import com.bayer.ipms.model.views.ProgramGoalsViewImpl;
import com.bayer.ipms.model.views.ProgramTopVersionCategoryViewImpl;
import com.bayer.ipms.model.views.ProgramTopVersionViewImpl;
import com.bayer.ipms.model.views.ProgramViewImpl;
import com.bayer.ipms.model.views.ProjectGoalViewImpl;
import com.bayer.ipms.model.views.ProjectMemberViewImpl;
import com.bayer.ipms.model.views.ProjectTimelineViewImpl;
import com.bayer.ipms.model.views.ProjectViewImpl;
import com.bayer.ipms.model.views.QplanMilestonesViewImpl;
import com.bayer.ipms.model.views.RoadmapViewImpl;
import com.bayer.ipms.model.views.RoleViewImpl;
import com.bayer.ipms.model.views.SandboxViewImpl;
import com.bayer.ipms.model.views.TargetProductProfileViewImpl;
import com.bayer.ipms.model.views.TeamMemberViewImpl;
import com.bayer.ipms.model.views.TimelineBaselineViewImpl;
import com.bayer.ipms.model.views.UserRoleViewImpl;
import com.bayer.ipms.model.views.UserViewImpl;
import com.bayer.ipms.model.views.imports.ImportD1ViewImpl;
import com.bayer.ipms.model.views.lookups.ProgramGoalTargetYearViewImpl;
import com.bayer.ipms.model.views.lookups.ProjectGoalTargetYearViewImpl;

import oracle.jbo.server.ViewLinkImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 18 18:29:52 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProgramAppModuleImpl extends IPMSApplicationModuleImpl implements ProgramAppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public ProgramAppModuleImpl() {
    }

    /**
     * Container's getter for ProgramView.
     * @return ProgramView
     */
    public ProgramViewImpl getProgramView() {
        return (ProgramViewImpl) findViewObject("ProgramView");
    }

    /**
     * Container's getter for TimelineView.
     * @return TimelineView
     */
    public IPMSViewObjectImpl getTimelineView() {
        return (IPMSViewObjectImpl) findViewObject("TimelineView");
    }


    /**
     * Container's getter for CostsView.
     * @return CostsView
     */
    public IPMSViewObjectImpl getCostsView() {
        return (IPMSViewObjectImpl) findViewObject("CostsView");
    }

    /**
     * Container's getter for ResourcesView.
     * @return ResourcesView
     */
    public IPMSViewObjectImpl getResourcesView() {
        return (IPMSViewObjectImpl) findViewObject("ResourcesView");
    }

    /**
     * Container's getter for UserRoleView.
     * @return UserRoleView
     */
    public UserRoleViewImpl getUserRoleView() {
        return (UserRoleViewImpl) findViewObject("UserRoleView");
    }

    /**
     * Container's getter for CostsProbabilityInternalView.
     * @return CostsProbabilityInternalView
     */
    public IPMSViewObjectImpl getCostsProbabilityInternalView() {
        return (IPMSViewObjectImpl) findViewObject("CostsProbabilityInternalView");
    }

    /**
     * Container's getter for MilestoneDecisionView.
     * @return MilestoneDecisionView
     */
    public IPMSViewObjectImpl getMilestoneDecisionView() {
        return (IPMSViewObjectImpl) findViewObject("MilestoneDecisionView");
    }
    
    /**
     * Container's getter for MilestoneDecisionSamdView.
     * @return MilestoneDecisionSamdView
     */
    public IPMSViewObjectImpl getMilestoneDecisionSamdView() {
        return (IPMSViewObjectImpl) findViewObject("MilestoneDecisionSamdView");
    }

    /**
     * Container's getter for MilestoneDevelopmentView.
     * @return MilestoneDevelopmentView
     */
    public IPMSViewObjectImpl getMilestoneDevelopmentView() {
        return (IPMSViewObjectImpl) findViewObject("MilestoneDevelopmentView");
    }

    /**
     * Container's getter for MilestoneRegionalView.
     * @return MilestoneRegionalView
     */
    public IPMSViewObjectImpl getMilestoneRegionalView() {
        return (IPMSViewObjectImpl) findViewObject("MilestoneRegionalView");
    }

    /**
     * Container's getter for SensorView.
     * @return SensorView
     */
    public IPMSViewObjectImpl getSensorView() {
        return (IPMSViewObjectImpl) findViewObject("SensorView");
    }


  /**
   * Container's getter for FundingView.
   * @return FundingView
   */
    public IPMSViewObjectImpl getFundingView() {
        return (IPMSViewObjectImpl) findViewObject("FundingView");
    }

    /**
     * Container's getter for IngredientView.
     * @return IngredientView
     */
    public IPMSViewObjectImpl getIngredientView() {
        return (IPMSViewObjectImpl) findViewObject("IngredientView");
    }

    /**
     * Container's getter for LicenseView.
     * @return LicenseView
     */
    public IPMSViewObjectImpl getLicenseView() {
        return (IPMSViewObjectImpl) findViewObject("LicenseView");
    }

    /**
     * Container's getter for NewsView.
     * @return NewsView
     */
    public IPMSViewObjectImpl getNewsView() {
        return (IPMSViewObjectImpl) findViewObject("NewsView");
    }

    /**
     * Container's getter for TeamMemberView.
     * @return TeamMemberView
     */
    public TeamMemberViewImpl getTeamMemberView() {
        return (TeamMemberViewImpl) findViewObject("TeamMemberView");
    }

    /**
     * Container's getter for ProjectMemberView.
     * @return ProjectMemberView
     */
    public com.bayer.ipms.model.views.ProjectMemberViewImpl getProjectMemberView() {
        return (com.bayer.ipms.model.views.ProjectMemberViewImpl) findViewObject("ProjectMemberView");
    }

    /**
     * Container's getter for AllProgramView.
     * @return AllProgramView
     */
    public ProgramViewImpl getAllProgramView() {
        return (ProgramViewImpl) findViewObject("AllProgramView");
    }

    /**
     * Container's getter for StudyRawView.
     * @return StudyRawView
     */
    public IPMSViewObjectImpl getStudyView() {
        return (IPMSViewObjectImpl) findViewObject("StudyView");
    }

    /**
     * Container's getter for ProjectView.
     * @return ProjectView
     */
    public ProjectViewImpl getProjectView() {
        return (ProjectViewImpl) findViewObject("ProjectView");
    }

    /**
     * Container's getter for D2ProjectsView.
     * @return D2ProjectsView
     */
    public ProjectViewImpl getD2ProjectsView() {
        return (ProjectViewImpl) findViewObject("D2ProjectsView");
    }
    
    /**
     * Container's getter for SAMDProjectsView.
     * @return SAMDProjectsView
     */
    public ProjectViewImpl getSAMDProjectsView() {
        return (ProjectViewImpl) findViewObject("SAMDProjectsView");
    }

    /**
     * Container's getter for D3TransitionView.
     * @return D3TransitionView
     */
    public ProjectViewImpl getD3TransitionView() {
        return (ProjectViewImpl) findViewObject("D3TransitionView");
    }

    /**
     * Container's getter for ReservedProgramsView.
     * @return ReservedProgramsView
     */
    public ProgramViewImpl getReservedProgramsView() {
        return (ProgramViewImpl) findViewObject("ReservedProgramsView");
    }

    /**
     * Container's getter for QplanMilestonesView.
     * @return QplanMilestonesView
     */
    public QplanMilestonesViewImpl getQplanMilestonesView() {
        return (QplanMilestonesViewImpl) findViewObject("QplanMilestonesView");
    }

    /**
     * Container's getter for ProjectChangeView.
     * @return ProjectChangeView
     */
    public IPMSViewObjectImpl getProjectChangeView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectChangeView");
    }

    /**
     * Container's getter for ProjectChangeMilestoneDecisionView.
     * @return ProjectChangeMilestoneDecisionView
     */
    public IPMSViewObjectImpl getProjectChangeMilestoneDecisionView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectChangeMilestoneDecisionView");
    }

    /**
     * Container's getter for ProjectChangeMilestoneDevelopmentView.
     * @return ProjectChangeMilestoneDevelopmentView
     */
    public IPMSViewObjectImpl getProjectChangeMilestoneDevelopmentView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectChangeMilestoneDevelopmentView");
    }

    /**
     * Container's getter for RedListProjectView.
     * @return RedListProjectView
     */
    public ProjectViewImpl getRedListProjectView() {
        return (ProjectViewImpl) findViewObject("RedListProjectView");
    }

    /**
     * Container's getter for ProjectMilestonesView.
     * @return ProjectMilestonesView
     */
    public QplanMilestonesViewImpl getProjectMilestonesView() {
        return (QplanMilestonesViewImpl) findViewObject("ProjectMilestonesView");
    }

    /**
     * Container's getter for CostsProbabilitySpecificView.
     * @return CostsProbabilitySpecificView
     */
    public IPMSViewObjectImpl getCostsProbabilitySpecificView() {
        return (IPMSViewObjectImpl) findViewObject("CostsProbabilitySpecificView");
    }

    /**
     * Container's getter for PlanAssumptionRequestView.
     * @return PlanAssumptionRequestView
     */
    public IPMSViewObjectImpl getPlanAssumptionRequestView() {
        return (IPMSViewObjectImpl) findViewObject("PlanAssumptionRequestView");
    }

    /**
     * Container's getter for LastPlanAssumptionRequestView.
     * @return LastPlanAssumptionRequestView
     */
    public IPMSViewObjectImpl getLastPlanAssumptionRequestView() {
        return (IPMSViewObjectImpl) findViewObject("LastPlanAssumptionRequestView");
    }

    /**
     * Container's getter for GreenListProjectView.
     * @return GreenListProjectView
     */
    public IPMSViewObjectImpl getGreenListProjectView() {
        return (IPMSViewObjectImpl) findViewObject("GreenListProjectView");
    }

    /**
     * Container's getter for QplanMasterdataView.
     * @return QplanMasterdataView
     */
    public IPMSViewObjectImpl getQplanMasterdataView() {
        return (IPMSViewObjectImpl) findViewObject("QplanMasterdataView");
    }

    /**
     * Container's getter for AllQplanMasterdataView.
     * @return AllQplanMasterdataView
     */
    public IPMSViewObjectImpl getAllQplanMasterdataView() {
        return (IPMSViewObjectImpl) findViewObject("AllQplanMasterdataView");
    }

    /**
     * Container's getter for CostsSophiaView.
     * @return CostsSophiaView
     */
    public IPMSViewObjectImpl getCostsSophiaView() {
        return (IPMSViewObjectImpl) findViewObject("CostsSophiaView");
    }

    /**
     * Container's getter for ResourcesSophiaView.
     * @return ResourcesSophiaView
     */
    public IPMSViewObjectImpl getResourcesSophiaView() {
        return (IPMSViewObjectImpl) findViewObject("ResourcesSophiaView");
    }

    /**
     * Container's getter for AllQplanMilestonesView.
     * @return AllQplanMilestonesView
     */
    public QplanMilestonesViewImpl getAllQplanMilestonesView() {
        return (QplanMilestonesViewImpl) findViewObject("AllQplanMilestonesView");
    }

    /**
     * Container's getter for SandboxView.
     * @return SandboxView
     */
    public SandboxViewImpl getSandboxView() {
        return (SandboxViewImpl) findViewObject("SandboxView");
    }

    /**
     * Container's getter for LtcInstanceView.
     * @return LtcInstanceView
     */
    public IPMSViewObjectImpl getLtcInstanceView() {
        return (IPMSViewObjectImpl) findViewObject("LtcInstanceView");
    }

    /**
     * Container's getter for LtcPlanView.
     * @return LtcPlanView
     */
    public LtcPlanViewImpl getLtcPlanView() {
        return (LtcPlanViewImpl) findViewObject("LtcPlanView");
    }

    /**
     * Container's getter for LtcPlanRootView.
     * @return LtcPlanRootView
     */
    public LtcPlanViewImpl getLtcPlanRootView() {
        return (LtcPlanViewImpl) findViewObject("LtcPlanRootView");
    }

    /**
     * Container's getter for LtcValueView.
     * @return LtcValueView
     */
    public IPMSViewObjectImpl getLtcValueView() {
        return (IPMSViewObjectImpl) findViewObject("LtcValueView");
    }

    /**
     * Container's getter for ProjectTimelineView.
     * @return ProjectTimelineView
     */
    public ProjectTimelineViewImpl getProjectTimelineView() {
        return (ProjectTimelineViewImpl) findViewObject("ProjectTimelineView");
    }

    /**
     * Container's getter for LtcReportView.
     * @return LtcReportView
     */
    public IPMSViewObjectImpl getLtcReportView() {
        return (IPMSViewObjectImpl) findViewObject("LtcReportView");
    }

    /**
     * Container's getter for TargetProductProfileCurrentView.
     * @return TargetProductProfileCurrentView
     */
    public TargetProductProfileViewImpl getTargetProductProfileCurrentView() {
        return (TargetProductProfileViewImpl) findViewObject("TargetProductProfileCurrentView");
    }

    /**
     * Container's getter for TppProfileCategoryView.
     * @return TppProfileCategoryView
     */
    public IPMSViewObjectImpl getTppProfileCategoryView() {
        return (IPMSViewObjectImpl) findViewObject("TppProfileCategoryView");
    }

    /**
     * Container's getter for TppProfileSubcategoryView.
     * @return TppProfileSubcategoryView
     */
    public IPMSViewObjectImpl getTppProfileSubcategoryView() {
        return (IPMSViewObjectImpl) findViewObject("TppProfileSubcategoryView");
    }

    /**
     * Container's getter for TppValuesView.
     * @return TppValuesView
     */
    public IPMSViewObjectImpl getTppValuesView() {
        return (IPMSViewObjectImpl) findViewObject("TppValuesView");
    }

    /**
     * Container's getter for ProjectGoalView.
     * @return ProjectGoalView
     */
    public ProjectGoalViewImpl getProjectGoalView() {
        return (ProjectGoalViewImpl) findViewObject("ProjectGoalView");
    }

    /**
     * Container's getter for ProgramGoals.
     * @return ProgramGoals
     */
    public ProgramGoalsViewImpl getProgramGoals() {
        return (ProgramGoalsViewImpl) findViewObject("ProgramGoals");
    }

    /**
     * Container's getter for GoalTypes.
     * @return GoalTypes
     */
    public IPMSViewObjectImpl getGoalTypes() {
        return (IPMSViewObjectImpl) findViewObject("GoalTypes");
    }

    /**
     * Container's getter for GoalPhase.
     * @return GoalPhase
     */
    public GoalPhaseImpl getGoalPhase() {
        return (GoalPhaseImpl) findViewObject("GoalPhase");
    }

    /**
     * Container's getter for GoalStatusView.
     * @return GoalStatusView
     */
    public GoalStatusViewImpl getGoalStatusView() {
        return (GoalStatusViewImpl) findViewObject("GoalStatusView");
    }

    /**
     * Container's getter for TargetProductProfileVersionsView.
     * @return TargetProductProfileVersionsView
     */
    public TargetProductProfileViewImpl getTargetProductProfileVersionsView() {
        return (TargetProductProfileViewImpl) findViewObject("TargetProductProfileVersionsView");
    }

    /**
     * Container's getter for TppProfileCategoryVersionsView.
     * @return TppProfileCategoryVersionsView
     */
    public IPMSViewObjectImpl getTppProfileCategoryVersionsView() {
        return (IPMSViewObjectImpl) findViewObject("TppProfileCategoryVersionsView");
    }

    /**
     * Container's getter for TppProfileSubcategoryVersionsView.
     * @return TppProfileSubcategoryVersionsView
     */
    public IPMSViewObjectImpl getTppProfileSubcategoryVersionsView() {
        return (IPMSViewObjectImpl) findViewObject("TppProfileSubcategoryVersionsView");
    }

    /**
     * Container's getter for TppValuesVersionsView.
     * @return TppValuesVersionsView
     */
    public IPMSViewObjectImpl getTppValuesVersionsView() {
        return (IPMSViewObjectImpl) findViewObject("TppValuesVersionsView");
    }

    /**
     * Container's getter for AllProgramProjectView.
     * @return AllProgramProjectView
     */
    public ProjectViewImpl getAllProgramProjectView() {
        return (ProjectViewImpl) findViewObject("AllProgramProjectView");
    }

    /**
     * Container's getter for ImportSandboxTimelineActView.
     * @return ImportSandboxTimelineActView
     */
    public IPMSViewObjectImpl getImportSandboxTimelineActView() {
        return (IPMSViewObjectImpl) findViewObject("ImportSandboxTimelineActView");
    }

    /**
     * Container's getter for ImportSandboxTimelinePlanView.
     * @return ImportSandboxTimelinePlanView
     */
    public IPMSViewObjectImpl getImportSandboxTimelinePlanView() {
        return (IPMSViewObjectImpl) findViewObject("ImportSandboxTimelinePlanView");
    }


    /**
     * Container's getter for CostsProfitPivotView.
     * @return CostsProfitPivotView
     */
    public IPMSViewObjectImpl getCostsProfitPivotView() {
        return (IPMSViewObjectImpl) findViewObject("CostsProfitPivotView");
    }

    /**
     * Container's getter for CostsSophiaPivotView.
     * @return CostsSophiaPivotView
     */
    public IPMSViewObjectImpl getCostsSophiaPivotView() {
        return (IPMSViewObjectImpl) findViewObject("CostsSophiaPivotView");
    }


    /**
     * Container's getter for ImportD1View.
     * @return ImportD1View
     */
    public ImportD1ViewImpl getImportD1View() {
        return (ImportD1ViewImpl) findViewObject("ImportD1View");
    }

    /**
     * Container's getter for ResourcesSophiaPivotView.
     * @return ResourcesSophiaPivotView
     */
    public IPMSViewObjectImpl getResourcesSophiaPivotView() {
        return (IPMSViewObjectImpl) findViewObject("ResourcesSophiaPivotView");
    }

    /**
     * Container's getter for ResourcesFromProfitPivotView.
     * @return ResourcesFromProfitPivotView
     */
    public IPMSViewObjectImpl getResourcesFromProfitPivotView() {
        return (IPMSViewObjectImpl) findViewObject("ResourcesFromProfitPivotView");
    }

    /**
     * Container's getter for ProjectView2.
     * @return ProjectView2
     */
    public IPMSViewObjectImpl getProjectView2() {
        return (IPMSViewObjectImpl) findViewObject("ProjectView2");
    }

    /**
     * Container's getter for ProgramProjects.
     * @return ProgramProjects
     */
    public ViewLinkImpl getProgramProjects() {
        return (ViewLinkImpl) findViewLink("ProgramProjects");
    }

    /**
     * Container's getter for ProjectTimelines.
     * @return ProjectTimelines
     */
    public ViewLinkImpl getProjectTimelines() {
        return (ViewLinkImpl) findViewLink("ProjectTimelines");
    }


    /**
     * Container's getter for ProjectCosts.
     * @return ProjectCosts
     */
    public ViewLinkImpl getProjectCosts() {
        return (ViewLinkImpl) findViewLink("ProjectCosts");
    }

    /**
     * Container's getter for ProjectResources.
     * @return ProjectResources
     */
    public ViewLinkImpl getProjectResources() {
        return (ViewLinkImpl) findViewLink("ProjectResources");
    }

    /**
     * Container's getter for ProgramRoleLink.
     * @return ProgramRoleLink
     */
    public ViewLinkImpl getProgramRoleLink() {
        return (ViewLinkImpl) findViewLink("ProgramRoleLink");
    }

    /**
     * Container's getter for ProjectProbabilities.
     * @return ProjectProbabilities
     */
    public ViewLinkImpl getProjectProbabilities() {
        return (ViewLinkImpl) findViewLink("ProjectProbabilities");
    }

    /**
     * Container's getter for ProjectMilestonesDecision.
     * @return ProjectMilestonesDecision
     */
    public ViewLinkImpl getProjectMilestonesDecision() {
        return (ViewLinkImpl) findViewLink("ProjectMilestonesDecision");
    }

    /**
     * Container's getter for ProjectMilestonesDevelopment.
     * @return ProjectMilestonesDevelopment
     */
    public ViewLinkImpl getProjectMilestonesDevelopment() {
        return (ViewLinkImpl) findViewLink("ProjectMilestonesDevelopment");
    }

    /**
     * Container's getter for ProjectMilestonesRegional.
     * @return ProjectMilestonesRegional
     */
    public ViewLinkImpl getProjectMilestonesRegional() {
        return (ViewLinkImpl) findViewLink("ProjectMilestonesRegional");
    }

    /**
     * Container's getter for TimelineSensor.
     * @return TimelineSensor
     */
    public ViewLinkImpl getTimelineSensor() {
        return (ViewLinkImpl) findViewLink("TimelineSensor");
    }


  /**
   * Container's getter for ProjectFundings.
   * @return ProjectFundings
   */
    public ViewLinkImpl getProjectFundings() {
        return (ViewLinkImpl) findViewLink("ProjectFundings");
    }

    /**
     * Container's getter for ProjectIngredients.
     * @return ProjectIngredients
     */
    public ViewLinkImpl getProjectIngredients() {
        return (ViewLinkImpl) findViewLink("ProjectIngredients");
    }

    /**
     * Container's getter for ProjectLicenses.
     * @return ProjectLicenses
     */
    public ViewLinkImpl getProjectLicenses() {
        return (ViewLinkImpl) findViewLink("ProjectLicenses");
    }

    /**
     * Container's getter for ProjectNews.
     * @return ProjectNews
     */
    public ViewLinkImpl getProjectNews() {
        return (ViewLinkImpl) findViewLink("ProjectNews");
    }

    /**
     * Container's getter for ProgramTeamMembers.
     * @return ProgramTeamMembers
     */
    public ViewLinkImpl getProgramTeamMembers() {
        return (ViewLinkImpl) findViewLink("ProgramTeamMembers");
    }

    /**
     * Container's getter for ProjectMembers.
     * @return ProjectMembers
     */
    public ViewLinkImpl getProjectMembers() {
        return (ViewLinkImpl) findViewLink("ProjectMembers");
    }

    /**
     * Container's getter for ProjectStudies1.
     * @return ProjectStudies1
     */
    public ViewLinkImpl getProjectStudies1() {
        return (ViewLinkImpl) findViewLink("ProjectStudies1");
    }

    /**
     * Container's getter for ProjectMilestonesGeneric.
     * @return ProjectMilestonesGeneric
     */
    public ViewLinkImpl getProjectMilestonesGeneric() {
        return (ViewLinkImpl) findViewLink("ProjectMilestonesGeneric");
    }

    /**
     * Container's getter for ProjectChanges.
     * @return ProjectChanges
     */
    public ViewLinkImpl getProjectChanges() {
        return (ViewLinkImpl) findViewLink("ProjectChanges");
    }

    /**
     * Container's getter for ProjectChangeMilestonesDecision.
     * @return ProjectChangeMilestonesDecision
     */
    public ViewLinkImpl getProjectChangeMilestonesDecision() {
        return (ViewLinkImpl) findViewLink("ProjectChangeMilestonesDecision");
    }

    /**
     * Container's getter for ProjectChangeMilestonesDevelopment.
     * @return ProjectChangeMilestonesDevelopment
     */
    public ViewLinkImpl getProjectChangeMilestonesDevelopment() {
        return (ViewLinkImpl) findViewLink("ProjectChangeMilestonesDevelopment");
    }

    /**
     * Container's getter for ProjectQplanMasterdata.
     * @return ProjectQplanMasterdata
     */
    public ViewLinkImpl getProjectQplanMasterdata() {
        return (ViewLinkImpl) findViewLink("ProjectQplanMasterdata");
    }

    /**
     * Container's getter for ProjectMilestonesGeneric1.
     * @return ProjectMilestonesGeneric1
     */
    public ViewLinkImpl getProjectMilestonesGeneric1() {
        return (ViewLinkImpl) findViewLink("ProjectMilestonesGeneric1");
    }

    /**
     * Container's getter for ProjectSpecificCostsProbabilities.
     * @return ProjectSpecificCostsProbabilities
     */
    public ViewLinkImpl getProjectSpecificCostsProbabilities() {
        return (ViewLinkImpl) findViewLink("ProjectSpecificCostsProbabilities");
    }

    /**
     * Container's getter for ProjectCostsSophia.
     * @return ProjectCostsSophia
     */
    public ViewLinkImpl getProjectCostsSophia() {
        return (ViewLinkImpl) findViewLink("ProjectCostsSophia");
    }

    /**
     * Container's getter for ProjectResourcesSophia.
     * @return ProjectResourcesSophia
     */
    public ViewLinkImpl getProjectResourcesSophia() {
        return (ViewLinkImpl) findViewLink("ProjectResourcesSophia");
    }

    /**
     * Container's getter for LtcInstancePlan1.
     * @return LtcInstancePlan1
     */
    public ViewLinkImpl getLtcInstancePlan1() {
        return (ViewLinkImpl) findViewLink("LtcInstancePlan1");
    }

    /**
     * Container's getter for LtcInstancePlan2.
     * @return LtcInstancePlan2
     */
    public ViewLinkImpl getLtcInstancePlan2() {
        return (ViewLinkImpl) findViewLink("LtcInstancePlan2");
    }

    /**
     * Container's getter for LtcPlanValue1.
     * @return LtcPlanValue1
     */
    public ViewLinkImpl getLtcPlanValue1() {
        return (ViewLinkImpl) findViewLink("LtcPlanValue1");
    }

    /**
     * Container's getter for ProgramSandbox.
     * @return ProgramSandbox
     */
    public ViewLinkImpl getProgramSandbox() {
        return (ViewLinkImpl) findViewLink("ProgramSandbox");
    }

    /**
     * Container's getter for ProgramProjectTimeLine1.
     * @return ProgramProjectTimeLine1
     */
    public ViewLinkImpl getProgramProjectTimeLine1() {
        return (ViewLinkImpl) findViewLink("ProgramProjectTimeLine1");
    }

    /**
     * Container's getter for LtcInstanceReport1.
     * @return LtcInstanceReport1
     */
    public ViewLinkImpl getLtcInstanceReport1() {
        return (ViewLinkImpl) findViewLink("LtcInstanceReport1");
    }

    /**
     * Container's getter for ProjectTargetProductProfile.
     * @return ProjectTargetProductProfile
     */
    public ViewLinkImpl getProjectTargetProductProfile() {
        return (ViewLinkImpl) findViewLink("ProjectTargetProductProfile");
    }

    /**
     * Container's getter for TppProfileCategory.
     * @return TppProfileCategory
     */
    public ViewLinkImpl getTppProfileCategory() {
        return (ViewLinkImpl) findViewLink("TppProfileCategory");
    }

    /**
     * Container's getter for TppProfileCategorySubcategory.
     * @return TppProfileCategorySubcategory
     */
    public ViewLinkImpl getTppProfileCategorySubcategory() {
        return (ViewLinkImpl) findViewLink("TppProfileCategorySubcategory");
    }

    /**
     * Container's getter for TppProfileSubcategoryValues.
     * @return TppProfileSubcategoryValues
     */
    public ViewLinkImpl getTppProfileSubcategoryValues() {
        return (ViewLinkImpl) findViewLink("TppProfileSubcategoryValues");
    }

    /**
     * Container's getter for ProjectGoalsView.
     * @return ProjectGoalsView
     */
    public ViewLinkImpl getProjectGoalsView() {
        return (ViewLinkImpl) findViewLink("ProjectGoalsView");
    }

    /**
     * Container's getter for ProgramProjectGoals.
     * @return ProgramProjectGoals
     */
    public ViewLinkImpl getProgramProjectGoals() {
        return (ViewLinkImpl) findViewLink("ProgramProjectGoals");
    }

    /**
     * Container's getter for ProjectTargetProductProfileVersions.
     * @return ProjectTargetProductProfileVersions
     */
    public ViewLinkImpl getProjectTargetProductProfileVersions() {
        return (ViewLinkImpl) findViewLink("ProjectTargetProductProfileVersions");
    }

    /**
     * Container's getter for TppProfileCategoryVersions.
     * @return TppProfileCategoryVersions
     */
    public ViewLinkImpl getTppProfileCategoryVersions() {
        return (ViewLinkImpl) findViewLink("TppProfileCategoryVersions");
    }

    /**
     * Container's getter for TppProfileCategorySubcategoryVersions.
     * @return TppProfileCategorySubcategoryVersions
     */
    public ViewLinkImpl getTppProfileCategorySubcategoryVersions() {
        return (ViewLinkImpl) findViewLink("TppProfileCategorySubcategoryVersions");
    }

    /**
     * Container's getter for TppProfileSubcategoryValuesVersions.
     * @return TppProfileSubcategoryValuesVersions
     */
    public ViewLinkImpl getTppProfileSubcategoryValuesVersions() {
        return (ViewLinkImpl) findViewLink("TppProfileSubcategoryValuesVersions");
    }

    /**
     * Container's getter for ProgramProjects1.
     * @return ProgramProjects1
     */
    public ViewLinkImpl getProgramProjects1() {
        return (ViewLinkImpl) findViewLink("ProgramProjects1");
    }

    /**
     * Container's getter for SandboxActivity.
     * @return SandboxActivity
     */
    public ViewLinkImpl getSandboxActivity() {
        return (ViewLinkImpl) findViewLink("SandboxActivity");
    }

    /**
     * Container's getter for SandboxActivity1.
     * @return SandboxActivity1
     */
    public ViewLinkImpl getSandboxActivity1() {
        return (ViewLinkImpl) findViewLink("SandboxActivity1");
    }


    /**
     * Container's getter for ProjectCostsProfitPivot.
     * @return ProjectCostsProfitPivot
     */
    public ViewLinkImpl getProjectCostsProfitPivot() {
        return (ViewLinkImpl) findViewLink("ProjectCostsProfitPivot");
    }

    /**
     * Container's getter for ProjectCostsSophiaPivot1.
     * @return ProjectCostsSophiaPivot1
     */
    public ViewLinkImpl getProjectCostsSophiaPivot1() {
        return (ViewLinkImpl) findViewLink("ProjectCostsSophiaPivot1");
    }

    /**
     * Container's getter for ProjectResourcesSophiaPivot1.
     * @return ProjectResourcesSophiaPivot1
     */
    public ViewLinkImpl getProjectResourcesSophiaPivot1() {
        return (ViewLinkImpl) findViewLink("ProjectResourcesSophiaPivot1");
    }

    /**
     * Container's getter for ProjectResourcesProfitPivot1.
     * @return ProjectResourcesProfitPivot1
     */
    public ViewLinkImpl getProjectResourcesProfitPivot1() {
        return (ViewLinkImpl) findViewLink("ProjectResourcesProfitPivot1");
    }

    /**
     * Container's getter for PrjPrj2.
     * @return PrjPrj2
     */
    public ViewLinkImpl getPrjPrj2() {
        return (ViewLinkImpl) findViewLink("PrjPrj2");
    }
    
    public String getName() { 
        return super.getName();
        }

    /**
     * Container's getter for AssignmentView.
     * @return AssignmentView
     */
    public IPMSViewObjectImpl getAssignmentView() {
        return (IPMSViewObjectImpl)findViewObject("AssignmentView");
    }

    /**
     * Container's getter for MemberAssignmentView.
     * @return MemberAssignmentView
     */
    public IPMSViewObjectImpl getMemberAssignmentView() {
        return (IPMSViewObjectImpl)findViewObject("MemberAssignmentView");
    }

    /**
     * Container's getter for SubstanceCodeView1.
     * @return SubstanceCodeView1
     */
    public IPMSViewObjectImpl getSubstanceCodeView() {
        return (IPMSViewObjectImpl)findViewObject("SubstanceCodeView");
    }

    /**
     * Container's getter for TeamMemberAssignments.
     * @return TeamMemberAssignments
     */
    public ViewLinkImpl getTeamMemberAssignments() {
        return (ViewLinkImpl)findViewLink("TeamMemberAssignments");
    }

    /**
     * Container's getter for ProjectAssignments.
     * @return ProjectAssignments
     */
    public ViewLinkImpl getProjectAssignments() {
        return (ViewLinkImpl)findViewLink("ProjectAssignments");
    }

    /**
     * Container's getter for ProjectSubstanceCodes1.
     * @return ProjectSubstanceCodes1
     */
    public ViewLinkImpl getProjectSubstanceCodes() {
        return (ViewLinkImpl)findViewLink("ProjectSubstanceCodes");
    }

    /**
     * Container's getter for ProgramGoalTargetYearView1.
     * @return ProgramGoalTargetYearView1
     */
    public ProgramGoalTargetYearViewImpl getProgramGoalTargetYearView() {
        return (ProgramGoalTargetYearViewImpl) findViewObject("ProgramGoalTargetYearView");
    }

    /**
     * Container's getter for ProgramGoalTargetYear1.
     * @return ProgramGoalTargetYear1
     */
    public ViewLinkImpl getProgramGoalTargetYear() {
        return (ViewLinkImpl) findViewLink("ProgramGoalTargetYear");
    }

    /**
     * Container's getter for ProjectGoalTargetYearView1.
     * @return ProjectGoalTargetYearView1
     */
    public ProjectGoalTargetYearViewImpl getProjectGoalTargetYearView() {
        return (ProjectGoalTargetYearViewImpl) findViewObject("ProjectGoalTargetYearView");
    }

    /**
     * Container's getter for ProjectGoalTargetYear1.
     * @return ProjectGoalTargetYear1
     */
    public ViewLinkImpl getProjectGoalTargetYear() {
        return (ViewLinkImpl) findViewLink("ProjectGoalTargetYear");
    }
    
    public void commitPlanningAssumptions(){
        
        ModelUtils.setBaCode("PlanningAssumptionsProvide");
        
        getDBTransaction().commit();
        
        ModelUtils.setBaCode(null);
    }

    /**
     * Container's getter for CostProfitPivotExportView1.
     * @return CostProfitPivotExportView1
     */
    public IPMSViewObjectImpl getCostProfitPivotExportView() {
        return (IPMSViewObjectImpl) findViewObject("CostProfitPivotExportView");
    }

    /**
     * Container's getter for ProjectCostsProfitPivotExport1.
     * @return ProjectCostsProfitPivotExport1
     */
    public ViewLinkImpl getProjectCostsProfitPivotExport() {
        return (ViewLinkImpl) findViewLink("ProjectCostsProfitPivotExport");
    }

    /**
     * Container's getter for CostSophiaPivotExportView1.
     * @return CostSophiaPivotExportView1
     */
    public IPMSViewObjectImpl getCostSophiaPivotExportView() {
        return (IPMSViewObjectImpl) findViewObject("CostSophiaPivotExportView");
    }

    /**
     * Container's getter for ProjectCostSophiaPivotExport1.
     * @return ProjectCostSophiaPivotExport1
     */
    public ViewLinkImpl getProjectCostSophiaPivotExport() {
        return (ViewLinkImpl) findViewLink("ProjectCostSophiaPivotExport");
    }

    /**
     * Container's getter for ResourcesProfitPivotExportView1.
     * @return ResourcesProfitPivotExportView1
     */
    public IPMSViewObjectImpl getResourcesProfitPivotExportView() {
        return (IPMSViewObjectImpl) findViewObject("ResourcesProfitPivotExportView");
    }

    /**
     * Container's getter for ProjectResourcesProfitPivotExport1.
     * @return ProjectResourcesProfitPivotExport1
     */
    public ViewLinkImpl getProjectResourcesProfitPivotExport() {
        return (ViewLinkImpl) findViewLink("ProjectResourcesProfitPivotExport");
    }

    /**
     * Container's getter for ResourcesSophiaPivotExportView1.
     * @return ResourcesSophiaPivotExportView1
     */
    public IPMSViewObjectImpl getResourcesSophiaPivotExportView() {
        return (IPMSViewObjectImpl) findViewObject("ResourcesSophiaPivotExportView");
    }

    /**
     * Container's getter for ProjectResourcesSophiaPivotExport1.
     * @return ProjectResourcesSophiaPivotExport1
     */
    public ViewLinkImpl getProjectResourcesSophiaPivotExport() {
        return (ViewLinkImpl) findViewLink("ProjectResourcesSophiaPivotExport");
    }

    /**
     * Container's getter for ProjectView1.
     * @return ProjectView1
     */
    public ProjectViewImpl getAllD2ProjectView() {
        return (ProjectViewImpl) findViewObject("AllD2ProjectView");
    }
    
    /**
     * Container's getter for ProjectView1.
     * @return ProjectView1
     */
    public ProjectViewImpl getAllSAMDView() {
        return (ProjectViewImpl) findViewObject("AllSAMDView");
    }
 
    /**
     * Container's getter for ProjectView1.
     * @return ProjectView1
     */
    public ProjectViewImpl getAllDevPrjMntView() {
        return (ProjectViewImpl) findViewObject("AllDevPrjMntView");
    }
   
    /**
     * Container's getter for ProjectView1.
     * @return ProjectView1
     */
    public ProjectViewImpl getAllSAMDProjectView() {
        return (ProjectViewImpl) findViewObject("AllSAMDProjectView");
    }

    /**
     * Container's getter for TimelineBaselineView1.
     * @return TimelineBaselineView1
     */
    public TimelineBaselineViewImpl getTimelineBaselineView() {
        return (TimelineBaselineViewImpl) findViewObject("TimelineBaselineView");
    }

    /**
     * Container's getter for TimelineBaseLines1.
     * @return TimelineBaseLines1
     */
    public ViewLinkImpl getTimelineBaseLines() {
        return (ViewLinkImpl) findViewLink("TimelineBaseLines");
    }
    /**
   * Container's getter for LeadStudyInstanceView1.
   * @return LeadStudyInstanceView1
   */
  public IPMSViewObjectImpl getLeadStudyInstanceView()
  {
	 return (IPMSViewObjectImpl) findViewObject("LeadStudyInstanceView");
  }

  /**
   * Container's getter for LeadStudyInstanceProject1.
   * @return LeadStudyInstanceProject1
   */
  public ViewLinkImpl getLeadStudyInstanceProject()
  {
	 return (ViewLinkImpl) findViewLink("LeadStudyInstanceProject");
  }

  /**
   * Container's getter for LeadStudyMapView.
   * @return LeadStudyMapView
   */
  public IPMSViewObjectImpl getLeadStudyMapView()
  {
	 return (IPMSViewObjectImpl) findViewObject("LeadStudyMapView");
  }

  /**
   * Container's getter for LeadStudyInstLsMap.
   * @return LeadStudyInstLsMap
   */
  public ViewLinkImpl getLeadStudyInstLsMap()
  {
	 return (ViewLinkImpl) findViewLink("LeadStudyInstLsMap");
  }

  /**
   * Container's getter for LeadStudiesView.
   * @return LeadStudiesView
   */
  public IPMSViewObjectImpl getLeadStudiesView()
  {
	 return (IPMSViewObjectImpl) findViewObject("LeadStudiesView");
  }


  /**
   * Container's getter for LeadStudyMapLsInst.
   * @return LeadStudyMapLsInst
   */
  public ViewLinkImpl getLeadStudyMapLsInst()
  {
	 return (ViewLinkImpl) findViewLink("LeadStudyMapLsInst");
  }

  /**
   * Container's getter for LeadStudiesLsInst.
   * @return LeadStudiesLsInst
   */
  public ViewLinkImpl getLeadStudiesLsInst()
  {
	 return (ViewLinkImpl) findViewLink("LeadStudiesLsInst");
  }


    /**
     * Container's getter for ProjectView1.
     * @return ProjectView1
     */
    public ProjectViewImpl getProgramGoalsProjectView() {
        return (ProjectViewImpl) findViewObject("ProgramGoalsProjectView");
    }

    /**
     * Container's getter for ProjectView1.
     * @return ProjectView1
     */
    public ProjectViewImpl getAllDevProjectView() {
        return (ProjectViewImpl) findViewObject("AllDevProjectView");
    }

    /**
     * Container's getter for D3TransitionAllView.
     * @return D3TransitionAllView
     */
    public ProjectViewImpl getD3TransitionAllView() {
        return (ProjectViewImpl) findViewObject("D3TransitionAllView");
    }

    /**
     * Container's getter for StudyView1.
     * @return StudyView1
     */
    public IPMSViewObjectImpl getStudyRemoveView() {
        return (IPMSViewObjectImpl) findViewObject("StudyRemoveView");
    }

    /**
     * Container's getter for ProjectStudies2.
     * @return ProjectStudies2
     */
    public ViewLinkImpl getProjectStudies2() {
        return (ViewLinkImpl) findViewLink("ProjectStudies2");
    }


    /**
     * Container's getter for DiscrepancyDetailsView1.
     * @return DiscrepancyDetailsView1
     */
    public DiscrepancyDetailsViewImpl getDiscrepancyDetailsView() {
        return (DiscrepancyDetailsViewImpl) findViewObject("DiscrepancyDetailsView");
    }

    /**
     * Container's getter for ProjectDiscrepancy1.
     * @return ProjectDiscrepancy1
     */
    public ViewLinkImpl getProjectDiscrepancy() {
        return (ViewLinkImpl) findViewLink("ProjectDiscrepancy");
    }

    /**
     * Container's getter for ProjectLevelActivitiesView1.
     * @return ProjectLevelActivitiesView1
     */
    public IPMSViewObjectImpl getProjectLevelActivitiesView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectLevelActivitiesView");
    }

    /**
     * Container's getter for ProjectProjectLevelActivities1.
     * @return ProjectProjectLevelActivities1
     */
    public ViewLinkImpl getProjectProjectLevelActivities() {
        return (ViewLinkImpl) findViewLink("ProjectProjectLevelActivities");
    }

    /**
     * Container's getter for ProjectDeviceView1.
     * @return ProjectDeviceView1
     */
    public IPMSViewObjectImpl getProjectDeviceView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectDeviceView");
    }

    /**
     * Container's getter for ProjectProjectDevices1.
     * @return ProjectProjectDevices1
     */
    public ViewLinkImpl getProjectProjectDevices() {
        return (ViewLinkImpl) findViewLink("ProjectProjectDevices");
    }

    /**
     * Container's getter for ProgramTopVersionView1.
     * @return ProgramTopVersionView1
     */
    public ProgramTopVersionViewImpl getProgramTopPreviousView() {
        return (ProgramTopVersionViewImpl) findViewObject("ProgramTopPreviousView");
    }

    /**
     * Container's getter for ProgramTopVersion1.
     * @return ProgramTopVersion1
     */
    public ViewLinkImpl getProgramTopPrevious() {
        return (ViewLinkImpl) findViewLink("ProgramTopPrevious");
    }

    /**
     * Container's getter for ProjectPhasePlanningView1.
     * @return ProjectPhasePlanningView1
     */
    public IPMSViewObjectImpl getProjectPhasePlanningView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectPhasePlanningView");
    }
    
    /**
     * Container's getter for ProjectRelatedDevView1.
     * @return ProjectRelatedDevView1
     */
    public IPMSViewObjectImpl getProjectRelatedDevView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectRelatedDevView");
    }
    
    /**
     * Container's getter for ProjectRelatedMspView1.
     * @return ProjectRelatedMspView1
     */
    public IPMSViewObjectImpl getProjectRelatedMspView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectRelatedMspView");
    }
    
    /**
     * Container's getter for ProjectRelatedSuccessorView1.
     * @return ProjectRelatedSuccessorView1
     */
    public IPMSViewObjectImpl getProjectRelatedSuccessorView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectRelatedSuccessorView");
    }
    
    /**
     * Container's getter for ProjectRelatedPredecessorView1.
     * @return ProjectRelatedPredecessorView1
     */
    public IPMSViewObjectImpl getProjectRelatedPredecessorView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectRelatedPredecessorView");
    }

    /**
     * Container's getter for ProgramTopVersionView2.
     * @return ProgramTopVersionView2
     */
    public ProgramTopVersionViewImpl getProgramTopCurrentView() {
        return (ProgramTopVersionViewImpl) findViewObject("ProgramTopCurrentView");
    }



    /**
     * Container's getter for ProjectPhasePlanningLink1.
     * @return ProjectPhasePlanningLink1
     */
    public ViewLinkImpl getProjectPhasePlanningLink() {
        return (ViewLinkImpl) findViewLink("ProjectPhasePlanningLink");
    }
    
    /**
     * Container's getter for ProjectRelatedSuccessorLink1.
     * @return ProjectRelatedSuccessorLink1
     */
    public ViewLinkImpl getProjectRelatedSuccessorLink() {
        return (ViewLinkImpl) findViewLink("ProjectRelatedSuccessorLink");
    }
    
    /**
     * Container's getter for ProjectRelatedPredecessorLink1.
     * @return ProjectRelatedPredecessorLink1
     */
    public ViewLinkImpl getProjectRelatedPredecessorLink() {
        return (ViewLinkImpl) findViewLink("ProjectRelatedPredecessorLink");
    }
    
    /**
     * Container's getter for ProjectRelatedDevLink1.
     * @return ProjectRelatedDevLink1
     */
    public ViewLinkImpl getProjectRelatedDevLink() {
        return (ViewLinkImpl) findViewLink("ProjectRelatedDevLink");
    }
    
    /**
     * Container's getter for ProjectRelatedMspLink1.
     * @return ProjectRelatedMspLink1
     */
    public ViewLinkImpl getProjectRelatedMspLink() {
        return (ViewLinkImpl) findViewLink("ProjectRelatedMspLink");
    }
    /**
     * Container's getter for ProgramTopVersion2.
     * @return ProgramTopVersion2
     */
    public ViewLinkImpl getProgramTopCurrent() {
        return (ViewLinkImpl) findViewLink("ProgramTopCurrent");
    }


    /**
     * Container's getter for ProgramView1.
     * @return ProgramView1
     */
    public ProgramViewImpl getProgramView1() {
        return (ProgramViewImpl) findViewObject("ProgramView1");
    }

    /**
     * Container's getter for ProgramTopVersionView1.
     * @return ProgramTopVersionView1
     */
    public IPMSViewObjectImpl getProgramTopVersionView1() {
        return (IPMSViewObjectImpl) findViewObject("ProgramTopVersionView1");
    }

    /**
     * Container's getter for ProgramTopVersion1.
     * @return ProgramTopVersion1
     */
    public ViewLinkImpl getProgramTopVersion1() {
        return (ViewLinkImpl) findViewLink("ProgramTopVersion1");
    }


    /**
     * Container's getter for ProgramTopVersionCategoryView1.
     * @return ProgramTopVersionCategoryView1
     */
    public ProgramTopVersionCategoryViewImpl getProgramTopVersionCategoryView() {
        return (ProgramTopVersionCategoryViewImpl) findViewObject("ProgramTopVersionCategoryView");
    }

    /**
     * Container's getter for ProgramTopVersionCategory1.
     * @return ProgramTopVersionCategory1
     */
    public ViewLinkImpl getProgramTopVersionCategory() {
        return (ViewLinkImpl) findViewLink("ProgramTopVersionCategory");
    }

    /**
     * Container's getter for ProgramTopVersionSubCategoryView1.
     * @return ProgramTopVersionSubCategoryView1
     */
    public IPMSViewObjectImpl getProgramTopVersionSubCategoryView() {
        return (IPMSViewObjectImpl) findViewObject("ProgramTopVersionSubCategoryView");
    }

    /**
     * Container's getter for ProgramTopVersionCatSubCat1.
     * @return ProgramTopVersionCatSubCat1
     */
    public ViewLinkImpl getProgramTopVersionCatSubCat() {
        return (ViewLinkImpl) findViewLink("ProgramTopVersionCatSubCat");
    }

    /**
     * Container's getter for ProgramTopValuesView1.
     * @return ProgramTopValuesView1
     */
    public IPMSViewObjectImpl getProgramTopValuesView() {
        return (IPMSViewObjectImpl) findViewObject("ProgramTopValuesView");
    }

    /**
     * Container's getter for ProgramTopVersionSubcatValues1.
     * @return ProgramTopVersionSubcatValues1
     */
    public ViewLinkImpl getProgramTopVersionSubcatValues() {
        return (ViewLinkImpl) findViewLink("ProgramTopVersionSubcatValues");
    }

    /**
     * Container's getter for ProgramTopVersionCategoryView1.
     * @return ProgramTopVersionCategoryView1
     */
    public ProgramTopVersionCategoryViewImpl getProgramTopPreviousCategoryView() {
        return (ProgramTopVersionCategoryViewImpl) findViewObject("ProgramTopPreviousCategoryView");
    }

    /**
     * Container's getter for ProgramTopVersionCategory1.
     * @return ProgramTopVersionCategory1
     */
    public ViewLinkImpl getProgramTopPreviousCategory() {
        return (ViewLinkImpl) findViewLink("ProgramTopPreviousCategory");
    }

    /**
     * Container's getter for ProgramTopVersionSubCategoryView1.
     * @return ProgramTopVersionSubCategoryView1
     */
    public IPMSViewObjectImpl getProgramTopPreviousSubCategoryView() {
        return (IPMSViewObjectImpl) findViewObject("ProgramTopPreviousSubCategoryView");
    }

    /**
     * Container's getter for ProgramTopVersionCatSubCat1.
     * @return ProgramTopVersionCatSubCat1
     */
    public ViewLinkImpl getProgramTopPreviousCatSubCat() {
        return (ViewLinkImpl) findViewLink("ProgramTopPreviousCatSubCat");
    }

    /**
     * Container's getter for ProgramTopValuesView1.
     * @return ProgramTopValuesView1
     */
    public IPMSViewObjectImpl getProgramTopPreviuosValuesView() {
        return (IPMSViewObjectImpl) findViewObject("ProgramTopPreviuosValuesView");
    }

    /**
     * Container's getter for ProgramTopVersionSubcatValues1.
     * @return ProgramTopVersionSubcatValues1
     */
    public ViewLinkImpl getProgramTopPreviuosSubcatValues() {
        return (ViewLinkImpl) findViewLink("ProgramTopPreviuosSubcatValues");
    }

    /**
     * Container's getter for ProgramTopVersionCategoryView1.
     * @return ProgramTopVersionCategoryView1
     */
    public ProgramTopVersionCategoryViewImpl getProgramTopNonIndVersionCategoryView() {
        return (ProgramTopVersionCategoryViewImpl) findViewObject("ProgramTopNonIndVersionCategoryView");
    }

    /**
     * Container's getter for ProgramTopVersionCategory1.
     * @return ProgramTopVersionCategory1
     */
    public ViewLinkImpl getProgramTopNonIndVersionCategory() {
        return (ViewLinkImpl) findViewLink("ProgramTopNonIndVersionCategory");
    }

    /**
     * Container's getter for ProgramTopVersionSubCategoryView1.
     * @return ProgramTopVersionSubCategoryView1
     */
    public IPMSViewObjectImpl getProgramTopNonIndVersionSubCategoryView() {
        return (IPMSViewObjectImpl) findViewObject("ProgramTopNonIndVersionSubCategoryView");
    }

    /**
     * Container's getter for ProgramTopVersionCatSubCat1.
     * @return ProgramTopVersionCatSubCat1
     */
    public ViewLinkImpl getProgramTopNonIndVersionCatSubCat() {
        return (ViewLinkImpl) findViewLink("ProgramTopNonIndVersionCatSubCat");
    }

    /**
     * Container's getter for ProgramTopValuesView1.
     * @return ProgramTopValuesView1
     */
    public IPMSViewObjectImpl getProgramNonIndTopValuesView() {
        return (IPMSViewObjectImpl) findViewObject("ProgramNonIndTopValuesView");
    }

    /**
     * Container's getter for ProgramTopVersionSubcatValues1.
     * @return ProgramTopVersionSubcatValues1
     */
    public ViewLinkImpl getProgramNonIndTopVersionSubcatValues() {
        return (ViewLinkImpl) findViewLink("ProgramNonIndTopVersionSubcatValues");
    }

    /**
     * Container's getter for ProgramTopVersionCategoryView1.
     * @return ProgramTopVersionCategoryView1
     */
    public ProgramTopVersionCategoryViewImpl getProgramTopNonIndPreviousCategoryView() {
        return (ProgramTopVersionCategoryViewImpl) findViewObject("ProgramTopNonIndPreviousCategoryView");
    }

    /**
     * Container's getter for ProgramTopVersionCategory1.
     * @return ProgramTopVersionCategory1
     */
    public ViewLinkImpl getProgramTopNonIndPreviousCategory() {
        return (ViewLinkImpl) findViewLink("ProgramTopNonIndPreviousCategory");
    }

    /**
     * Container's getter for ProgramTopVersionSubCategoryView1.
     * @return ProgramTopVersionSubCategoryView1
     */
    public IPMSViewObjectImpl getProgramTopNonIndPreviousSubCategoryView() {
        return (IPMSViewObjectImpl) findViewObject("ProgramTopNonIndPreviousSubCategoryView");
    }

    /**
     * Container's getter for ProgramTopVersionCatSubCat1.
     * @return ProgramTopVersionCatSubCat1
     */
    public ViewLinkImpl getProgramTopNonIndPreviousCatSubCat() {
        return (ViewLinkImpl) findViewLink("ProgramTopNonIndPreviousCatSubCat");
    }

    /**
     * Container's getter for ProgramTopValuesView1.
     * @return ProgramTopValuesView1
     */
    public IPMSViewObjectImpl getProgramTopNonIndPreviousValuesView() {
        return (IPMSViewObjectImpl) findViewObject("ProgramTopNonIndPreviousValuesView");
    }

    /**
     * Container's getter for ProgramTopVersionSubcatValues1.
     * @return ProgramTopVersionSubcatValues1
     */
    public ViewLinkImpl getProgramTopNonIndPreviousSubcatValues() {
        return (ViewLinkImpl) findViewLink("ProgramTopNonIndPreviousSubcatValues");
    }

    /**
     * Container's getter for ProjectChangeMilestoneRegionalView.
     * @return ProjectChangeMilestoneRegionalView
     */
    public IPMSViewObjectImpl getProjectChangeMilestoneRegionalView() {
        return (IPMSViewObjectImpl) findViewObject("ProjectChangeMilestoneRegionalView");
    }

    /**
     * Container's getter for RoleView1.
     * @return RoleView1
     */
    public RoleViewImpl getRoleView() {
        return (RoleViewImpl) findViewObject("RoleView");
    }

    /**
     * Container's getter for ProjectChangeMilestonesRegional.
     * @return ProjectChangeMilestonesRegional
     */
    public ViewLinkImpl getProjectChangeMilestonesRegional() {
        return (ViewLinkImpl) findViewLink("ProjectChangeMilestonesRegional");
    }

    /**
     * Container's getter for UserView1.
     * @return UserView1
     */
    public UserViewImpl getUserView() {
        return (UserViewImpl) findViewObject("UserView");
    }

    /**
     * Container's getter for RoleAccessView1.
     * @return RoleAccessView1
     */
    public IPMSViewObjectImpl getRoleAccessView() {
        return (IPMSViewObjectImpl) findViewObject("RoleAccessView");
    }

    /**
     * Container's getter for ProjectRoadmapView1.
     * @return ProjectRoadmapView1
     */
    public IPMSViewObjectImpl getProjectRoadmapView1() {
        return (IPMSViewObjectImpl) findViewObject("ProjectRoadmapView1");
    }



    /**
     * Container's getter for RoadMapProject.
     * @return RoadMapProject
     */
    public ViewLinkImpl getRoadMapProject() {
        return (ViewLinkImpl) findViewLink("RoadMapProject");
    }

    /**
     * Container's getter for RoadmapView.
     * @return RoadmapView
     */
    public RoadmapViewImpl getRoadmapView() {
        return (RoadmapViewImpl) findViewObject("RoadmapView");
    }

    /**
     * Container's getter for CollaborationDetailsView.
     * @return CollaborationDetailsView
     */
    public IPMSViewObjectImpl getCollaborationDetailsView1() {
        return (IPMSViewObjectImpl) findViewObject("CollaborationDetailsView");
    }

    /**
     * Container's getter for ProjectRoadmap.
     * @return ProjectRoadmap
     */
    public ViewLinkImpl getProjectRoadmap() {
        return (ViewLinkImpl) findViewLink("ProjectRoadmap");
    }


    /**
     * Container's getter for ProjectCollaborationDetails.
     * @return ProjectCollaborationDetails
     */
    public ViewLinkImpl getProjectCollaborationDetails() {
        return (ViewLinkImpl) findViewLink("ProjectCollaborationDetails");
    }

    /**
     * Container's getter for ProjectLicenseDetails.
     * @return ProjectLicenseDetails
     */
    public ViewLinkImpl getProjectLicenseDetails() {
        return (ViewLinkImpl) findViewLink("ProjectLicenseDetails");
    }
    
    
    /**
     * Container's getter for CollaborationDetailsView.
     * @return CollaborationDetailsView
     */
    public CollaborationDetailsViewImpl getCollaborationDetailsView() {
        return (CollaborationDetailsViewImpl) findViewObject("CollaborationDetailsView");
    }

    /**
     * Container's getter for LicenseDetailsView.
     * @return LicenseDetailsView
     */
    public LicenseDetailsViewImpl getLicenseDetailsView() {
        return (LicenseDetailsViewImpl) findViewObject("LicenseDetailsView");
    }


    /**
     * Container's getter for ProjectView1.
     * @return ProjectView1
     */
    public ProjectViewImpl getProjectView1() {
        return (ProjectViewImpl) findViewObject("ProjectView1");
    }


}
