package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.common.AssignmentViewRow;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 18 16:43:13 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AssignmentViewRowImpl extends IPMSViewRowImpl implements AssignmentViewRow {

    public static final int ENTITY_ASSIGNMENT = 0;
    public static final int ENTITY_TEAMMEMBER = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(AssignmentViewRowImpl obj) {
                return obj.getId();
            }

            public void put(AssignmentViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectId {
            public Object get(AssignmentViewRowImpl obj) {
                return obj.getProjectId();
            }

            public void put(AssignmentViewRowImpl obj, Object value) {
                obj.setProjectId((String) value);
            }
        }
        ,
        TeamMemberId {
            public Object get(AssignmentViewRowImpl obj) {
                return obj.getTeamMemberId();
            }

            public void put(AssignmentViewRowImpl obj, Object value) {
                obj.setTeamMemberId((String) value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(AssignmentViewRowImpl object);

        public abstract void put(AssignmentViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                   AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int TEAMMEMBERID = AttributesEnum.TeamMemberId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AssignmentViewRowImpl() {
    }

    /**
     * Gets Assignment entity object.
     * @return the Assignment
     */
    public IPMSEntityImpl getAssignment() {
        return (IPMSEntityImpl)getEntity(ENTITY_ASSIGNMENT);
    }

    /**
     * Gets TeamMember entity object.
     * @return the TeamMember
     */
    public IPMSEntityImpl getTeamMember() {
        return (IPMSEntityImpl)getEntity(ENTITY_TEAMMEMBER);
    }


    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String)getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public String getProjectId() {
        return (String)getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(String value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for TEAM_MEMBER_ID using the alias name TeamMemberId.
     * @return the TEAM_MEMBER_ID
     */
    public String getTeamMemberId() {
        return (String)getAttributeInternal(TEAMMEMBERID);
    }

    /**
     * Sets <code>value</code> as attribute value for TEAM_MEMBER_ID using the alias name TeamMemberId.
     * @param value value to set the TEAM_MEMBER_ID
     */
    public void setTeamMemberId(String value) {
        setAttributeInternal(TEAMMEMBERID, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

