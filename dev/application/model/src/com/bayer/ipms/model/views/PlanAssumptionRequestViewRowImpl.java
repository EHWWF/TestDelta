package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.common.PlanAssumptionRequestViewRow;

import java.sql.Date;

import oracle.jbo.domain.Array;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 24 11:09:55 EEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PlanAssumptionRequestViewRowImpl extends IPMSViewRowImpl implements PlanAssumptionRequestViewRow {
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  public enum AttributesEnum {
    CreateDate {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getCreateDate();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setCreateDate((Date)value);
      }
    }
    ,
    CreateUserId {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getCreateUserId();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setCreateUserId((String)value);
      }
    }
    ,
    ForecastNo {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getForecastNo();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setForecastNo((String)value);
      }
    }
    ,
    Id {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getId();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setId((String)value);
      }
    }
    ,
    IsSyncing {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getIsSyncing();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setIsSyncing((Boolean)value);
      }
    }
    ,
    Name {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getName();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setName((String)value);
      }
    }
    ,
    StatusCode {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getStatusCode();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setStatusCode((String)value);
      }
    }
    ,
    StatusDate {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getStatusDate();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setStatusDate((Date)value);
      }
    }
    ,
    SyncDate {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getSyncDate();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setSyncDate((Date)value);
      }
    }
    ,
    SyncId {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getSyncId();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setSyncId((String)value);
      }
    }
    ,
    TerminationDate {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getTerminationDate();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setTerminationDate((Date)value);
      }
    }
    ,
    UpdateDate {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getUpdateDate();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setUpdateDate((Date)value);
      }
    }
    ,
    UpdateUserId {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getUpdateUserId();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setUpdateUserId((String)value);
      }
    }
    ,
    IsLast {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getIsLast();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setIsLast((Boolean)value);
      }
    }
    ,
    QualifiedName {
      public Object get(PlanAssumptionRequestViewRowImpl obj) {
        return obj.getQualifiedName();
      }

      public void put(PlanAssumptionRequestViewRowImpl obj, Object value) {
        obj.setQualifiedName((String)value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    public abstract Object get(PlanAssumptionRequestViewRowImpl object);

    public abstract void put(PlanAssumptionRequestViewRowImpl object,
                             Object value);

    public int index() {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static final int firstIndex() {
      return firstIndex;
    }

    public static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static final AttributesEnum[] staticValues() {
      if (vals == null) {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int CREATEDATE = AttributesEnum.CreateDate.index();
  public static final int CREATEUSERID = AttributesEnum.CreateUserId.index();
  public static final int FORECASTNO = AttributesEnum.ForecastNo.index();
  public static final int ID = AttributesEnum.Id.index();
  public static final int ISSYNCING = AttributesEnum.IsSyncing.index();
  public static final int NAME = AttributesEnum.Name.index();
  public static final int STATUSCODE = AttributesEnum.StatusCode.index();
  public static final int STATUSDATE = AttributesEnum.StatusDate.index();
  public static final int SYNCDATE = AttributesEnum.SyncDate.index();
  public static final int SYNCID = AttributesEnum.SyncId.index();
  public static final int TERMINATIONDATE = AttributesEnum.TerminationDate.index();
  public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
  public static final int UPDATEUSERID = AttributesEnum.UpdateUserId.index();
  public static final int ISLAST = AttributesEnum.IsLast.index();
  public static final int QUALIFIEDNAME = AttributesEnum.QualifiedName.index();

  /**
   * This is the default constructor (do not remove).
   */
  public PlanAssumptionRequestViewRowImpl() {
  }

  /**
   * Gets PlanAssumptionRequest entity object.
   * @return the PlanAssumptionRequest
   */
  public IPMSEntityImpl getPlanAssumptionRequest() {
    return (IPMSEntityImpl)getEntity(0);
  }

  /**
   * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
   * @return the CREATE_DATE
   */
  public Date getCreateDate() {
    return (Date) getAttributeInternal(CREATEDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for CREATE_DATE using the alias name CreateDate.
   * @param value value to set the CREATE_DATE
   */
  public void setCreateDate(Date value) {
    setAttributeInternal(CREATEDATE, value);
  }

  /**
   * Gets the attribute value for CREATE_USER_ID using the alias name CreateUserId.
   * @return the CREATE_USER_ID
   */
  public String getCreateUserId() {
    return (String) getAttributeInternal(CREATEUSERID);
  }

  /**
   * Sets <code>value</code> as attribute value for CREATE_USER_ID using the alias name CreateUserId.
   * @param value value to set the CREATE_USER_ID
   */
  public void setCreateUserId(String value) {
    setAttributeInternal(CREATEUSERID, value);
  }

  /**
   * Gets the attribute value for FORECAST_NO using the alias name ForecastNo.
   * @return the FORECAST_NO
   */
  public String getForecastNo() {
    return (String) getAttributeInternal(FORECASTNO);
  }

  /**
   * Sets <code>value</code> as attribute value for FORECAST_NO using the alias name ForecastNo.
   * @param value value to set the FORECAST_NO
   */
  public void setForecastNo(String value) {
    setAttributeInternal(FORECASTNO, value);
  }

  /**
   * Gets the attribute value for ID using the alias name Id.
   * @return the ID
   */
  public String getId() {
    return (String) getAttributeInternal(ID);
  }

  /**
   * Sets <code>value</code> as attribute value for ID using the alias name Id.
   * @param value value to set the ID
   */
  public void setId(String value) {
    setAttributeInternal(ID, value);
  }

  /**
   * Gets the attribute value for IS_SYNCING using the alias name IsSyncing.
   * @return the IS_SYNCING
   */
  public Boolean getIsSyncing() {
    return (Boolean) getAttributeInternal(ISSYNCING);
  }

  /**
   * Sets <code>value</code> as attribute value for IS_SYNCING using the alias name IsSyncing.
   * @param value value to set the IS_SYNCING
   */
  public void setIsSyncing(Boolean value) {
    setAttributeInternal(ISSYNCING, value);
  }

  /**
   * Gets the attribute value for NAME using the alias name Name.
   * @return the NAME
   */
  public String getName() {
    return (String) getAttributeInternal(NAME);
  }

  /**
   * Sets <code>value</code> as attribute value for NAME using the alias name Name.
   * @param value value to set the NAME
   */
  public void setName(String value) {
    setAttributeInternal(NAME, value);
  }


  /**
   * Gets the attribute value for STATUS_CODE using the alias name StatusCode.
   * @return the STATUS_CODE
   */
  public String getStatusCode() {
    return (String) getAttributeInternal(STATUSCODE);
  }

  /**
   * Sets <code>value</code> as attribute value for STATUS_CODE using the alias name StatusCode.
   * @param value value to set the STATUS_CODE
   */
  public void setStatusCode(String value) {
    setAttributeInternal(STATUSCODE, value);
  }

  /**
   * Gets the attribute value for STATUS_DATE using the alias name StatusDate.
   * @return the STATUS_DATE
   */
  public Date getStatusDate() {
    return (Date) getAttributeInternal(STATUSDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for STATUS_DATE using the alias name StatusDate.
   * @param value value to set the STATUS_DATE
   */
  public void setStatusDate(Date value) {
    setAttributeInternal(STATUSDATE, value);
  }

  /**
   * Gets the attribute value for SYNC_DATE using the alias name SyncDate.
   * @return the SYNC_DATE
   */
  public Date getSyncDate() {
    return (Date) getAttributeInternal(SYNCDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for SYNC_DATE using the alias name SyncDate.
   * @param value value to set the SYNC_DATE
   */
  public void setSyncDate(Date value) {
    setAttributeInternal(SYNCDATE, value);
  }

  /**
   * Gets the attribute value for SYNC_ID using the alias name SyncId.
   * @return the SYNC_ID
   */
  public String getSyncId() {
    return (String) getAttributeInternal(SYNCID);
  }

  /**
   * Sets <code>value</code> as attribute value for SYNC_ID using the alias name SyncId.
   * @param value value to set the SYNC_ID
   */
  public void setSyncId(String value) {
    setAttributeInternal(SYNCID, value);
  }

  /**
   * Gets the attribute value for TERMINATION_DATE using the alias name TerminationDate.
   * @return the TERMINATION_DATE
   */
  public Date getTerminationDate() {
    return (Date) getAttributeInternal(TERMINATIONDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for TERMINATION_DATE using the alias name TerminationDate.
   * @param value value to set the TERMINATION_DATE
   */
  public void setTerminationDate(Date value) {
    setAttributeInternal(TERMINATIONDATE, value);
  }

  /**
   * Gets the attribute value for UPDATE_DATE using the alias name UpdateDate.
   * @return the UPDATE_DATE
   */
  public Date getUpdateDate() {
    return (Date) getAttributeInternal(UPDATEDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for UPDATE_DATE using the alias name UpdateDate.
   * @param value value to set the UPDATE_DATE
   */
  public void setUpdateDate(Date value) {
    setAttributeInternal(UPDATEDATE, value);
  }

  /**
   * Gets the attribute value for UPDATE_USER_ID using the alias name UpdateUserId.
   * @return the UPDATE_USER_ID
   */
  public String getUpdateUserId() {
    return (String) getAttributeInternal(UPDATEUSERID);
  }

  /**
   * Sets <code>value</code> as attribute value for UPDATE_USER_ID using the alias name UpdateUserId.
   * @param value value to set the UPDATE_USER_ID
   */
  public void setUpdateUserId(String value) {
    setAttributeInternal(UPDATEUSERID, value);
  }


  /**
   * Gets the attribute value for IS_LAST using the alias name IsLast.
   * @return the IS_LAST
   */
  public Boolean getIsLast() {
    return (Boolean) getAttributeInternal(ISLAST);
  }

  /**
   * Sets <code>value</code> as attribute value for IS_LAST using the alias name IsLast.
   * @param value value to set the IS_LAST
   */
  public void setIsLast(Boolean value) {
    setAttributeInternal(ISLAST, value);
  }

  /**
   * Gets the attribute value for the calculated attribute QualifiedName.
   * @return the QualifiedName
   */
  public String getQualifiedName() {
    return (String) getAttributeInternal(QUALIFIEDNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute QualifiedName.
   * @param value value to set the  QualifiedName
   */
  public void setQualifiedName(String value) {
    setAttributeInternal(QUALIFIEDNAME, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
  
  public void start() {
      runStatement("begin plan_assumptions_pkg.starts(?); end;", true, getId().toString());

      this.refresh();
  }

  public void stop() {
      runStatement("begin plan_assumptions_pkg.stop(?); end;", true, getId().toString());

      this.refresh();
  }

  public void restart() {
      runStatement("begin plan_assumptions_pkg.restart(?); end;", true, getId().toString());

      this.refresh();
  }
}
