package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import java.sql.Date;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 29 17:47:04 EEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TaskLocalViewRowImpl extends IPMSViewRowImpl implements com.bayer.ipms.model.views.common.TaskLocalViewRow {


    public static final int ENTITY_TASK = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getId();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setId((Integer) value);
            }
        }
        ,
        TaskNumber {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getTaskNumber();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setTaskNumber((String) value);
            }
        }
        ,
        TaskDefinitionName {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getTaskDefinitionName();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setTaskDefinitionName((String) value);
            }
        }
        ,
        Title {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getTitle();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setTitle((String) value);
            }
        }
        ,
        Comment {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getComment();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setComment((String) value);
            }
        }
        ,
        State {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getState();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setState((String) value);
            }
        }
        ,
        CreatedDate {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setCreatedDate((Date) value);
            }
        }
        ,
        ExpirationDate {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getExpirationDate();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setExpirationDate((Date) value);
            }
        }
        ,
        Outcome {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getOutcome();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setOutcome((String) value);
            }
        }
        ,
        Priority {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getPriority();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setPriority((String) value);
            }
        }
        ,
        AssumptionRequestID {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getAssumptionRequestID();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setAssumptionRequestID((String) value);
            }
        }
        ,
        ProcessID {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getProcessID();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setProcessID((String) value);
            }
        }
        ,
        ProgramID {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getProgramID();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setProgramID((String) value);
            }
        }
        ,
        ProjectID {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getProjectID();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setProjectID((String) value);
            }
        }
        ,
        TitleOrdering {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getTitleOrdering();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectView {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getProjectView();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProcessView {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getProcessView();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProgramView {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getProgramView();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PlanAssumptionRequestView {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getPlanAssumptionRequestView();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LtcProcessView {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getLtcProcessView();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LtcProjectView {
            public Object get(TaskLocalViewRowImpl obj) {
                return obj.getLtcProjectView();
            }

            public void put(TaskLocalViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(TaskLocalViewRowImpl object);

        public abstract void put(TaskLocalViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int TASKNUMBER = AttributesEnum.TaskNumber.index();
    public static final int TASKDEFINITIONNAME = AttributesEnum.TaskDefinitionName.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int COMMENT = AttributesEnum.Comment.index();
    public static final int STATE = AttributesEnum.State.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int EXPIRATIONDATE = AttributesEnum.ExpirationDate.index();
    public static final int OUTCOME = AttributesEnum.Outcome.index();
    public static final int PRIORITY = AttributesEnum.Priority.index();
    public static final int ASSUMPTIONREQUESTID = AttributesEnum.AssumptionRequestID.index();
    public static final int PROCESSID = AttributesEnum.ProcessID.index();
    public static final int PROGRAMID = AttributesEnum.ProgramID.index();
    public static final int PROJECTID = AttributesEnum.ProjectID.index();
    public static final int TITLEORDERING = AttributesEnum.TitleOrdering.index();
    public static final int PROJECTVIEW = AttributesEnum.ProjectView.index();
    public static final int PROCESSVIEW = AttributesEnum.ProcessView.index();
    public static final int PROGRAMVIEW = AttributesEnum.ProgramView.index();
    public static final int PLANASSUMPTIONREQUESTVIEW = AttributesEnum.PlanAssumptionRequestView.index();
    public static final int LTCPROCESSVIEW = AttributesEnum.LtcProcessView.index();
    public static final int LTCPROJECTVIEW = AttributesEnum.LtcProjectView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TaskLocalViewRowImpl() {
    }

    /**
     * Gets Task entity object.
     * @return the Task
     */
    public IPMSEntityImpl getTask() {
        return (IPMSEntityImpl) getEntity(ENTITY_TASK);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for TASK_NUMBER using the alias name TaskNumber.
     * @return the TASK_NUMBER
     */
    public String getTaskNumber() {
        return (String) getAttributeInternal(TASKNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for TASK_NUMBER using the alias name TaskNumber.
     * @param value value to set the TASK_NUMBER
     */
    public void setTaskNumber(String value) {
        setAttributeInternal(TASKNUMBER, value);
    }

    /**
     * Gets the attribute value for DEFINITION_NAME using the alias name TaskDefinitionName.
     * @return the DEFINITION_NAME
     */
    public String getTaskDefinitionName() {
        return (String) getAttributeInternal(TASKDEFINITIONNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for DEFINITION_NAME using the alias name TaskDefinitionName.
     * @param value value to set the DEFINITION_NAME
     */
    public void setTaskDefinitionName(String value) {
        setAttributeInternal(TASKDEFINITIONNAME, value);
    }

    /**
     * Gets the attribute value for TITLE using the alias name Title.
     * @return the TITLE
     */
    public String getTitle() {
        return (String) getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE using the alias name Title.
     * @param value value to set the TITLE
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for COMMENTS using the alias name Comment.
     * @return the COMMENTS
     */
    public String getComment() {
        return (String) getAttributeInternal(COMMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for COMMENTS using the alias name Comment.
     * @param value value to set the COMMENTS
     */
    public void setComment(String value) {
        setAttributeInternal(COMMENT, value);
    }

    /**
     * Gets the attribute value for STATE using the alias name State.
     * @return the STATE
     */
    public String getState() {
        return (String) getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as attribute value for STATE using the alias name State.
     * @param value value to set the STATE
     */
    public void setState(String value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * Gets the attribute value for TASK_CREATED_DATE using the alias name CreatedDate.
     * @return the TASK_CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for TASK_CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the TASK_CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for EXPIRATION_DATE using the alias name ExpirationDate.
     * @return the EXPIRATION_DATE
     */
    public Date getExpirationDate() {
        return (Date) getAttributeInternal(EXPIRATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPIRATION_DATE using the alias name ExpirationDate.
     * @param value value to set the EXPIRATION_DATE
     */
    public void setExpirationDate(Date value) {
        setAttributeInternal(EXPIRATIONDATE, value);
    }

    /**
     * Gets the attribute value for OUTCOME using the alias name Outcome.
     * @return the OUTCOME
     */
    public String getOutcome() {
        return (String) getAttributeInternal(OUTCOME);
    }

    /**
     * Sets <code>value</code> as attribute value for OUTCOME using the alias name Outcome.
     * @param value value to set the OUTCOME
     */
    public void setOutcome(String value) {
        setAttributeInternal(OUTCOME, value);
    }

    /**
     * Gets the attribute value for PRIORITY using the alias name Priority.
     * @return the PRIORITY
     */
    public String getPriority() {
        return (String) getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIORITY using the alias name Priority.
     * @param value value to set the PRIORITY
     */
    public void setPriority(String value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for ASSUMPTION_REQUEST_ID using the alias name AssumptionRequestID.
     * @return the ASSUMPTION_REQUEST_ID
     */
    public String getAssumptionRequestID() {
        return (String) getAttributeInternal(ASSUMPTIONREQUESTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSUMPTION_REQUEST_ID using the alias name AssumptionRequestID.
     * @param value value to set the ASSUMPTION_REQUEST_ID
     */
    public void setAssumptionRequestID(String value) {
        setAttributeInternal(ASSUMPTIONREQUESTID, value);
    }

    /**
     * Gets the attribute value for PROCESS_ID using the alias name ProcessID.
     * @return the PROCESS_ID
     */
    public String getProcessID() {
        return (String) getAttributeInternal(PROCESSID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROCESS_ID using the alias name ProcessID.
     * @param value value to set the PROCESS_ID
     */
    public void setProcessID(String value) {
        setAttributeInternal(PROCESSID, value);
    }

    /**
     * Gets the attribute value for PROGRAM_ID using the alias name ProgramID.
     * @return the PROGRAM_ID
     */
    public String getProgramID() {
        return (String) getAttributeInternal(PROGRAMID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROGRAM_ID using the alias name ProgramID.
     * @param value value to set the PROGRAM_ID
     */
    public void setProgramID(String value) {
        setAttributeInternal(PROGRAMID, value);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectID.
     * @return the PROJECT_ID
     */
    public String getProjectID() {
        return (String) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectID.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectID(String value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TitleOrdering.
     * @return the TitleOrdering
     */
    public String getTitleOrdering() {
        return (String) getAttributeInternal(TITLEORDERING);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link ProjectView.
     */
    public Row getProjectView() {
        return (Row) getAttributeInternal(PROJECTVIEW);
    }

    /**
     * Sets the master-detail link ProjectView between this object and <code>value</code>.
     */
    public void setProjectView(Row value) {
        setAttributeInternal(PROJECTVIEW, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link ProcessView.
     */
    public Row getProcessView() {
        return (Row) getAttributeInternal(PROCESSVIEW);
    }

    /**
     * Sets the master-detail link ProcessView between this object and <code>value</code>.
     */
    public void setProcessView(Row value) {
        setAttributeInternal(PROCESSVIEW, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link ProgramView.
     */
    public Row getProgramView() {
        return (Row) getAttributeInternal(PROGRAMVIEW);
    }

    /**
     * Sets the master-detail link ProgramView between this object and <code>value</code>.
     */
    public void setProgramView(Row value) {
        setAttributeInternal(PROGRAMVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PlanAssumptionRequestView.
     */
    public RowIterator getPlanAssumptionRequestView() {
        return (RowIterator) getAttributeInternal(PLANASSUMPTIONREQUESTVIEW);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link LtcProcessView.
     */
    public Row getLtcProcessView() {
        return (Row) getAttributeInternal(LTCPROCESSVIEW);
    }

    /**
     * Sets the master-detail link LtcProcessView between this object and <code>value</code>.
     */
    public void setLtcProcessView(Row value) {
        setAttributeInternal(LTCPROCESSVIEW, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link LtcProjectView.
     */
    public Row getLtcProjectView() {
        return (Row) getAttributeInternal(LTCPROJECTVIEW);
    }

    /**
     * Sets the master-detail link LtcProjectView between this object and <code>value</code>.
     */
    public void setLtcProjectView(Row value) {
        setAttributeInternal(LTCPROJECTVIEW, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

