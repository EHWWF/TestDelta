package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.common.LtcValueViewRow;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 17 13:33:13 EEST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LtcValueViewRowImpl extends IPMSViewRowImpl implements LtcValueViewRow {


    public static final int ENTITY_LTCVALUE = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getId();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setId((BigDecimal) value);
            }
        }
        ,
        LtcpId {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getLtcpId();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FunctionCode {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getFunctionCode();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setFunctionCode((String) value);
            }
        }
        ,
        LtIntCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getLtIntCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setLtIntCost((BigDecimal) value);
            }
        }
        ,
        LtCroCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getLtCroCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setLtCroCost((BigDecimal) value);
            }
        }
        ,
        LtEcgCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getLtEcgCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setLtEcgCost((BigDecimal) value);
            }
        }
        ,
        LtOecCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getLtOecCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setLtOecCost((BigDecimal) value);
            }
        }
        ,
        ActIntCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getActIntCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ActCroCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getActCroCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ActEcgCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getActEcgCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ActOecCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getActOecCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FcIntCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getFcIntCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FcCroCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getFcCroCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FcEcgCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getFcEcgCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FcOecCost {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getFcOecCost();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Comments {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getComments();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setComments((String) value);
            }
        }
        ,
        LtcPlanView {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getLtcPlanView();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LtcFunctionView {
            public Object get(LtcValueViewRowImpl obj) {
                return obj.getLtcFunctionView();
            }

            public void put(LtcValueViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(LtcValueViewRowImpl object);

        public abstract void put(LtcValueViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int LTCPID = AttributesEnum.LtcpId.index();
    public static final int FUNCTIONCODE = AttributesEnum.FunctionCode.index();
    public static final int LTINTCOST = AttributesEnum.LtIntCost.index();
    public static final int LTCROCOST = AttributesEnum.LtCroCost.index();
    public static final int LTECGCOST = AttributesEnum.LtEcgCost.index();
    public static final int LTOECCOST = AttributesEnum.LtOecCost.index();
    public static final int ACTINTCOST = AttributesEnum.ActIntCost.index();
    public static final int ACTCROCOST = AttributesEnum.ActCroCost.index();
    public static final int ACTECGCOST = AttributesEnum.ActEcgCost.index();
    public static final int ACTOECCOST = AttributesEnum.ActOecCost.index();
    public static final int FCINTCOST = AttributesEnum.FcIntCost.index();
    public static final int FCCROCOST = AttributesEnum.FcCroCost.index();
    public static final int FCECGCOST = AttributesEnum.FcEcgCost.index();
    public static final int FCOECCOST = AttributesEnum.FcOecCost.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int LTCPLANVIEW = AttributesEnum.LtcPlanView.index();
    public static final int LTCFUNCTIONVIEW = AttributesEnum.LtcFunctionView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LtcValueViewRowImpl() {
    }

    /**
     * Gets LtcValue entity object.
     * @return the LtcValue
     */
    public IPMSEntityImpl getLtcValue() {
        return (IPMSEntityImpl) getEntity(ENTITY_LTCVALUE);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for LTCP_ID using the alias name LtcpId.
     * @return the LTCP_ID
     */
    public BigDecimal getLtcpId() {
        return (BigDecimal) getAttributeInternal(LTCPID);
    }

    /**
     * Gets the attribute value for FUNCTION_CODE using the alias name FunctionCode.
     * @return the FUNCTION_CODE
     */
    public String getFunctionCode() {
        return (String) getAttributeInternal(FUNCTIONCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for FUNCTION_CODE using the alias name FunctionCode.
     * @param value value to set the FUNCTION_CODE
     */
    public void setFunctionCode(String value) {
        setAttributeInternal(FUNCTIONCODE, value);
    }

    /**
     * Gets the attribute value for LT_INT_COST using the alias name LtIntCost.
     * @return the LT_INT_COST
     */
    public BigDecimal getLtIntCost() {
        return (BigDecimal) getAttributeInternal(LTINTCOST);
    }

    /**
     * Sets <code>value</code> as attribute value for LT_INT_COST using the alias name LtIntCost.
     * @param value value to set the LT_INT_COST
     */
    public void setLtIntCost(BigDecimal value) {
        setAttributeInternal(LTINTCOST, value);
    }

    /**
     * Gets the attribute value for LT_CRO_COST using the alias name LtCroCost.
     * @return the LT_CRO_COST
     */
    public BigDecimal getLtCroCost() {
        return (BigDecimal) getAttributeInternal(LTCROCOST);
    }

    /**
     * Sets <code>value</code> as attribute value for LT_CRO_COST using the alias name LtCroCost.
     * @param value value to set the LT_CRO_COST
     */
    public void setLtCroCost(BigDecimal value) {
        setAttributeInternal(LTCROCOST, value);
    }

    /**
     * Gets the attribute value for LT_ECG_COST using the alias name LtEcgCost.
     * @return the LT_ECG_COST
     */
    public BigDecimal getLtEcgCost() {
        return (BigDecimal) getAttributeInternal(LTECGCOST);
    }

    /**
     * Sets <code>value</code> as attribute value for LT_ECG_COST using the alias name LtEcgCost.
     * @param value value to set the LT_ECG_COST
     */
    public void setLtEcgCost(BigDecimal value) {
        setAttributeInternal(LTECGCOST, value);
    }

    /**
     * Gets the attribute value for LT_OEC_COST using the alias name LtOecCost.
     * @return the LT_OEC_COST
     */
    public BigDecimal getLtOecCost() {
        return (BigDecimal) getAttributeInternal(LTOECCOST);
    }

    /**
     * Sets <code>value</code> as attribute value for LT_OEC_COST using the alias name LtOecCost.
     * @param value value to set the LT_OEC_COST
     */
    public void setLtOecCost(BigDecimal value) {
        setAttributeInternal(LTOECCOST, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActIntCost.
     * @return the ActIntCost
     */
    public BigDecimal getActIntCost() {
        return (BigDecimal) getAttributeInternal(ACTINTCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute ActCroCost.
     * @return the ActCroCost
     */
    public BigDecimal getActCroCost() {
        return (BigDecimal) getAttributeInternal(ACTCROCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute ActEcgCost.
     * @return the ActEcgCost
     */
    public BigDecimal getActEcgCost() {
        return (BigDecimal) getAttributeInternal(ACTECGCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute ActOecCost.
     * @return the ActOecCost
     */
    public BigDecimal getActOecCost() {
        return (BigDecimal) getAttributeInternal(ACTOECCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute FcIntCost.
     * @return the FcIntCost
     */
    public BigDecimal getFcIntCost() {
        return (BigDecimal) getAttributeInternal(FCINTCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute FcCroCost.
     * @return the FcCroCost
     */
    public BigDecimal getFcCroCost() {
        return (BigDecimal) getAttributeInternal(FCCROCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute FcEcgCost.
     * @return the FcEcgCost
     */
    public BigDecimal getFcEcgCost() {
        return (BigDecimal) getAttributeInternal(FCECGCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute FcOecCost.
     * @return the FcOecCost
     */
    public BigDecimal getFcOecCost() {
        return (BigDecimal) getAttributeInternal(FCOECCOST);
    }

    /**
     * Gets the attribute value for COMMENTS using the alias name Comments.
     * @return the COMMENTS
     */
    public String getComments() {
        return (String) getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for COMMENTS using the alias name Comments.
     * @param value value to set the COMMENTS
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link LtcPlanView.
     */
    public Row getLtcPlanView() {
        return (Row) getAttributeInternal(LTCPLANVIEW);
    }

    /**
     * Sets the master-detail link LtcPlanView between this object and <code>value</code>.
     */
    public void setLtcPlanView(Row value) {
        setAttributeInternal(LTCPLANVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LtcFunctionView.
     */
    public RowSet getLtcFunctionView() {
        return (RowSet) getAttributeInternal(LTCFUNCTIONVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

