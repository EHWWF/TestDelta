package com.bayer.ipms.model.entities;

import com.bayer.ipms.model.base.IPMSEntityImpl;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 01 16:51:04 BST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProgramTopVersionImpl extends IPMSEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getId();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setId((BigDecimal) value);
            }
        }
        ,
        Name {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getName();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setName((String) value);
            }
        }
        ,
        Version {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getVersion();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setVersion((String) value);
            }
        }
        ,
        Description {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getDescription();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setDescription((String) value);
            }
        }
        ,
        ApprovalDate {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getApprovalDate();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setApprovalDate((Date) value);
            }
        }
        ,
        ParentId {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getParentId();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setParentId((BigDecimal) value);
            }
        }
        ,
        ProgramId {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getProgramId();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setProgramId((String) value);
            }
        }
        ,
        CreateDate {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getCreateDate();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setCreateDate((Date) value);
            }
        }
        ,
        VersionNr {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getVersionNr();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectId {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getProjectId();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setProjectId((String) value);
            }
        }
        ,
        ProgramTopValue {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getProgramTopValue();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProgramTopValue1 {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getProgramTopValue1();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Program {
            protected Object get(ProgramTopVersionImpl obj) {
                return obj.getProgram();
            }

            protected void put(ProgramTopVersionImpl obj, Object value) {
                obj.setProgram((IPMSEntityImpl) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected abstract Object get(ProgramTopVersionImpl object);

        protected abstract void put(ProgramTopVersionImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int APPROVALDATE = AttributesEnum.ApprovalDate.index();
    public static final int PARENTID = AttributesEnum.ParentId.index();
    public static final int PROGRAMID = AttributesEnum.ProgramId.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int VERSIONNR = AttributesEnum.VersionNr.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int PROGRAMTOPVALUE = AttributesEnum.ProgramTopValue.index();
    public static final int PROGRAMTOPVALUE1 = AttributesEnum.ProgramTopValue1.index();
    public static final int PROGRAM = AttributesEnum.Program.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProgramTopVersionImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Name, using the alias name Name.
     * @return the value of Name
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Name.
     * @param value value to set the Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for Version, using the alias name Version.
     * @return the value of Version
     */
    public String getVersion() {
        return (String) getAttributeInternal(VERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Version.
     * @param value value to set the Version
     */
    public void setVersion(String value) {
        setAttributeInternal(VERSION, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the value of Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ApprovalDate, using the alias name ApprovalDate.
     * @return the value of ApprovalDate
     */
    public Date getApprovalDate() {
        return (Date) getAttributeInternal(APPROVALDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApprovalDate.
     * @param value value to set the ApprovalDate
     */
    public void setApprovalDate(Date value) {
        setAttributeInternal(APPROVALDATE, value);
    }

    /**
     * Gets the attribute value for ParentId, using the alias name ParentId.
     * @return the value of ParentId
     */
    public BigDecimal getParentId() {
        return (BigDecimal) getAttributeInternal(PARENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentId.
     * @param value value to set the ParentId
     */
    public void setParentId(BigDecimal value) {
        setAttributeInternal(PARENTID, value);
    }

    /**
     * Gets the attribute value for ProgramId, using the alias name ProgramId.
     * @return the value of ProgramId
     */
    public String getProgramId() {
        return (String) getAttributeInternal(PROGRAMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgramId.
     * @param value value to set the ProgramId
     */
    public void setProgramId(String value) {
        setAttributeInternal(PROGRAMID, value);
    }

    /**
     * Gets the attribute value for CreateDate, using the alias name CreateDate.
     * @return the value of CreateDate
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreateDate.
     * @param value value to set the CreateDate
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for VersionNr, using the alias name VersionNr.
     * @return the value of VersionNr
     */
    public BigDecimal getVersionNr() {
        return (BigDecimal) getAttributeInternal(VERSIONNR);
    }

    /**
     * Gets the attribute value for ProjectId, using the alias name ProjectId.
     * @return the value of ProjectId
     */
    public String getProjectId() {
        return (String) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectId.
     * @param value value to set the ProjectId
     */
    public void setProjectId(String value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getProgramTopValue() {
        return (RowIterator) getAttributeInternal(PROGRAMTOPVALUE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getProgramTopValue1() {
        return (RowIterator) getAttributeInternal(PROGRAMTOPVALUE1);
    }

    /**
     * @return the associated entity com.bayer.ipms.model.base.IPMSEntityImpl.
     */
    public IPMSEntityImpl getProgram() {
        return (IPMSEntityImpl) getAttributeInternal(PROGRAM);
    }

    /**
     * Sets <code>value</code> as the associated entity com.bayer.ipms.model.base.IPMSEntityImpl.
     */
    public void setProgram(IPMSEntityImpl value) {
        setAttributeInternal(PROGRAM, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.bayer.ipms.model.entities.ProgramTopVersion");
    }


   

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        if( operation == DML_INSERT && getId() != null && getId().longValue() <= 0) {
            this.setId(null);
            
        }
        super.doDML(operation, e);
        
        
        System.err.println("after insert, id value is " + getId());
    }
}

