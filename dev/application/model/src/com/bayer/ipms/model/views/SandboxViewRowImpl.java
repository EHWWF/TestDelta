package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.common.SandboxViewRow;

import java.sql.Date;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 08 13:52:29 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SandboxViewRowImpl extends IPMSViewRowImpl implements SandboxViewRow {


    public static final int ENTITY_SANDBOX = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Code {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getCode();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setCode((String) value);
            }
        }
        ,
        CreateDate {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getCreateDate();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Description {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getDescription();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setDescription((String) value);
            }
        }
        ,
        Id {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getId();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setId((String) value);
            }
        }
        ,
        IsDateConstraints {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getIsDateConstraints();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setIsDateConstraints((Integer) value);
            }
        }
        ,
        Name {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getName();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setName((String) value);
            }
        }
        ,
        ProgramId {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getProgramId();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setProgramId((String) value);
            }
        }
        ,
        TimelineId {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getTimelineId();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setTimelineId((String) value);
            }
        }
        ,
        ReferenceId {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getReferenceId();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setReferenceId((String) value);
            }
        }
        ,
        SndId {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getSndId();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setSndId((String) value);
            }
        }
        ,
        IsActive {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getIsActive();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setIsActive((Integer) value);
            }
        }
        ,
        UpdateDate {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getUpdateDate();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IsSyncing {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getIsSyncing();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProgramView_2 {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getProgramView_2();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ImportSandboxTimelineView {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getImportSandboxTimelineView();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProgramAppModule_ProjectView1 {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getProgramAppModule_ProjectView1();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProgramAppModule_ProjectTimelineView1 {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getProgramAppModule_ProjectTimelineView1();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectTimelineView {
            public Object get(SandboxViewRowImpl obj) {
                return obj.getProjectTimelineView();
            }

            public void put(SandboxViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(SandboxViewRowImpl object);

        public abstract void put(SandboxViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CODE = AttributesEnum.Code.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int ISDATECONSTRAINTS = AttributesEnum.IsDateConstraints.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int PROGRAMID = AttributesEnum.ProgramId.index();
    public static final int TIMELINEID = AttributesEnum.TimelineId.index();
    public static final int REFERENCEID = AttributesEnum.ReferenceId.index();
    public static final int SNDID = AttributesEnum.SndId.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int ISSYNCING = AttributesEnum.IsSyncing.index();
    public static final int PROGRAMVIEW_2 = AttributesEnum.ProgramView_2.index();
    public static final int IMPORTSANDBOXTIMELINEVIEW = AttributesEnum.ImportSandboxTimelineView.index();
    public static final int PROGRAMAPPMODULE_PROJECTVIEW1 = AttributesEnum.ProgramAppModule_ProjectView1.index();
    public static final int PROGRAMAPPMODULE_PROJECTTIMELINEVIEW1 =
        AttributesEnum.ProgramAppModule_ProjectTimelineView1.index();
    public static final int PROJECTTIMELINEVIEW = AttributesEnum.ProjectTimelineView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SandboxViewRowImpl() {
    }


    /**
     * Gets Sandbox entity object.
     * @return the Sandbox
     */
    public IPMSEntityImpl getSandbox() {
        return (IPMSEntityImpl) getEntity(ENTITY_SANDBOX);
    }

    /**
     * Gets the attribute value for CODE using the alias name Code.
     * @return the CODE
     */
    public String getCode() {
        return (String) getAttributeInternal(CODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name Code.
     * @param value value to set the CODE
     */
    public void setCode(String value) {
        setAttributeInternal(CODE, value);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for IS_DATE_CONSTRAINTS using the alias name IsDateConstraints.
     * @return the IS_DATE_CONSTRAINTS
     */
    public Integer getIsDateConstraints() {
        return (Integer) getAttributeInternal(ISDATECONSTRAINTS);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_DATE_CONSTRAINTS using the alias name IsDateConstraints.
     * @param value value to set the IS_DATE_CONSTRAINTS
     */
    public void setIsDateConstraints(Integer value) {
        setAttributeInternal(ISDATECONSTRAINTS, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for PROGRAM_ID using the alias name ProgramId.
     * @return the PROGRAM_ID
     */
    public String getProgramId() {
        return (String) getAttributeInternal(PROGRAMID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROGRAM_ID using the alias name ProgramId.
     * @param value value to set the PROGRAM_ID
     */
    public void setProgramId(String value) {
        setAttributeInternal(PROGRAMID, value);
    }

    /**
     * Gets the attribute value for TIMELINE_ID using the alias name TimelineId.
     * @return the TIMELINE_ID
     */
    public String getTimelineId() {
        return (String) getAttributeInternal(TIMELINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for TIMELINE_ID using the alias name TimelineId.
     * @param value value to set the TIMELINE_ID
     */
    public void setTimelineId(String value) {
        setAttributeInternal(TIMELINEID, value);
    }

    /**
     * Gets the attribute value for REFERENCE_ID using the alias name ReferenceId.
     * @return the REFERENCE_ID
     */
    public String getReferenceId() {
        return (String) getAttributeInternal(REFERENCEID);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_ID using the alias name ReferenceId.
     * @param value value to set the REFERENCE_ID
     */
    public void setReferenceId(String value) {
        setAttributeInternal(REFERENCEID, value);
    }

    /**
     * Gets the attribute value for SND_ID using the alias name SndId.
     * @return the SND_ID
     */
    public String getSndId() {
        return (String) getAttributeInternal(SNDID);
    }

    /**
     * Sets <code>value</code> as attribute value for SND_ID using the alias name SndId.
     * @param value value to set the SND_ID
     */
    public void setSndId(String value) {
        setAttributeInternal(SNDID, value);
    }

    /**
     * Gets the attribute value for IS_ACTIVE using the alias name IsActive.
     * @return the IS_ACTIVE
     */
    public Integer getIsActive() {
        return (Integer) getAttributeInternal(ISACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_ACTIVE using the alias name IsActive.
     * @param value value to set the IS_ACTIVE
     */
    public void setIsActive(Integer value) {
        setAttributeInternal(ISACTIVE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IsSyncing.
     * @return the IsSyncing
     */
    public Integer getIsSyncing() {
        return (Integer) getAttributeInternal(ISSYNCING);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link ProgramView_2.
     */
    public Row getProgramView_2() {
        return (Row) getAttributeInternal(PROGRAMVIEW_2);
    }

    /**
     * Sets the master-detail link ProgramView_2 between this object and <code>value</code>.
     */
    public void setProgramView_2(Row value) {
        setAttributeInternal(PROGRAMVIEW_2, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ImportSandboxTimelineView.
     */
    public RowIterator getImportSandboxTimelineView() {
        return (RowIterator) getAttributeInternal(IMPORTSANDBOXTIMELINEVIEW);
    }

    /**
     * Gets the attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @return the UPDATE_DATE
     */
    public Date getUpdateDate() {
        return (Date) getAttributeInternal(UPDATEDATE);
    }


    /**
     * Gets the view accessor <code>RowSet</code> ProgramAppModule_ProjectView1.
     */
    public RowSet getProgramAppModule_ProjectView1() {
        return (RowSet) getAttributeInternal(PROGRAMAPPMODULE_PROJECTVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProgramAppModule_ProjectTimelineView1.
     */
    public RowSet getProgramAppModule_ProjectTimelineView1() {
        return (RowSet) getAttributeInternal(PROGRAMAPPMODULE_PROJECTTIMELINEVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProjectTimelineView.
     */
    public RowSet getProjectTimelineView() {
        return (RowSet) getAttributeInternal(PROJECTTIMELINEVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public void createStart() {
        runStatement("begin sandbox_pkg.create_start(?); end;", true, getId().toString());

        this.refresh();
    }    
    
    public void deleteStart() {
        runStatement("begin sandbox_pkg.delete_start(?); end;", true, getId().toString());

        this.refresh();
    }      
}
