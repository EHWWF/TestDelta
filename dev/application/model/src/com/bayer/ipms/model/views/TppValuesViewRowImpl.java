package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.common.TppValuesViewRow;

import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 29 12:49:13 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TppValuesViewRowImpl extends IPMSViewRowImpl implements TppValuesViewRow {


    public static final int ENTITY_TPPVALUES = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TppValuesViewRowImpl obj) {
                return obj.getId();
            }

            public void put(TppValuesViewRowImpl obj, Object value) {
                obj.setId((String) value);
            }
        }
        ,
        TppId {
            public Object get(TppValuesViewRowImpl obj) {
                return obj.getTppId();
            }

            public void put(TppValuesViewRowImpl obj, Object value) {
                obj.setTppId((String) value);
            }
        }
        ,
        SubcategoryCode {
            public Object get(TppValuesViewRowImpl obj) {
                return obj.getSubcategoryCode();
            }

            public void put(TppValuesViewRowImpl obj, Object value) {
                obj.setSubcategoryCode((String) value);
            }
        }
        ,
        KeyEdvProposition {
            public Object get(TppValuesViewRowImpl obj) {
                return obj.getKeyEdvProposition();
            }

            public void put(TppValuesViewRowImpl obj, Object value) {
                obj.setKeyEdvProposition((String) value);
            }
        }
        ,
        StandardOfCare {
            public Object get(TppValuesViewRowImpl obj) {
                return obj.getStandardOfCare();
            }

            public void put(TppValuesViewRowImpl obj, Object value) {
                obj.setStandardOfCare((String) value);
            }
        }
        ,
        Upside {
            public Object get(TppValuesViewRowImpl obj) {
                return obj.getUpside();
            }

            public void put(TppValuesViewRowImpl obj, Object value) {
                obj.setUpside((String) value);
            }
        }
        ,
        TargetedIn {
            public Object get(TppValuesViewRowImpl obj) {
                return obj.getTargetedIn();
            }

            public void put(TppValuesViewRowImpl obj, Object value) {
                obj.setTargetedIn((String) value);
            }
        }
        ,
        KeyDriver {
            public Object get(TppValuesViewRowImpl obj) {
                return obj.getKeyDriver();
            }

            public void put(TppValuesViewRowImpl obj, Object value) {
                obj.setKeyDriver((Boolean) value);
            }
        }
        ,
        UniqueSellingPoint {
            public Object get(TppValuesViewRowImpl obj) {
                return obj.getUniqueSellingPoint();
            }

            public void put(TppValuesViewRowImpl obj, Object value) {
                obj.setUniqueSellingPoint((Boolean) value);
            }
        }
        ,
        TargetedProfile {
            public Object get(TppValuesViewRowImpl obj) {
                return obj.getTargetedProfile();
            }

            public void put(TppValuesViewRowImpl obj, Object value) {
                obj.setTargetedProfile((String) value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(TppValuesViewRowImpl object);

        public abstract void put(TppValuesViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int TPPID = AttributesEnum.TppId.index();
    public static final int SUBCATEGORYCODE = AttributesEnum.SubcategoryCode.index();
    public static final int KEYEDVPROPOSITION = AttributesEnum.KeyEdvProposition.index();
    public static final int STANDARDOFCARE = AttributesEnum.StandardOfCare.index();
    public static final int UPSIDE = AttributesEnum.Upside.index();
    public static final int TARGETEDIN = AttributesEnum.TargetedIn.index();
    public static final int KEYDRIVER = AttributesEnum.KeyDriver.index();
    public static final int UNIQUESELLINGPOINT = AttributesEnum.UniqueSellingPoint.index();
    public static final int TARGETEDPROFILE = AttributesEnum.TargetedProfile.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TppValuesViewRowImpl() {
    }

    /**
     * Gets TppValues entity object.
     * @return the TppValues
     */
    public IPMSEntityImpl getTppValues() {
        return (IPMSEntityImpl) getEntity(ENTITY_TPPVALUES);
    }

    /**
     * Gets the attribute value for TPP_ID using the alias name TppId.
     * @return the TPP_ID
     */
    public String getTppId() {
        return (String) getAttributeInternal(TPPID);
    }

    /**
     * Sets <code>value</code> as attribute value for TPP_ID using the alias name TppId.
     * @param value value to set the TPP_ID
     */
    public void setTppId(String value) {
        setAttributeInternal(TPPID, value);
    }

    /**
     * Gets the attribute value for KEY_EDV_PROPOSITION using the alias name KeyEdvProposition.
     * @return the KEY_EDV_PROPOSITION
     */
    public String getKeyEdvProposition() {
        return (String) getAttributeInternal(KEYEDVPROPOSITION);
    }

    /**
     * Sets <code>value</code> as attribute value for KEY_EDV_PROPOSITION using the alias name KeyEdvProposition.
     * @param value value to set the KEY_EDV_PROPOSITION
     */
    public void setKeyEdvProposition(String value) {
        setAttributeInternal(KEYEDVPROPOSITION, value);
    }

    /**
     * Gets the attribute value for STANDARD_OF_CARE using the alias name StandardOfCare.
     * @return the STANDARD_OF_CARE
     */
    public String getStandardOfCare() {
        return (String) getAttributeInternal(STANDARDOFCARE);
    }

    /**
     * Sets <code>value</code> as attribute value for STANDARD_OF_CARE using the alias name StandardOfCare.
     * @param value value to set the STANDARD_OF_CARE
     */
    public void setStandardOfCare(String value) {
        setAttributeInternal(STANDARDOFCARE, value);
    }

    /**
     * Gets the attribute value for UPSIDE using the alias name Upside.
     * @return the UPSIDE
     */
    public String getUpside() {
        return (String) getAttributeInternal(UPSIDE);
    }

    /**
     * Sets <code>value</code> as attribute value for UPSIDE using the alias name Upside.
     * @param value value to set the UPSIDE
     */
    public void setUpside(String value) {
        setAttributeInternal(UPSIDE, value);
    }

    /**
     * Gets the attribute value for TARGETED_IN using the alias name TargetedIn.
     * @return the TARGETED_IN
     */
    public String getTargetedIn() {
        return (String) getAttributeInternal(TARGETEDIN);
    }

    /**
     * Sets <code>value</code> as attribute value for TARGETED_IN using the alias name TargetedIn.
     * @param value value to set the TARGETED_IN
     */
    public void setTargetedIn(String value) {
        setAttributeInternal(TARGETEDIN, value);
    }

    /**
     * Gets the attribute value for KEY_DRIVER using the alias name KeyDriver.
     * @return the KEY_DRIVER
     */
    public Boolean getKeyDriver() {
        return (Boolean) getAttributeInternal(KEYDRIVER);
    }

    /**
     * Sets <code>value</code> as attribute value for KEY_DRIVER using the alias name KeyDriver.
     * @param value value to set the KEY_DRIVER
     */
    public void setKeyDriver(Boolean value) {
        setAttributeInternal(KEYDRIVER, value);
    }

    /**
     * Gets the attribute value for UNIQUE_SELLING_POINT using the alias name UniqueSellingPoint.
     * @return the UNIQUE_SELLING_POINT
     */
    public Boolean getUniqueSellingPoint() {
        return (Boolean) getAttributeInternal(UNIQUESELLINGPOINT);
    }

    /**
     * Sets <code>value</code> as attribute value for UNIQUE_SELLING_POINT using the alias name UniqueSellingPoint.
     * @param value value to set the UNIQUE_SELLING_POINT
     */
    public void setUniqueSellingPoint(Boolean value) {
        setAttributeInternal(UNIQUESELLINGPOINT, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for TARGETED_PROFILE using the alias name TargetedProfile.
     * @return the TARGETED_PROFILE
     */
    public String getTargetedProfile() {
        return (String) getAttributeInternal(TARGETEDPROFILE);
    }

    /**
     * Sets <code>value</code> as attribute value for TARGETED_PROFILE using the alias name TargetedProfile.
     * @param value value to set the TARGETED_PROFILE
     */
    public void setTargetedProfile(String value) {
        setAttributeInternal(TARGETEDPROFILE, value);
    }

    /**
     * Gets the attribute value for SUBCATEGORY_CODE using the alias name SubcategoryCode.
     * @return the SUBCATEGORY_CODE
     */
    public String getSubcategoryCode() {
        return (String) getAttributeInternal(SUBCATEGORYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBCATEGORY_CODE using the alias name SubcategoryCode.
     * @param value value to set the SUBCATEGORY_CODE
     */
    public void setSubcategoryCode(String value) {
        setAttributeInternal(SUBCATEGORYCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

