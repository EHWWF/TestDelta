package com.bayer.ipms.model.entities.imports;

import com.bayer.ipms.model.base.IPMSEntityImpl;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 17 14:58:18 EEST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ImportTimelineImpl extends IPMSEntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        ImportId,
        StudyId,
        ParentWbsId,
        WbsId,
        ActivityId,
        Name,
        Code,
        ActionCode,
        StudyElementId,
        ReferenceId,
        ProjectId,
        TypeCode,
        NewStartDate,
        NewFinishDate,
        OldStartDate,
        OldFinishDate,
        StatusCode,
        CreateDate,
        StatusDescription,
        SequenceNumber,
        DateStatus,
        ImportData;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int IMPORTID = AttributesEnum.ImportId.index();
    public static final int STUDYID = AttributesEnum.StudyId.index();
    public static final int PARENTWBSID = AttributesEnum.ParentWbsId.index();
    public static final int WBSID = AttributesEnum.WbsId.index();
    public static final int ACTIVITYID = AttributesEnum.ActivityId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int CODE = AttributesEnum.Code.index();
    public static final int ACTIONCODE = AttributesEnum.ActionCode.index();
    public static final int STUDYELEMENTID = AttributesEnum.StudyElementId.index();
    public static final int REFERENCEID = AttributesEnum.ReferenceId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int TYPECODE = AttributesEnum.TypeCode.index();
    public static final int NEWSTARTDATE = AttributesEnum.NewStartDate.index();
    public static final int NEWFINISHDATE = AttributesEnum.NewFinishDate.index();
    public static final int OLDSTARTDATE = AttributesEnum.OldStartDate.index();
    public static final int OLDFINISHDATE = AttributesEnum.OldFinishDate.index();
    public static final int STATUSCODE = AttributesEnum.StatusCode.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int STATUSDESCRIPTION = AttributesEnum.StatusDescription.index();
    public static final int SEQUENCENUMBER = AttributesEnum.SequenceNumber.index();
    public static final int DATESTATUS = AttributesEnum.DateStatus.index();
    public static final int IMPORTDATA = AttributesEnum.ImportData.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ImportTimelineImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.bayer.ipms.model.entities.imports.ImportTimeline");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public String getId() {
        return (String)getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for ImportId, using the alias name ImportId.
     * @return the ImportId
     */
    public String getImportId() {
        return (String)getAttributeInternal(IMPORTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImportId.
     * @param value value to set the ImportId
     */
    public void setImportId(String value) {
        setAttributeInternal(IMPORTID, value);
    }

    /**
     * Gets the attribute value for StudyId, using the alias name StudyId.
     * @return the StudyId
     */
    public String getStudyId() {
        return (String)getAttributeInternal(STUDYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StudyId.
     * @param value value to set the StudyId
     */
    public void setStudyId(String value) {
        setAttributeInternal(STUDYID, value);
    }

    /**
     * Gets the attribute value for ParentWbsId, using the alias name ParentWbsId.
     * @return the ParentWbsId
     */
    public String getParentWbsId() {
        return (String)getAttributeInternal(PARENTWBSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentWbsId.
     * @param value value to set the ParentWbsId
     */
    public void setParentWbsId(String value) {
        setAttributeInternal(PARENTWBSID, value);
    }

    /**
     * Gets the attribute value for WbsId, using the alias name WbsId.
     * @return the WbsId
     */
    public String getWbsId() {
        return (String)getAttributeInternal(WBSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WbsId.
     * @param value value to set the WbsId
     */
    public void setWbsId(String value) {
        setAttributeInternal(WBSID, value);
    }

    /**
     * Gets the attribute value for ActivityId, using the alias name ActivityId.
     * @return the ActivityId
     */
    public String getActivityId() {
        return (String)getAttributeInternal(ACTIVITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActivityId.
     * @param value value to set the ActivityId
     */
    public void setActivityId(String value) {
        setAttributeInternal(ACTIVITYID, value);
    }

    /**
     * Gets the attribute value for Name, using the alias name Name.
     * @return the Name
     */
    public String getName() {
        return (String)getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Name.
     * @param value value to set the Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for Code, using the alias name Code.
     * @return the Code
     */
    public String getCode() {
        return (String)getAttributeInternal(CODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Code.
     * @param value value to set the Code
     */
    public void setCode(String value) {
        setAttributeInternal(CODE, value);
    }

    /**
     * Gets the attribute value for ActionCode, using the alias name ActionCode.
     * @return the ActionCode
     */
    public String getActionCode() {
        return (String)getAttributeInternal(ACTIONCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActionCode.
     * @param value value to set the ActionCode
     */
    public void setActionCode(String value) {
        setAttributeInternal(ACTIONCODE, value);
    }

    /**
     * Gets the attribute value for StudyElementId, using the alias name StudyElementId.
     * @return the StudyElementId
     */
    public String getStudyElementId() {
        return (String)getAttributeInternal(STUDYELEMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StudyElementId.
     * @param value value to set the StudyElementId
     */
    public void setStudyElementId(String value) {
        setAttributeInternal(STUDYELEMENTID, value);
    }


    /**
     * Gets the attribute value for ReferenceId, using the alias name ReferenceId.
     * @return the ReferenceId
     */
    public String getReferenceId() {
        return (String)getAttributeInternal(REFERENCEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferenceId.
     * @param value value to set the ReferenceId
     */
    public void setReferenceId(String value) {
        setAttributeInternal(REFERENCEID, value);
    }

    /**
     * Gets the attribute value for ProjectId, using the alias name ProjectId.
     * @return the ProjectId
     */
    public String getProjectId() {
        return (String)getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectId.
     * @param value value to set the ProjectId
     */
    public void setProjectId(String value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for TypeCode, using the alias name TypeCode.
     * @return the TypeCode
     */
    public String getTypeCode() {
        return (String)getAttributeInternal(TYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TypeCode.
     * @param value value to set the TypeCode
     */
    public void setTypeCode(String value) {
        setAttributeInternal(TYPECODE, value);
    }

    /**
     * Gets the attribute value for NewStartDate, using the alias name NewStartDate.
     * @return the NewStartDate
     */
    public Date getNewStartDate() {
        return (Date)getAttributeInternal(NEWSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewStartDate.
     * @param value value to set the NewStartDate
     */
    public void setNewStartDate(Date value) {
        setAttributeInternal(NEWSTARTDATE, value);
    }

    /**
     * Gets the attribute value for NewFinishDate, using the alias name NewFinishDate.
     * @return the NewFinishDate
     */
    public Date getNewFinishDate() {
        return (Date)getAttributeInternal(NEWFINISHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewFinishDate.
     * @param value value to set the NewFinishDate
     */
    public void setNewFinishDate(Date value) {
        setAttributeInternal(NEWFINISHDATE, value);
    }

    /**
     * Gets the attribute value for OldStartDate, using the alias name OldStartDate.
     * @return the OldStartDate
     */
    public Date getOldStartDate() {
        return (Date)getAttributeInternal(OLDSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OldStartDate.
     * @param value value to set the OldStartDate
     */
    public void setOldStartDate(Date value) {
        setAttributeInternal(OLDSTARTDATE, value);
    }

    /**
     * Gets the attribute value for OldFinishDate, using the alias name OldFinishDate.
     * @return the OldFinishDate
     */
    public Date getOldFinishDate() {
        return (Date)getAttributeInternal(OLDFINISHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OldFinishDate.
     * @param value value to set the OldFinishDate
     */
    public void setOldFinishDate(Date value) {
        setAttributeInternal(OLDFINISHDATE, value);
    }

    /**
     * Gets the attribute value for StatusCode, using the alias name StatusCode.
     * @return the StatusCode
     */
    public String getStatusCode() {
        return (String)getAttributeInternal(STATUSCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StatusCode.
     * @param value value to set the StatusCode
     */
    public void setStatusCode(String value) {
        setAttributeInternal(STATUSCODE, value);
    }

    /**
     * Gets the attribute value for CreateDate, using the alias name CreateDate.
     * @return the CreateDate
     */
    public Date getCreateDate() {
        return (Date)getAttributeInternal(CREATEDATE);
    }

    /**
     * Gets the attribute value for StatusDescription, using the alias name StatusDescription.
     * @return the StatusDescription
     */
    public String getStatusDescription() {
        return (String)getAttributeInternal(STATUSDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for StatusDescription.
     * @param value value to set the StatusDescription
     */
    public void setStatusDescription(String value) {
        setAttributeInternal(STATUSDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for SequenceNumber, using the alias name SequenceNumber.
     * @return the SequenceNumber
     */
    public BigDecimal getSequenceNumber() {
        return (BigDecimal)getAttributeInternal(SEQUENCENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for SequenceNumber.
     * @param value value to set the SequenceNumber
     */
    public void setSequenceNumber(BigDecimal value) {
        setAttributeInternal(SEQUENCENUMBER, value);
    }

    /**
     * Gets the attribute value for DateStatus, using the alias name DateStatus.
     * @return the DateStatus
     */
    public String getDateStatus() {
        return (String)getAttributeInternal(DATESTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateStatus.
     * @param value value to set the DateStatus
     */
    public void setDateStatus(String value) {
        setAttributeInternal(DATESTATUS, value);
    }

    /**
     * @return the associated entity com.bayer.ipms.model.base.IPMSEntityImpl.
     */
    public IPMSEntityImpl getImportData() {
        return (IPMSEntityImpl)getAttributeInternal(IMPORTDATA);
    }

    /**
     * Sets <code>value</code> as the associated entity com.bayer.ipms.model.base.IPMSEntityImpl.
     */
    public void setImportData(IPMSEntityImpl value) {
        setAttributeInternal(IMPORTDATA, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[]{id});
    }


}
