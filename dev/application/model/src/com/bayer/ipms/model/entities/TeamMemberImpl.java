package com.bayer.ipms.model.entities;

import com.bayer.ipms.model.base.IPMSEntityImpl;

import java.sql.Date;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 29 18:11:33 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TeamMemberImpl extends IPMSEntityImpl {
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id {
            protected Object get(TeamMemberImpl obj) {
                return obj.getId();
            }

            protected void put(TeamMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ProgramId {
            protected Object get(TeamMemberImpl obj) {
                return obj.getProgramId();
            }

            protected void put(TeamMemberImpl obj, Object value) {
                obj.setProgramId((String) value);
            }
        },
        CreateUserId {
            protected Object get(TeamMemberImpl obj) {
                return obj.getCreateUserId();
            }

            protected void put(TeamMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CreateDate {
            protected Object get(TeamMemberImpl obj) {
                return obj.getCreateDate();
            }

            protected void put(TeamMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        UpdateUserId {
            protected Object get(TeamMemberImpl obj) {
                return obj.getUpdateUserId();
            }

            protected void put(TeamMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        UpdateDate {
            protected Object get(TeamMemberImpl obj) {
                return obj.getUpdateDate();
            }

            protected void put(TeamMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        RoleCode {
            protected Object get(TeamMemberImpl obj) {
                return obj.getRoleCode();
            }

            protected void put(TeamMemberImpl obj, Object value) {
                obj.setRoleCode((String) value);
            }
        },
        EmployeeCode {
            protected Object get(TeamMemberImpl obj) {
                return obj.getEmployeeCode();
            }

            protected void put(TeamMemberImpl obj, Object value) {
                obj.setEmployeeCode((String) value);
            }
        },
        TeamMemberReadonlyVA {
            protected Object get(TeamMemberImpl obj) {
                return obj.getTeamMemberReadonlyVA();
            }

            protected void put(TeamMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ProgramReadonlyVA {
            protected Object get(TeamMemberImpl obj) {
                return obj.getProgramReadonlyVA();
            }

            protected void put(TeamMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected abstract Object get(TeamMemberImpl object);

        protected abstract void put(TeamMemberImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int PROGRAMID = AttributesEnum.ProgramId.index();
    public static final int CREATEUSERID = AttributesEnum.CreateUserId.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int UPDATEUSERID = AttributesEnum.UpdateUserId.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int ROLECODE = AttributesEnum.RoleCode.index();
    public static final int EMPLOYEECODE = AttributesEnum.EmployeeCode.index();
    public static final int TEAMMEMBERREADONLYVA = AttributesEnum.TeamMemberReadonlyVA.index();
    public static final int PROGRAMREADONLYVA = AttributesEnum.ProgramReadonlyVA.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TeamMemberImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.bayer.ipms.model.entities.TeamMember");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for ProgramId, using the alias name ProgramId.
     * @return the value of ProgramId
     */
    public String getProgramId() {
        return (String) getAttributeInternal(PROGRAMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgramId.
     * @param value value to set the ProgramId
     */
    public void setProgramId(String value) {
        setAttributeInternal(PROGRAMID, value);
    }

    /**
     * Gets the attribute value for CreateUserId, using the alias name CreateUserId.
     * @return the value of CreateUserId
     */
    public String getCreateUserId() {
        return (String) getAttributeInternal(CREATEUSERID);
    }

    /**
     * Gets the attribute value for CreateDate, using the alias name CreateDate.
     * @return the value of CreateDate
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Gets the attribute value for UpdateUserId, using the alias name UpdateUserId.
     * @return the value of UpdateUserId
     */
    public String getUpdateUserId() {
        return (String) getAttributeInternal(UPDATEUSERID);
    }

    /**
     * Gets the attribute value for UpdateDate, using the alias name UpdateDate.
     * @return the value of UpdateDate
     */
    public Date getUpdateDate() {
        return (Date) getAttributeInternal(UPDATEDATE);
    }

    /**
     * Gets the attribute value for RoleCode, using the alias name RoleCode.
     * @return the value of RoleCode
     */
    public String getRoleCode() {
        return (String) getAttributeInternal(ROLECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RoleCode.
     * @param value value to set the RoleCode
     */
    public void setRoleCode(String value) {
        setAttributeInternal(ROLECODE, value);
    }

    /**
     * Gets the attribute value for EmployeeCode, using the alias name EmployeeCode.
     * @return the value of EmployeeCode
     */
    public String getEmployeeCode() {
        return (String) getAttributeInternal(EMPLOYEECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeCode.
     * @param value value to set the EmployeeCode
     */
    public void setEmployeeCode(String value) {
        setAttributeInternal(EMPLOYEECODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * Gets the view accessor <code>RowSet</code> TeamMemberReadonlyVA.
     */
    public RowSet getTeamMemberReadonlyVA() {
        return (RowSet) getAttributeInternal(TEAMMEMBERREADONLYVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProgramReadonlyVA.
     */
    public RowSet getProgramReadonlyVA() {
        return (RowSet) getAttributeInternal(PROGRAMREADONLYVA);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }

    /**
     * Validation method for TeamMember.
     */
    public boolean validateTeamMember() {
        getProgramReadonlyVA().executeQuery();
        if (null != getProgramReadonlyVA() && getProgramReadonlyVA().getRowCount() == 0) {
            getTeamMemberReadonlyVA().executeQuery();
            if (null != getTeamMemberReadonlyVA() && getTeamMemberReadonlyVA().getRowCount() > 0) {
                return false;
            }
        }
        return true;
    }


}

