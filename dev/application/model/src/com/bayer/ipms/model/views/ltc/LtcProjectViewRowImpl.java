package com.bayer.ipms.model.views.ltc;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;
import com.bayer.ipms.model.views.ltc.common.LtcProjectViewRow;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 28 12:13:26 EEST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LtcProjectViewRowImpl extends IPMSViewRowImpl implements LtcProjectViewRow {


    public static final int ENTITY_LTCPROJECT = 0;
    public static final int ENTITY_PROJECT = 1;
    public static final int ENTITY_PROGRAM = 2;
    public static final int ENTITY_STRATEGICBUSINESSENTITY = 3;
    public static final int ENTITY_PROJECTAREA = 4;
    public static final int ENTITY_PROJECTSTATE = 5;
    public static final int ENTITY_DEVELOPMENTPHASE = 6;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getId();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setId((Integer) value);
            }
        }
        ,
        LtcProcessId {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getLtcProcessId();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setLtcProcessId((BigDecimal) value);
            }
        }
        ,
        ProjectId {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectId();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setProjectId((String) value);
            }
        }
        ,
        ProjectCode {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectCode();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectName {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectName();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        _ProjectId {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.get_ProjectId();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProgramName {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProgramName();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        _ProgramId {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.get_ProgramId();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectSbeName {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectSbeName();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectSbeCode {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectSbeCode();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setProjectSbeCode((String) value);
            }
        }
        ,
        ProjectAreaName {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectAreaName();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectStateName {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectStateName();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectAreaCode {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectAreaCode();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setProjectAreaCode((String) value);
            }
        }
        ,
        ProjectStateCode {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectStateCode();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setProjectStateCode((String) value);
            }
        }
        ,
        ProjectIsPortfolio {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectIsPortfolio();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectIsHpr {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProjectIsHpr();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DevelopmentPhaseName {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getDevelopmentPhaseName();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DevelopmentPhaseCode {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getDevelopmentPhaseCode();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IsActive {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getIsActive();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProgramNameQualified {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getProgramNameQualified();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LtcEstimateView {
            public Object get(LtcProjectViewRowImpl obj) {
                return obj.getLtcEstimateView();
            }

            public void put(LtcProjectViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(LtcProjectViewRowImpl object);

        public abstract void put(LtcProjectViewRowImpl object, Object value);

        public int index() {
            return com.bayer.ipms.model.views.ltc.LtcProjectViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return com.bayer.ipms.model.views.ltc.LtcProjectViewRowImpl.AttributesEnum.firstIndex() +
                   com.bayer.ipms.model.views.ltc.LtcProjectViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = com.bayer.ipms.model.views.ltc.LtcProjectViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int LTCPROCESSID = AttributesEnum.LtcProcessId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int PROJECTCODE = AttributesEnum.ProjectCode.index();
    public static final int PROJECTNAME = AttributesEnum.ProjectName.index();
    public static final int _PROJECTID = AttributesEnum._ProjectId.index();
    public static final int PROGRAMNAME = AttributesEnum.ProgramName.index();
    public static final int _PROGRAMID = AttributesEnum._ProgramId.index();
    public static final int PROJECTSBENAME = AttributesEnum.ProjectSbeName.index();
    public static final int PROJECTSBECODE = AttributesEnum.ProjectSbeCode.index();
    public static final int PROJECTAREANAME = AttributesEnum.ProjectAreaName.index();
    public static final int PROJECTSTATENAME = AttributesEnum.ProjectStateName.index();
    public static final int PROJECTAREACODE = AttributesEnum.ProjectAreaCode.index();
    public static final int PROJECTSTATECODE = AttributesEnum.ProjectStateCode.index();
    public static final int PROJECTISPORTFOLIO = AttributesEnum.ProjectIsPortfolio.index();
    public static final int PROJECTISHPR = AttributesEnum.ProjectIsHpr.index();
    public static final int DEVELOPMENTPHASENAME = AttributesEnum.DevelopmentPhaseName.index();
    public static final int DEVELOPMENTPHASECODE = AttributesEnum.DevelopmentPhaseCode.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int PROGRAMNAMEQUALIFIED = AttributesEnum.ProgramNameQualified.index();
    public static final int LTCESTIMATEVIEW = AttributesEnum.LtcEstimateView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LtcProjectViewRowImpl() {
    }

  

    /**
     * Gets LtcProject entity object.
     * @return the LtcProject
     */
    public com.bayer.ipms.model.entities.ltc.LtcProjectImpl getLtcProject() {
        return (com.bayer.ipms.model.entities.ltc.LtcProjectImpl) getEntity(ENTITY_LTCPROJECT);
    }


    /**
     * Gets Project entity object.
     * @return the Project
     */
    public IPMSEntityImpl getProject() {
        return (IPMSEntityImpl) getEntity(ENTITY_PROJECT);
    }

    /**
     * Gets Program entity object.
     * @return the Program
     */
    public IPMSEntityImpl getProgram() {
        return (IPMSEntityImpl) getEntity(ENTITY_PROGRAM);
    }

    /**
     * Gets StrategicBusinessEntity entity object.
     * @return the StrategicBusinessEntity
     */
    public IPMSEntityImpl getStrategicBusinessEntity() {
        return (IPMSEntityImpl) getEntity(ENTITY_STRATEGICBUSINESSENTITY);
    }

    /**
     * Gets ProjectArea entity object.
     * @return the ProjectArea
     */
    public IPMSEntityImpl getProjectArea() {
        return (IPMSEntityImpl) getEntity(ENTITY_PROJECTAREA);
    }

    /**
     * Gets ProjectState entity object.
     * @return the ProjectState
     */
    public IPMSEntityImpl getProjectState() {
        return (IPMSEntityImpl) getEntity(ENTITY_PROJECTSTATE);
    }

    /**
     * Gets DevelopmentPhase entity object.
     * @return the DevelopmentPhase
     */
    public IPMSEntityImpl getDevelopmentPhase() {
        return (IPMSEntityImpl) getEntity(ENTITY_DEVELOPMENTPHASE);
    }


    /**
     * Gets the attribute value for ID using the alias name Id2.
     * @return the ID
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id2.
     * @param value value to set the ID
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LtcProcessId.
     * @return the LtcProcessId
     */
    public BigDecimal getLtcProcessId() {
        return (BigDecimal) getAttributeInternal(LTCPROCESSID);
    }


    /**
     * Sets <code>value</code> as attribute value for LTC_PROCESS_ID using the alias name LtcProcessId.
     * @param value value to set the LTC_PROCESS_ID
     */
    public void setLtcProcessId(BigDecimal value) {
        setAttributeInternal(LTCPROCESSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectId.
     * @return the ProjectId
     */
    public String getProjectId() {
        return (String) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectId.
     * @param value value to set the  ProjectId
     */
    public void setProjectId(String value) {
        setAttributeInternal(PROJECTID, value);
    }


    /**
     * Gets the attribute value for CODE using the alias name ProjectCode.
     * @return the CODE
     */
    public String getProjectCode() {
        return (String) getAttributeInternal(PROJECTCODE);
    }

    /**
     * Gets the attribute value for NAME using the alias name ProjectName.
     * @return the NAME
     */
    public String getProjectName() {
        return (String) getAttributeInternal(PROJECTNAME);
    }

    /**
     * Gets the attribute value for ID using the alias name _ProjectId.
     * @return the ID
     */
    public String get_ProjectId() {
        return (String) getAttributeInternal(_PROJECTID);
    }

    /**
     * Gets the attribute value for NAME using the alias name ProgramName.
     * @return the NAME
     */
    public String getProgramName() {
        return (String) getAttributeInternal(PROGRAMNAME);
    }

    /**
     * Gets the attribute value for ID using the alias name _ProgramId.
     * @return the ID
     */
    public String get_ProgramId() {
        return (String) getAttributeInternal(_PROGRAMID);
    }

    /**
     * Gets the attribute value for NAME using the alias name ProjectSbeName.
     * @return the NAME
     */
    public String getProjectSbeName() {
        return (String) getAttributeInternal(PROJECTSBENAME);
    }

    /**
     * Gets the attribute value for CODE using the alias name ProjectSbeCode.
     * @return the CODE
     */
    public String getProjectSbeCode() {
        return (String) getAttributeInternal(PROJECTSBECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name ProjectSbeCode.
     * @param value value to set the CODE
     */
    public void setProjectSbeCode(String value) {
        setAttributeInternal(PROJECTSBECODE, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name ProjectAreaName.
     * @return the NAME
     */
    public String getProjectAreaName() {
        return (String) getAttributeInternal(PROJECTAREANAME);
    }

    /**
     * Gets the attribute value for NAME using the alias name ProjectStateName.
     * @return the NAME
     */
    public String getProjectStateName() {
        return (String) getAttributeInternal(PROJECTSTATENAME);
    }

    /**
     * Gets the attribute value for CODE using the alias name ProjectAreaCode.
     * @return the CODE
     */
    public String getProjectAreaCode() {
        return (String) getAttributeInternal(PROJECTAREACODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name ProjectAreaCode.
     * @param value value to set the CODE
     */
    public void setProjectAreaCode(String value) {
        setAttributeInternal(PROJECTAREACODE, value);
    }

    /**
     * Gets the attribute value for CODE using the alias name ProjectStateCode.
     * @return the CODE
     */
    public String getProjectStateCode() {
        return (String) getAttributeInternal(PROJECTSTATECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name ProjectStateCode.
     * @param value value to set the CODE
     */
    public void setProjectStateCode(String value) {
        setAttributeInternal(PROJECTSTATECODE, value);
    }

    /**
     * Gets the attribute value for IS_PORTFOLIO using the alias name ProjectIsPortfolio.
     * @return the IS_PORTFOLIO
     */
    public Boolean getProjectIsPortfolio() {
        return (Boolean) getAttributeInternal(PROJECTISPORTFOLIO);
    }

    /**
     * Gets the attribute value for IS_HPR using the alias name ProjectIsHpr.
     * @return the IS_HPR
     */
    public Boolean getProjectIsHpr() {
        return (Boolean) getAttributeInternal(PROJECTISHPR);
    }

    /**
     * Gets the attribute value for NAME using the alias name DevelopmentPhaseName.
     * @return the NAME
     */
    public String getDevelopmentPhaseName() {
        return (String) getAttributeInternal(DEVELOPMENTPHASENAME);
    }

    /**
     * Gets the attribute value for CODE using the alias name DevelopmentPhaseCode.
     * @return the CODE
     */
    public String getDevelopmentPhaseCode() {
        return (String) getAttributeInternal(DEVELOPMENTPHASECODE);
    }

    /**
     * Gets the attribute value for the calculated attribute IsActive.
     * @return the IsActive
     */
    public Boolean getIsActive() {
        return (Boolean) getAttributeInternal(ISACTIVE);
    }

    /**
     * Gets the attribute value for the calculated attribute ProgramNameQualified.
     * @return the ProgramNameQualified
     */
    public String getProgramNameQualified() {
        return (String) getAttributeInternal(PROGRAMNAMEQUALIFIED);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LtcEstimateView.
     */
    public RowIterator getLtcEstimateView() {
        return (RowIterator) getAttributeInternal(LTCESTIMATEVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

