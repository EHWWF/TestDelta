package com.bayer.ipms.model.views.imports;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.imports.common.ImportD1ViewRow;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 19 13:56:50 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ImportD1ViewRowImpl extends IPMSViewRowImpl implements ImportD1ViewRow {


    public static final int ENTITY_IMPORTD1 = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ProjectId {
            public Object get(ImportD1ViewRowImpl obj) {
                return obj.getProjectId();
            }

            public void put(ImportD1ViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectName {
            public Object get(ImportD1ViewRowImpl obj) {
                return obj.getProjectName();
            }

            public void put(ImportD1ViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Trg {
            public Object get(ImportD1ViewRowImpl obj) {
                return obj.getTrg();
            }

            public void put(ImportD1ViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Er {
            public Object get(ImportD1ViewRowImpl obj) {
                return obj.getEr();
            }

            public void put(ImportD1ViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TargetGeneCode {
            public Object get(ImportD1ViewRowImpl obj) {
                return obj.getTargetGeneCode();
            }

            public void put(ImportD1ViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        GeneralProjectFrame {
            public Object get(ImportD1ViewRowImpl obj) {
                return obj.getGeneralProjectFrame();
            }

            public void put(ImportD1ViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StatusCode {
            public Object get(ImportD1ViewRowImpl obj) {
                return obj.getStatusCode();
            }

            public void put(ImportD1ViewRowImpl obj, Object value) {
                obj.setStatusCode((String) value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(ImportD1ViewRowImpl object);

        public abstract void put(ImportD1ViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int PROJECTNAME = AttributesEnum.ProjectName.index();
    public static final int TRG = AttributesEnum.Trg.index();
    public static final int ER = AttributesEnum.Er.index();
    public static final int TARGETGENECODE = AttributesEnum.TargetGeneCode.index();
    public static final int GENERALPROJECTFRAME = AttributesEnum.GeneralProjectFrame.index();
    public static final int STATUSCODE = AttributesEnum.StatusCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ImportD1ViewRowImpl() {
    }

    /**
     * Gets ImportD1 entity object.
     * @return the ImportD1
     */
    public IPMSEntityImpl getImportD1() {
        return (IPMSEntityImpl) getEntity(ENTITY_IMPORTD1);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public BigDecimal getProjectId() {
        return (BigDecimal) getAttributeInternal(PROJECTID);
    }

    /**
     * Gets the attribute value for PROJECT_NAME using the alias name ProjectName.
     * @return the PROJECT_NAME
     */
    public String getProjectName() {
        return (String) getAttributeInternal(PROJECTNAME);
    }

    /**
     * Gets the attribute value for TRG using the alias name Trg.
     * @return the TRG
     */
    public String getTrg() {
        return (String) getAttributeInternal(TRG);
    }

    /**
     * Gets the attribute value for ER using the alias name Er.
     * @return the ER
     */
    public String getEr() {
        return (String) getAttributeInternal(ER);
    }

    /**
     * Gets the attribute value for TARGET_GENE_CODE using the alias name TargetGeneCode.
     * @return the TARGET_GENE_CODE
     */
    public String getTargetGeneCode() {
        return (String) getAttributeInternal(TARGETGENECODE);
    }

    /**
     * Gets the attribute value for GENERAL_PROJECT_FRAME using the alias name GeneralProjectFrame.
     * @return the GENERAL_PROJECT_FRAME
     */
    public String getGeneralProjectFrame() {
        return (String) getAttributeInternal(GENERALPROJECTFRAME);
    }

    /**
     * Gets the attribute value for STATUS_CODE using the alias name StatusCode.
     * @return the STATUS_CODE
     */
    public String getStatusCode() {
        return (String) getAttributeInternal(STATUSCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for STATUS_CODE using the alias name StatusCode.
     * @param value value to set the STATUS_CODE
     */
    public void setStatusCode(String value) {
        if ("false".equals(value) && "READY".equals(getAttributeInternal(STATUSCODE))) {
            setAttributeInternal(STATUSCODE, "NEW");
        } else if ("true".equals(value)) {
            setAttributeInternal(STATUSCODE, "READY");
        }
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

}

