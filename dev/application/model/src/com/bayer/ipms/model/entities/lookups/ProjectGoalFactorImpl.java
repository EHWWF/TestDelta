package com.bayer.ipms.model.entities.lookups;

import com.bayer.ipms.model.base.IPMSEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 16 15:03:07 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProjectGoalFactorImpl extends IPMSEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ProjectGoalFactorImpl obj) {
                return obj.getAttributeInternal(index());
            }

            public void put(ProjectGoalFactorImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectId {
            public Object get(ProjectGoalFactorImpl obj) {
                return obj.getAttributeInternal(index());
            }

            public void put(ProjectGoalFactorImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MilestoneType {
            public Object get(ProjectGoalFactorImpl obj) {
                return obj.getAttributeInternal(index());
            }

            public void put(ProjectGoalFactorImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Factor {
            public Object get(ProjectGoalFactorImpl obj) {
                return obj.getAttributeInternal(index());
            }

            public void put(ProjectGoalFactorImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectCode {
            public Object get(ProjectGoalFactorImpl obj) {
                return obj.getAttributeInternal(index());
            }

            public void put(ProjectGoalFactorImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AreaCode {
            public Object get(ProjectGoalFactorImpl obj) {
                return obj.getAttributeInternal(index());
            }

            public void put(ProjectGoalFactorImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectName {
            public Object get(ProjectGoalFactorImpl obj) {
                return obj.getAttributeInternal(index());
            }

            public void put(ProjectGoalFactorImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SrchException {
            public Object get(ProjectGoalFactorImpl obj) {
                return obj.getAttributeInternal(index());
            }

            public void put(ProjectGoalFactorImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Factorflag {
            public Object get(ProjectGoalFactorImpl obj) {
                return obj.getAttributeInternal(index());
            }

            public void put(ProjectGoalFactorImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ProjectGoalFactorImpl object);

        public abstract void put(ProjectGoalFactorImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int MILESTONETYPE = AttributesEnum.MilestoneType.index();
    public static final int FACTOR = AttributesEnum.Factor.index();
    public static final int PROJECTCODE = AttributesEnum.ProjectCode.index();
    public static final int AREACODE = AttributesEnum.AreaCode.index();
    public static final int PROJECTNAME = AttributesEnum.ProjectName.index();
    public static final int SRCHEXCEPTION = AttributesEnum.SrchException.index();
    public static final int FACTORFLAG = AttributesEnum.Factorflag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProjectGoalFactorImpl() {
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.bayer.ipms.model.entities.lookups.ProjectGoalFactor");
    }


    /**
     * Add locking logic here.
     */
    public void lock() {
        //disable locking row
        //super->lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        //DML operations moved to external method ProjectD1ViewBean.fillProjectGoalFactors
        //super->doDML(operation, e);
    }
}

