package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.common.ProjectDeviceViewRow;

import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 04 18:40:34 EEST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProjectDeviceViewRowImpl extends IPMSViewRowImpl implements ProjectDeviceViewRow {
    public static final int ENTITY_PROJECTDEVICE = 0;
    public static final int ENTITY_PROJECT = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ProjectId {
            public Object get(ProjectDeviceViewRowImpl obj) {
                return obj.getProjectId();
            }

            public void put(ProjectDeviceViewRowImpl obj, Object value) {
                obj.setProjectId((String) value);
            }
        }
        ,
        Id {
            public Object get(ProjectDeviceViewRowImpl obj) {
                return obj.getId();
            }

            public void put(ProjectDeviceViewRowImpl obj, Object value) {
                obj.setId((String) value);
            }
        }
        ,
        RelatedProjectId {
            public Object get(ProjectDeviceViewRowImpl obj) {
                return obj.getRelatedProjectId();
            }

            public void put(ProjectDeviceViewRowImpl obj, Object value) {
                obj.setRelatedProjectId((String) value);
            }
        }
        ,
        PrjCode {
            public Object get(ProjectDeviceViewRowImpl obj) {
                return obj.getPrjCode();
            }

            public void put(ProjectDeviceViewRowImpl obj, Object value) {
                obj.setPrjCode((String) value);
            }
        }
        ,
        PrjName {
            public Object get(ProjectDeviceViewRowImpl obj) {
                return obj.getPrjName();
            }

            public void put(ProjectDeviceViewRowImpl obj, Object value) {
                obj.setPrjName((String) value);
            }
        }
        ,
        Id1 {
            public Object get(ProjectDeviceViewRowImpl obj) {
                return obj.getId1();
            }

            public void put(ProjectDeviceViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UpdateDate {
            public Object get(ProjectDeviceViewRowImpl obj) {
                return obj.getUpdateDate();
            }

            public void put(ProjectDeviceViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(ProjectDeviceViewRowImpl object);

        public abstract void put(ProjectDeviceViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int RELATEDPROJECTID = AttributesEnum.RelatedProjectId.index();
    public static final int PRJCODE = AttributesEnum.PrjCode.index();
    public static final int PRJNAME = AttributesEnum.PrjName.index();
    public static final int ID1 = AttributesEnum.Id1.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProjectDeviceViewRowImpl() {
    }

    /**
     * Gets ProjectDevice entity object.
     * @return the ProjectDevice
     */
    public IPMSEntityImpl getProjectDevice() {
        return (IPMSEntityImpl) getEntity(ENTITY_PROJECTDEVICE);
    }

    /**
     * Gets Project entity object.
     * @return the Project
     */
    public IPMSEntityImpl getProject() {
        return (IPMSEntityImpl) getEntity(ENTITY_PROJECT);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public String getProjectId() {
        return (String) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(String value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for RELATED_PROJECT_ID using the alias name RelatedProjectId.
     * @return the RELATED_PROJECT_ID
     */
    public String getRelatedProjectId() {
        return (String) getAttributeInternal(RELATEDPROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for RELATED_PROJECT_ID using the alias name RelatedProjectId.
     * @param value value to set the RELATED_PROJECT_ID
     */
    public void setRelatedProjectId(String value) {
        setAttributeInternal(RELATEDPROJECTID, value);
    }

    /**
     * Gets the attribute value for CODE using the alias name PrjCode.
     * @return the CODE
     */
    public String getPrjCode() {
        return (String) getAttributeInternal(PRJCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name PrjCode.
     * @param value value to set the CODE
     */
    public void setPrjCode(String value) {
        setAttributeInternal(PRJCODE, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name PrjName.
     * @return the NAME
     */
    public String getPrjName() {
        return (String) getAttributeInternal(PRJNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name PrjName.
     * @param value value to set the NAME
     */
    public void setPrjName(String value) {
        setAttributeInternal(PRJNAME, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id1.
     * @return the ID
     */
    public String getId1() {
        return (String) getAttributeInternal(ID1);
    }

    /**
     * Gets the attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @return the UPDATE_DATE
     */
    public Date getUpdateDate() {
        return (Date) getAttributeInternal(UPDATEDATE);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

