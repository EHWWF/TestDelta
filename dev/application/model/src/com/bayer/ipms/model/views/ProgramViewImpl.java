package com.bayer.ipms.model.views;


import com.bayer.ipms.model.base.IPMSViewObjectImpl;
import com.bayer.ipms.model.services.ProgramAppModuleImpl;
import com.bayer.ipms.model.utils.IPMSArrayList;
import com.bayer.ipms.model.utils.ModelUtils;
import com.bayer.ipms.model.views.common.ProgramView;
import com.bayer.ipms.model.views.common.ProjectView;

import java.sql.Date;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.common.ViewCriteriaImpl;
import oracle.jbo.server.AssociationDefImpl;
import oracle.jbo.server.AttributeListImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowSetImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 16 10:56:31 EEST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProgramViewImpl extends IPMSViewObjectImpl implements ProgramView {
    /**
     * This is the default constructor (do not remove).
     */
    public ProgramViewImpl() {
    }


    /**
     * Returns the bind variable value for UserPMO.
     * @return bind variable value for UserPMO
     */
    public String getUserPMO() {
        return (String) ensureVariableManager().getVariableValue("UserPMO");
    }

    /**
     * Returns the bind variable value for UserGPDC.
     * @return bind variable value for UserGPDC
     */
    public String getUserGPDC() {
        return (String) ensureVariableManager().getVariableValue("UserGPDC");
    }

    /**
     * Returns the bind variable value for UserFunction.
     * @return bind variable value for UserFunction
     */
    public String getUserFunction() {
        return (String) ensureVariableManager().getVariableValue("UserFunction");
    }


    @Override
    protected ViewRowSetImpl createViewLinkAccessorRS(AssociationDefImpl associationDefImpl,
                                                      ViewObjectImpl viewObjectImpl, Row row, Object[] object) {

        ViewRowSetImpl rs = super.createViewLinkAccessorRS(associationDefImpl, viewObjectImpl, row, object);

        if (rs.getViewObject() instanceof ProjectView) {
            ProjectView vo = (ProjectView) rs.getViewObject();

            vo.getViewCriteriaManager().setApplyViewCriteriaNames(getViewCriteriaManager().getApplyViewCriteriaNames());

            vo.setSearchProjectName(getSearchProjectNameVar());
            vo.setSearchProjectNameMnt(getSearchProjectNameMnt());
            vo.setSearchProjectCode(getSearchProjectCodeVar());
            vo.setSearchProjectCodeMnt(getSearchProjectCodeMnt());
            vo.setSearchAreaCode(getSearchAreaCodeVar());
            vo.setSearchIsHpr(getSearchIsHprVar());
            vo.setSearchProjectIsActive(getSearchProjectIsActiveVar());
            vo.setSearchIsPortfolio(getSearchIsPortfolioVar());
            vo.setSearchSbeCode(getSearchSbeCodeVar());
            vo.setSearchDevelopmentPhaseCodeVar(getSearchProjectDevPhaseVar());
            vo.setSearchStatusVar(getSearchStatusVar());
            vo.setSearchStatusMnt(getSearchStatusMnt());
            vo.setSearchStateVar(getSearchProjectStateVar());
            vo.setSearchStateMntVar(getSearchProjectStateMntVar());
            vo.setSearchBUCodeVar(getSearchProjectBUCodeVar());
            vo.setCurrentLeTagIdVar(getCurrentLeTagIdVar());
            vo.setSearchProjectBayCodeVar(getSearchProjectBayCodeVar());
            vo.setSearchProjectTaCodeVar(getSearchProjectTaCodeVar());
            vo.setSearchStudyCodeVar(getSearchStudyCodeVar());

            if (getSearchProjectPocDateFromVar() != null) {
                vo.setSearchPocDateFromVar(getSearchProjectPocDateFromVar().toString());
            }
            if (getSearchProjectPocDateToVar() != null) {
                vo.setSearchPocDateToVar(getSearchProjectPocDateToVar().toString());
            }

        }

        return rs;
    }


    /**
     * Returns the variable value for SearchProjectName.
     * @return variable value for SearchProjectName
     */
    public String getSearchProjectNameVar() {
        return (String) ensureVariableManager().getVariableValue("SearchProjectNameVar");
    }

    /**
     * Sets <code>value</code> for variable SearchProjectName.
     * @param value value to bind as SearchProjectName
     */
    public void setSearchProjectNameVar(String value) {
        ensureVariableManager().setVariableValue("SearchProjectNameVar", value);
    }

    /**
     * Returns the variable value for SearchProjectCode.
     * @return variable value for SearchProjectCode
     */
    public String getSearchProjectCodeVar() {
        return (String) ensureVariableManager().getVariableValue("SearchProjectCodeVar");
    }

    /**
     * Sets <code>value</code> for variable SearchProjectCode.
     * @param value value to bind as SearchProjectCode
     */
    public void setSearchProjectCodeVar(String value) {
        ensureVariableManager().setVariableValue("SearchProjectCodeVar", value);
    }


    /**
     * Returns the variable value for SearchIsHpr.
     * @return variable value for SearchIsHpr
     */
    public Boolean getSearchIsHprVar() {
        return (Boolean) ensureVariableManager().getVariableValue("SearchIsHprVar");
    }

    /**
     * Sets <code>value</code> for variable SearchIsHpr.
     * @param value value to bind as SearchIsHpr
     */
    public void setSearchIsHprVar(Boolean value) {
        ensureVariableManager().setVariableValue("SearchIsHprVar", value);
    }

    /**
     * Returns the bind variable value for SearchAreaCode.
     * @return bind variable value for SearchAreaCode
     */
    public String getSearchAreaCodeVar() {
        return (String) ensureVariableManager().getVariableValue("SearchAreaCodeVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchAreaCode.
     * @param value value to bind as SearchAreaCode
     */
    public void setSearchAreaCodeVar(String value) {
        ensureVariableManager().setVariableValue("SearchAreaCodeVar", value);

    }

    /**
     * Returns the bind variable value for SearchIsPortfolio.
     * @return bind variable value for SearchIsPortfolio
     */
    public Boolean getSearchIsPortfolioVar() {
        return (Boolean) ensureVariableManager().getVariableValue("SearchIsPortfolioVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchIsPortfolio.
     * @param value value to bind as SearchIsPortfolio
     */
    public void setSearchIsPortfolioVar(Boolean value) {
        ensureVariableManager().setVariableValue("SearchIsPortfolioVar", value);
    }

    /**
     * Returns the bind variable value for SearchSbeCode.
     * @return bind variable value for SearchSbeCode
     */
    public String getSearchSbeCodeVar() {
        return (String) getNamedWhereClauseParam("SearchSbeCodeVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchSbeCode.
     * @param value value to bind as SearchSbeCode
     */
    public void setSearchSbeCodeVar(String value) {
        ensureVariableManager().setVariableValue("SearchSbeCodeVar", value);
    }


    /**
     * Returns the bind variable value for SearchStatusVar.
     * @return bind variable value for SearchStatusVar
     */
    public String getSearchStatusVar() {
        return (String) ensureVariableManager().getVariableValue("SearchStatusVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchStatusVar.
     * @param value value to bind as SearchStatusVar
     */
    public void setSearchStatusVar(String value) {
        ensureVariableManager().setVariableValue("SearchStatusVar", value);
    }


    /**
     * Returns the bind variable value for SearchProgramIsEmpty.
     * @return bind variable value for SearchProgramIsEmpty
     */
    public Boolean getSearchProgramIsEmptyVar() {
        return (Boolean) ensureVariableManager().getVariableValue("SearchProgramIsEmptyVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProgramIsEmpty.
     * @param value value to bind as SearchProgramIsEmpty
     */
    public void setSearchProgramIsEmptyVar(Boolean value) {
        ensureVariableManager().setVariableValue("SearchProgramIsEmptyVar", value);
    }

    /**
     * Returns the bind variable value for SearchStatusMnt.
     * @return bind variable value for SearchStatusMnt
     */
    public String getSearchStatusMnt() {
        return (String) ensureVariableManager().getVariableValue("SearchStatusMnt");
    }

    /**
     * Sets <code>value</code> for bind variable SearchStatusMnt.
     * @param value value to bind as SearchStatusMnt
     */
    public void setSearchStatusMnt(String value) {
        ensureVariableManager().setVariableValue("SearchStatusMnt", value);
    }

    /**
     * Returns the bind variable value for SearchProjectNameMnt.
     * @return bind variable value for SearchProjectNameMnt
     */
    public String getSearchProjectNameMnt() {
        return (String) ensureVariableManager().getVariableValue("SearchProjectNameMnt");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectNameMnt.
     * @param value value to bind as SearchProjectNameMnt
     */
    public void setSearchProjectNameMnt(String value) {
        ensureVariableManager().setVariableValue("SearchProjectNameMnt", value);
    }

    /**
     * Returns the bind variable value for SearchProjectCodeMnt.
     * @return bind variable value for SearchProjectCodeMnt
     */
    public String getSearchProjectCodeMnt() {
        return (String) ensureVariableManager().getVariableValue("SearchProjectCodeMnt");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectCodeMnt.
     * @param value value to bind as SearchProjectCodeMnt
     */
    public void setSearchProjectCodeMnt(String value) {
        ensureVariableManager().setVariableValue("SearchProjectCodeMnt", value);
    }

    /**
     * Returns the bind variable value for AllowedProjectTypes.
     * @return bind variable value for AllowedProjectTypes
     */
    public String getAllowedProjectTypes() {
        IPMSArrayList list = ModelUtils.getCurrUserProjectTypes();
        return list.size() > 0 ? list.toStringList() : null;
    }

    /**
     * Sets <code>value</code> for bind variable AllowedProjectTypes.
     * @param value value to bind as AllowedProjectTypes
     */
    public void setAllowedProjectTypes(String value) {
        ensureVariableManager().setVariableValue("AllowedProjectTypes", value);
    }

    /**
     * Returns the bind variable value for AllowedAssignedProjectTypes.
     * @return bind variable value for AllowedAssignedProjectTypes
     */
    public String getAllowedAssignedProjectTypes() {
        IPMSArrayList list = ModelUtils.getCurrUserAssignedProjectTypes();
        return list.size() > 0 ? list.toStringList() : null;
    }

    /**
     * Sets <code>value</code> for bind variable AllowedAssignedProjectTypes.
     * @param value value to bind as AllowedAssignedProjectTypes
     */
    public void setAllowedAssignedProjectTypes(String value) {
        ensureVariableManager().setVariableValue("AllowedAssignedProjectTypes", value);
    }

    /**
     * Returns the bind variable value for UserNameVar.
     * @return bind variable value for UserNameVar
     */
    public String getUserNameVar() {
        return (String) ensureVariableManager().getVariableValue("UserNameVar");
    }

    /**
     * Returns the bind variable value for RoleTypify.
     * @return bind variable value for RoleTypify
     */
    public String getRoleTypify() {
        return (String) ensureVariableManager().getVariableValue("RoleTypify");
    }

    /**
     * Sets <code>value</code> for bind variable RoleTypify.
     * @param value value to bind as RoleTypify
     */
    public void setRoleTypify(String value) {
        ensureVariableManager().setVariableValue("RoleTypify", value);
    }

    public void send(String id, String callback, String action) {
        runStatement("begin program_pkg.send(?,?,?); end;", true, id, callback, action);
    }

    /**
     * Returns the variable value for ProgramCode.
     * @return variable value for ProgramCode
     */
    public String getProgramCode() {
        return (String) ensureVariableManager().getVariableValue("ProgramCode");
    }

    /**
     * Sets <code>value</code> for variable ProgramCode.
     * @param value value to bind as ProgramCode
     */
    public void setProgramCode(String value) {
        ensureVariableManager().setVariableValue("ProgramCode", value);
    }

    public String createProgram(String code, String name) {

        ArrayList<Map<String, Object>> pars = new ArrayList<Map<String, Object>>(3);

        Map<String, Object> parMap = new HashMap<String, Object>();
        parMap.put("type", "in");
        parMap.put("datatype", "String");
        parMap.put("value", code);
        pars.add(0, parMap);

        parMap = new HashMap<String, Object>();
        parMap.put("type", "in");
        parMap.put("datatype", "String");
        parMap.put("value", name);
        pars.add(1, parMap);

        parMap = new HashMap<String, Object>();
        parMap.put("type", "out");
        parMap.put("datatype", "String");
        pars.add(2, parMap);

        runStatement("begin program_pkg.create_program(?,?,?); end;", false, pars);
        return (String) pars.get(2).get("value");
    }


    /**
     * Returns the bind variable value for SearchEmployeeName.
     * @return bind variable value for SearchEmployeeName
     */
    public String getSearchEmployeeNameVar() {
        return (String) ensureVariableManager().getVariableValue("SearchEmployeeNameVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchEmployeeName.
     * @param value value to bind as SearchEmployeeName
     */
    public void setSearchEmployeeNameVar(String value) {
        ensureVariableManager().setVariableValue("SearchEmployeeNameVar", value);
    }

    /**
     * Returns the bind variable value for SearchVcName.
     * @return bind variable value for SearchVcName
     */
    public String getSearchVcName() {
        return (String) ensureVariableManager().getVariableValue("SearchVcName");
    }

    /**
     * Sets <code>value</code> for bind variable SearchVcName.
     * @param value value to bind as SearchVcName
     */
    public void setSearchVcName(String value) {
        
        ensureVariableManager().setVariableValue("SearchVcName", value);
    }


    /**
     * Returns the bind variable value for CurrentLeTagIdVar.
     * @return bind variable value for CurrentLeTagIdVar
     */
    public String getCurrentLeTagIdVar() {
        return (String) ensureVariableManager().getVariableValue("CurrentLeTagIdVar");
    }

    /**
     * Sets <code>value</code> for bind variable CurrentLeTagIdVar.
     * @param value value to bind as CurrentLeTagIdVar
     */
    public void setCurrentLeTagIdVar(String value) {
        ensureVariableManager().setVariableValue("CurrentLeTagIdVar", value);
    }

    /**
     * Returns the bind variable value for SearchProjectBUCodeVar.
     * @return bind variable value for SearchProjectBUCodeVar
     */
    public String getSearchProjectBUCodeVar() {
        return (String) ensureVariableManager().getVariableValue("SearchProjectBUCodeVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectBUCodeVar.
     * @param value value to bind as SearchProjectBUCodeVar
     */
    public void setSearchProjectBUCodeVar(String value) {
        ensureVariableManager().setVariableValue("SearchProjectBUCodeVar", value);
    }


    /**
     * Returns the bind variable value for SearchProjectPocDateFromVar.
     * @return bind variable value for SearchProjectPocDateFromVar
     */
    public Date getSearchProjectPocDateFromVar() {
        return (Date) ensureVariableManager().getVariableValue("SearchProjectPocDateFromVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectPocDateFromVar.
     * @param value value to bind as SearchProjectPocDateFromVar
     */
    public void setSearchProjectPocDateFromVar(Date value) {
        ensureVariableManager().setVariableValue("SearchProjectPocDateFromVar", value);
    }

    /**
     * Returns the bind variable value for SearchProjectPocDateToVar.
     * @return bind variable value for SearchProjectPocDateToVar
     */
    public Date getSearchProjectPocDateToVar() {
        return (Date) ensureVariableManager().getVariableValue("SearchProjectPocDateToVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectPocDateToVar.
     * @param value value to bind as SearchProjectPocDateToVar
     */
    public void setSearchProjectPocDateToVar(Date value) {
        ensureVariableManager().setVariableValue("SearchProjectPocDateToVar", value);
    }

    /**
     * Returns the bind variable value for SearchProjectDevelopmentPhaseVar.
     * @return bind variable value for SearchProjectDevelopmentPhaseVar
     */
    public String getSearchProjectDevPhaseVar() {
        return (String) ensureVariableManager().getVariableValue("SearchProjectDevPhaseVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectDevelopmentPhaseVar.
     * @param value value to bind as SearchProjectDevelopmentPhaseVar
     */
    public void setSearchProjectDevPhaseVar(String value) {
        ensureVariableManager().setVariableValue("SearchProjectDevPhaseVar", value);
    }

    /**
     * Returns the variable value for SearchProjectStateVar.
     * @return variable value for SearchProjectStateVar
     */
    public String getSearchProjectStateVar() {
        return (String) ensureVariableManager().getVariableValue("SearchProjectStateVar");
    }

    /**
     * Sets <code>value</code> for variable SearchProjectStateVar.
     * @param value value to bind as SearchProjectStateVar
     */
    public void setSearchProjectStateVar(String value) {
        ensureVariableManager().setVariableValue("SearchProjectStateVar", value);
    }


    /**
     * Returns the bind variable value for SearchProjectStateMntVar.
     * @return bind variable value for SearchProjectStateMntVar
     */
    public String getSearchProjectStateMntVar() {
        return (String) ensureVariableManager().getVariableValue("SearchProjectStateMntVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectStateMntVar.
     * @param value value to bind as SearchProjectStateMntVar
     */
    public void setSearchProjectStateMntVar(String value) {
        ensureVariableManager().setVariableValue("SearchProjectStateMntVar", value);
    }

    /**
     * Returns the bind variable value for CurrentLtcTagIdVar.
     * @return bind variable value for CurrentLtcTagIdVar
     */
    public String getCurrentLtcTagIdVar() {
        return (String) getNamedWhereClauseParam("CurrentLtcTagIdVar");
    }

    /**
     * Sets <code>value</code> for bind variable CurrentLtcTagIdVar.
     * @param value value to bind as CurrentLtcTagIdVar
     */
    public void setCurrentLtcTagIdVar(String value) {
        setNamedWhereClauseParam("CurrentLtcTagIdVar", value);
    }

    /**
     * Returns the bind variable value for SearchProjectIsActiveVar.
     * @return bind variable value for SearchProjectIsActiveVar
     */
    public Boolean getSearchProjectIsActiveVar() {
        return (Boolean) getNamedWhereClauseParam("SearchProjectIsActiveVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectIsActiveVar.
     * @param value value to bind as SearchProjectIsActiveVar
     */
    public void setSearchProjectIsActiveVar(Boolean value) {
        setNamedWhereClauseParam("SearchProjectIsActiveVar", value);
    }

    /**
     * Returns the bind variable value for SearchProjectBayCodeVar.
     * @return bind variable value for SearchProjectBayCodeVar
     */
    public String getSearchProjectBayCodeVar() {
        return (String) getNamedWhereClauseParam("SearchProjectBayCodeVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectBayCodeVar.
     * @param value value to bind as SearchProjectBayCodeVar
     */
    public void setSearchProjectBayCodeVar(String value) {
        setNamedWhereClauseParam("SearchProjectBayCodeVar", value);
    }

    /**
     * Returns the bind variable value for SearchProjectTaCodeVar.
     * @return bind variable value for SearchProjectTaCodeVar
     */
    public String getSearchProjectTaCodeVar() {
        return (String) getNamedWhereClauseParam("SearchProjectTaCodeVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectTaCodeVar.
     * @param value value to bind as SearchProjectTaCodeVar
     */
    public void setSearchProjectTaCodeVar(String value) {
        ensureVariableManager().setVariableValue("SearchProjectTaCodeVar", value);
    }

    /**
     * Returns the bind variable value for SearchProjectBayCodeMnt.
     * @return bind variable value for SearchProjectBayCodeMnt
     */
    public String getSearchProjectBayCodeMnt() {
        return (String) getNamedWhereClauseParam("SearchProjectBayCodeMnt");
    }

    /**
     * Sets <code>value</code> for bind variable SearchProjectBayCodeMnt.
     * @param value value to bind as SearchProjectBayCodeMnt
     */
    public void setSearchProjectBayCodeMnt(String value) {
        setNamedWhereClauseParam("SearchProjectBayCodeMnt", value);
    }

    /**
     * Returns the bind variable value for SearchStudyCodeVar.
     * @return bind variable value for SearchStudyCodeVar
     */
    public String getSearchStudyCodeVar() {
        return (String) getNamedWhereClauseParam("SearchStudyCodeVar");
    }

    /**
     * Sets <code>value</code> for bind variable SearchStudyCodeVar.
     * @param value value to bind as SearchStudyCodeVar
     */
    public void setSearchStudyCodeVar(String value) {
        ensureVariableManager().setVariableValue("SearchStudyCodeVar", value);
    }

    /**
     * Returns the variable value for IdVar.
     * @return variable value for IdVar
     */
    public String getIdVar() {
        return (String) ensureVariableManager().getVariableValue("IdVar");
    }

    /**
     * Sets <code>value</code> for variable IdVar.
     * @param value value to bind as IdVar
     */
    public void setIdVar(String value) {
        ensureVariableManager().setVariableValue("IdVar", value);
    }
    
    /**
     *method used to initialize the maintain goals screeen
     * @param programId
     * @param programGoalsId
     */
    public void initMaintainGoals(String programId, Integer programGoalsId, String projectId) {
        ProgramAppModuleImpl am = (ProgramAppModuleImpl)this.getApplicationModule();
        //make sure no filtering is applied on ProgramView
        String[] appliedCriteriaNames = am.getProgramView().getApplyViewCriteriaNames();
        if(appliedCriteriaNames != null ) {
            for (String vcName : appliedCriteriaNames) {
               am.getProgramView().removeApplyViewCriteriaName(vcName);
            }
        }
        am.getProgramView().setIdVar(programId);
        am.getProgramView().applyCriteria("ById"); 
        am.getProgramView().executeQuery();
        am.getProgramView().first();
        
        
        appliedCriteriaNames = am.getProgramGoals().getApplyViewCriteriaNames();
        if(appliedCriteriaNames != null ) {
            for (String vcName : appliedCriteriaNames) {
               am.getProgramGoals().removeApplyViewCriteriaName(vcName);
            }  
        }
        
        //if ADD new Record case
        if(programGoalsId == null) {
            
            am.getProgramGoals().executeEmptyRowSet();
            
            AttributeListImpl attributeList = new AttributeListImpl();
            //prevent PK from being null 
            //attributeList.setAttribute("Id", new java.math.BigDecimal(- System.currentTimeMillis()));
            attributeList.setAttribute("ProgramId", programId);
            attributeList.setAttribute("ProjectId", projectId);
            
            Row row = am.getProgramGoals().createAndInitRow(attributeList);
            am.getProgramGoals().insertRow(row);
            
            
        } else {
            
            //make sure no filtering is applied on getProgramGoals
            am.getProgramGoals().setIdVar(programGoalsId);
            am.getProgramGoals().setSearchTargetYearVar(null);
            am.getProgramGoals().applyCriteria("ById"); 
            am.getProgramGoals().executeQuery();
            am.getProgramGoals().first();
            
        }
        
        System.err.println("voila!" + am.getProgramGoals());
        
    }
}
