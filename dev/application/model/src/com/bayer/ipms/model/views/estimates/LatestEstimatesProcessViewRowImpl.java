package com.bayer.ipms.model.views.estimates;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;
import com.bayer.ipms.model.views.common.ProjectViewRow;
import com.bayer.ipms.model.views.estimates.common.LatestEstimatesProcessViewRow;
import com.bayer.ipms.model.views.estimates.common.LatestEstimatesProjectViewRow;

import java.sql.Date;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 26 09:57:44 EEST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LatestEstimatesProcessViewRowImpl extends IPMSViewRowImpl implements LatestEstimatesProcessViewRow {


    public static final int ENTITY_LATESTESTIMATESPROCESS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getId();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setId((String) value);
            }
        }
        ,
        Name {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getName();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setName((String) value);
            }
        }
        ,
        Comments {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getComments();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setComments((String) value);
            }
        }
        ,
        TerminationDate {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getTerminationDate();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setTerminationDate((Date) value);
            }
        }
        ,
        StatusCode {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getStatusCode();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StatusDate {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getStatusDate();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreateUserId {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getCreateUserId();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UpdateUserId {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getUpdateUserId();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreateDate {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getCreateDate();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UpdateDate {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getUpdateDate();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SyncDate {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getSyncDate();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IsSyncing {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getIsSyncing();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Year {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getYear();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setYear((Integer) value);
            }
        }
        ,
        IsNextYear {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getIsNextYear();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setIsNextYear((Boolean) value);
            }
        }
        ,
        CyDetPrefillCode {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getCyDetPrefillCode();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setCyDetPrefillCode((String) value);
            }
        }
        ,
        NyDetPrefillCode {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getNyDetPrefillCode();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setNyDetPrefillCode((String) value);
            }
        }
        ,
        CyDetPrefillLepId {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getCyDetPrefillLepId();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setCyDetPrefillLepId((String) value);
            }
        }
        ,
        NyDetPrefillLepId {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getNyDetPrefillLepId();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setNyDetPrefillLepId((String) value);
            }
        }
        ,
        LetId {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getLetId();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setLetId((String) value);
            }
        }
        ,
        Tagname {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getTagname();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        QualifiedName {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getQualifiedName();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IsNextYearInt {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getIsNextYearInt();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        QualifiedName2 {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getQualifiedName2();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LatestEstimatesProjectView {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getLatestEstimatesProjectView();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LatestEstimatesTagView {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getLatestEstimatesTagView();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PrefillTypeDeterministicView {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getPrefillTypeDeterministicView();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PrefillTypeProbabilisticView {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getPrefillTypeProbabilisticView();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LatestEstimatesProcessView {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getLatestEstimatesProcessView();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastLatestEstimatesProcessView {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getLastLatestEstimatesProcessView();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LEProcessStatus {
            public Object get(LatestEstimatesProcessViewRowImpl obj) {
                return obj.getLEProcessStatus();
            }

            public void put(LatestEstimatesProcessViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(LatestEstimatesProcessViewRowImpl object);

        public abstract void put(LatestEstimatesProcessViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int TERMINATIONDATE = AttributesEnum.TerminationDate.index();
    public static final int STATUSCODE = AttributesEnum.StatusCode.index();
    public static final int STATUSDATE = AttributesEnum.StatusDate.index();
    public static final int CREATEUSERID = AttributesEnum.CreateUserId.index();
    public static final int UPDATEUSERID = AttributesEnum.UpdateUserId.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int SYNCDATE = AttributesEnum.SyncDate.index();
    public static final int ISSYNCING = AttributesEnum.IsSyncing.index();
    public static final int YEAR = AttributesEnum.Year.index();
    public static final int ISNEXTYEAR = AttributesEnum.IsNextYear.index();
    public static final int CYDETPREFILLCODE = AttributesEnum.CyDetPrefillCode.index();
    public static final int NYDETPREFILLCODE = AttributesEnum.NyDetPrefillCode.index();
    public static final int CYDETPREFILLLEPID = AttributesEnum.CyDetPrefillLepId.index();
    public static final int NYDETPREFILLLEPID = AttributesEnum.NyDetPrefillLepId.index();
    public static final int LETID = AttributesEnum.LetId.index();
    public static final int TAGNAME = AttributesEnum.Tagname.index();
    public static final int QUALIFIEDNAME = AttributesEnum.QualifiedName.index();
    public static final int ISNEXTYEARINT = AttributesEnum.IsNextYearInt.index();
    public static final int QUALIFIEDNAME2 = AttributesEnum.QualifiedName2.index();
    public static final int LATESTESTIMATESPROJECTVIEW = AttributesEnum.LatestEstimatesProjectView.index();
    public static final int LATESTESTIMATESTAGVIEW = AttributesEnum.LatestEstimatesTagView.index();
    public static final int PREFILLTYPEDETERMINISTICVIEW = AttributesEnum.PrefillTypeDeterministicView.index();
    public static final int PREFILLTYPEPROBABILISTICVIEW = AttributesEnum.PrefillTypeProbabilisticView.index();
    public static final int LATESTESTIMATESPROCESSVIEW = AttributesEnum.LatestEstimatesProcessView.index();
    public static final int LASTLATESTESTIMATESPROCESSVIEW = AttributesEnum.LastLatestEstimatesProcessView.index();
    public static final int LEPROCESSSTATUS = AttributesEnum.LEProcessStatus.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LatestEstimatesProcessViewRowImpl() {
    }

    /**
     * Gets LatestEstimatesProcess entity object.
     * @return the LatestEstimatesProcess
     */
    public IPMSEntityImpl getLatestEstimatesProcess() {
        return (IPMSEntityImpl) getEntity(0);
    }


    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for COMMENTS using the alias name Comments.
     * @return the COMMENTS
     */
    public String getComments() {
        return (String) getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for COMMENTS using the alias name Comments.
     * @param value value to set the COMMENTS
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }


    /**
     * Gets the attribute value for TERMINATION_DATE using the alias name TerminationDate.
     * @return the TERMINATION_DATE
     */
    public Date getTerminationDate() {
        return (Date) getAttributeInternal(TERMINATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for TERMINATION_DATE using the alias name TerminationDate.
     * @param value value to set the TERMINATION_DATE
     */
    public void setTerminationDate(Date value) {
        setAttributeInternal(TERMINATIONDATE, value);
    }

    /**
     * Gets the attribute value for STATUS_CODE using the alias name StatusCode.
     * @return the STATUS_CODE
     */
    public String getStatusCode() {
        return (String) getAttributeInternal(STATUSCODE);
    }


    /**
     * Gets the attribute value for STATUS_DATE using the alias name StatusDate.
     * @return the STATUS_DATE
     */
    public Date getStatusDate() {
        return (Date) getAttributeInternal(STATUSDATE);
    }


    /**
     * Gets the attribute value for CREATE_USER_ID using the alias name CreateUserId.
     * @return the CREATE_USER_ID
     */
    public String getCreateUserId() {
        return (String) getAttributeInternal(CREATEUSERID);
    }


    /**
     * Gets the attribute value for UPDATE_USER_ID using the alias name UpdateUserId.
     * @return the UPDATE_USER_ID
     */
    public String getUpdateUserId() {
        return (String) getAttributeInternal(UPDATEUSERID);
    }


    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }


    /**
     * Gets the attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @return the UPDATE_DATE
     */
    public Date getUpdateDate() {
        return (Date) getAttributeInternal(UPDATEDATE);
    }


    /**
     * Gets the attribute value for SYNC_DATE using the alias name SyncDate.
     * @return the SYNC_DATE
     */
    public Date getSyncDate() {
        return (Date) getAttributeInternal(SYNCDATE);
    }


    /**
     * Gets the attribute value for IS_SYNCING using the alias name IsSyncing.
     * @return the IS_SYNCING
     */
    public Boolean getIsSyncing() {
        return (Boolean) getAttributeInternal(ISSYNCING);
    }


    /**
     * Gets the attribute value for YEAR using the alias name Year.
     * @return the YEAR
     */
    public Integer getYear() {
        return (Integer) getAttributeInternal(YEAR);
    }

    /**
     * Sets <code>value</code> as attribute value for YEAR using the alias name Year.
     * @param value value to set the YEAR
     */
    public void setYear(Integer value) {
        setAttributeInternal(YEAR, value);
    }

    /**
     * Gets the attribute value for IS_NEXT_YEAR using the alias name ProcessIsNextYear.
     * @return the IS_NEXT_YEAR
     */
    public Boolean getIsNextYear() {
        return (Boolean) getAttributeInternal(ISNEXTYEAR);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_NEXT_YEAR using the alias name ProcessIsNextYear.
     * @param value value to set the IS_NEXT_YEAR
     */
    public void setIsNextYear(Boolean value) {
        setAttributeInternal(ISNEXTYEAR, value);
    }


    /**
     * Gets the attribute value for the calculated attribute QualifiedName.
     * @return the QualifiedName
     */
    public String getQualifiedName() {
        return (String) getAttributeInternal(QUALIFIEDNAME);
    }


    /**
     * Gets the attribute value for the calculated attribute IsNextYearInt.
     * @return the IsNextYearInt
     */
    public String getIsNextYearInt() {
        return (String) getAttributeInternal(ISNEXTYEARINT);
    }


    /**
     * Gets the attribute value for the calculated attribute QualifiedName2.
     * @return the QualifiedName2
     */
    public String getQualifiedName2() {
        return (String) getAttributeInternal(QUALIFIEDNAME2);
    }

    /**
     * Gets the attribute value for LET_ID using the alias name LetId.
     * @return the LET_ID
     */
    public String getLetId() {
        return (String) getAttributeInternal(LETID);
    }

    /**
     * Sets <code>value</code> as attribute value for LET_ID using the alias name LetId.
     * @param value value to set the LET_ID
     */
    public void setLetId(String value) {
        setAttributeInternal(LETID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Tagname.
     * @return the Tagname
     */
    public String getTagname() {
        return (String) getAttributeInternal(TAGNAME);
    }

    /**
     * Gets the attribute value for CY_DET_PREFILL_CODE using the alias name CyDetPrefillCode.
     * @return the CY_DET_PREFILL_CODE
     */
    public String getCyDetPrefillCode() {
        return (String) getAttributeInternal(CYDETPREFILLCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CY_DET_PREFILL_CODE using the alias name CyDetPrefillCode.
     * @param value value to set the CY_DET_PREFILL_CODE
     */
    public void setCyDetPrefillCode(String value) {
        setAttributeInternal(CYDETPREFILLCODE, value);
    }

    /**
     * Gets the attribute value for CY_DET_PREFILL_LEP_ID using the alias name CyDetPrefillLepId.
     * @return the CY_DET_PREFILL_LEP_ID
     */
    public String getCyDetPrefillLepId() {
        return (String) getAttributeInternal(CYDETPREFILLLEPID);
    }

    /**
     * Sets <code>value</code> as attribute value for CY_DET_PREFILL_LEP_ID using the alias name CyDetPrefillLepId.
     * @param value value to set the CY_DET_PREFILL_LEP_ID
     */
    public void setCyDetPrefillLepId(String value) {
        setAttributeInternal(CYDETPREFILLLEPID, value);
    }


    /**
     * Gets the attribute value for NY_DET_PREFILL_CODE using the alias name NyDetPrefillCode.
     * @return the NY_DET_PREFILL_CODE
     */
    public String getNyDetPrefillCode() {
        return (String) getAttributeInternal(NYDETPREFILLCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for NY_DET_PREFILL_CODE using the alias name NyDetPrefillCode.
     * @param value value to set the NY_DET_PREFILL_CODE
     */
    public void setNyDetPrefillCode(String value) {
        setAttributeInternal(NYDETPREFILLCODE, value);
    }

    /**
     * Gets the attribute value for NY_DET_PREFILL_LEP_ID using the alias name NyDetPrefillLepId.
     * @return the NY_DET_PREFILL_LEP_ID
     */
    public String getNyDetPrefillLepId() {
        return (String) getAttributeInternal(NYDETPREFILLLEPID);
    }

    /**
     * Sets <code>value</code> as attribute value for NY_DET_PREFILL_LEP_ID using the alias name NyDetPrefillLepId.
     * @param value value to set the NY_DET_PREFILL_LEP_ID
     */
    public void setNyDetPrefillLepId(String value) {
        setAttributeInternal(NYDETPREFILLLEPID, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LatestEstimatesProjectView.
     */
    public RowIterator getLatestEstimatesProjectView() {
        return (RowIterator) getAttributeInternal(LATESTESTIMATESPROJECTVIEW);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link LatestEstimatesTagView.
     */
    public Row getLatestEstimatesTagView() {
        return (Row) getAttributeInternal(LATESTESTIMATESTAGVIEW);
    }

    /**
     * Sets the master-detail link LatestEstimatesTagView between this object and <code>value</code>.
     */
    public void setLatestEstimatesTagView(Row value) {
        setAttributeInternal(LATESTESTIMATESTAGVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PrefillTypeDeterministicView.
     */
    public RowSet getPrefillTypeDeterministicView() {
        return (RowSet) getAttributeInternal(PREFILLTYPEDETERMINISTICVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PrefillTypeProbabilisticView.
     */
    public RowSet getPrefillTypeProbabilisticView() {
        return (RowSet) getAttributeInternal(PREFILLTYPEPROBABILISTICVIEW);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LatestEstimatesProcessView.
     */
    public RowSet getLatestEstimatesProcessView() {
        return (RowSet) getAttributeInternal(LATESTESTIMATESPROCESSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LastLatestEstimatesProcessView.
     */
    public RowSet getLastLatestEstimatesProcessView() {
        return (RowSet) getAttributeInternal(LASTLATESTESTIMATESPROCESSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LEProcessStatus.
     */
    public RowSet getLEProcessStatus() {
        return (RowSet) getAttributeInternal(LEPROCESSSTATUS);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public void start() {
        runStatement("begin estimates_pkg.starts(?); end;", true, getId().toString());
    }

    public void stop() {
        runStatement("begin estimates_pkg.stop(?); end;", true, getId().toString());

        this.refresh();
    }

    public void restart() {
        runStatement("begin estimates_pkg.restart(?); end;", true, getId().toString());
    }

    /*    @Override
   protected void create(AttributeList attributeList) {
        super.create(attributeList);

        if (attributeList.getAttributeCount() != 0) {
            LatestEstimatesProcessViewRow last =
                (LatestEstimatesProcessViewRow) getLastLatestEstimatesProcessView().first();
            if (last == null) {
                return;
            }

            RowIterator rows = getLatestEstimatesProjectView();
            RowIterator lastRows = last.getLatestEstimatesProjectView();
            for (Row lastRow = lastRows.first(); lastRow != null; lastRow = lastRows.next()) {
                LatestEstimatesProjectViewRow row = (LatestEstimatesProjectViewRow) rows.createRow();
                LatestEstimatesProjectViewRow lastPrjRow = (LatestEstimatesProjectViewRow) lastRow;
                row.setProjectId(lastPrjRow.getProjectId());
                rows.insertRow(row);
                rows.setCurrentRow(row);
            }
        }
    }
*/

    public void add(ProjectViewRow project) {
        RowIterator lesRowIter = getLatestEstimatesProjectView();

        Key key = new Key(new Object[] { getId(), project.getId() });
        if (lesRowIter.findByKey(key, 1).length != 0) {
            return;
        }

        LatestEstimatesProjectViewRow lesRow = (LatestEstimatesProjectViewRow) lesRowIter.createRow();
        lesRow.setProjectId(project.getId());
        lesRowIter.insertRow(lesRow);
        lesRowIter.setCurrentRow(lesRow);
    }


    public void add(LatestEstimatesProjectViewRow leprRow) {
        RowIterator lesRowIter = getLatestEstimatesProjectView();

        Key key = new Key(new Object[] { getId(), leprRow.getProjectId() });
        if (lesRowIter.findByKey(key, 1).length != 0) {
            return;
        }

        LatestEstimatesProjectViewRow lesRow = (LatestEstimatesProjectViewRow) lesRowIter.createRow();
        lesRow.setProjectId(leprRow.getProjectId());
        lesRowIter.insertRow(lesRow);
        lesRowIter.setCurrentRow(lesRow);
    }

    public void removeAllProjects() {

        Row[] rows = getLatestEstimatesProjectView().getAllRowsInRange();
        for (int i = 0; i < rows.length; i++)
            if (rows[i] != null)
                rows[i].remove();
    }


    public void submit() {
        runStatement("begin estimates_pkg.submit(?,?); end;", true, getId(), null);
    }

}
