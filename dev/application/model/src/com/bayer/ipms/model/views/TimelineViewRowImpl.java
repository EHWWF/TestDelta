package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;
import com.bayer.ipms.model.views.common.TimelineViewRow;

import java.math.BigDecimal;

import java.sql.Clob;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 22 18:49:19 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TimelineViewRowImpl extends IPMSViewRowImpl implements TimelineViewRow {

    public static final int ENTITY_TIMELINE = 0;
    public static final int ENTITY_TIMELINETYPE = 1;
    public static final int ENTITY_BASELINETYPE = 2;
    public static final int ENTITY_LTCINSTANCE = 3;
    public static final int ENTITY_LTCPROCESSTIMELINE = 4;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getId();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Name {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getName();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setName((String) value);
            }
        }
        ,
        ProjectId {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getProjectId();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TypeCode {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getTypeCode();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreateDate {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getCreateDate();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UpdateDate {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getUpdateDate();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SyncDate {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getSyncDate();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IsSyncing {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getIsSyncing();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setIsSyncing((Boolean) value);
            }
        }
        ,
        Comments {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getComments();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setComments((String) value);
            }
        }
        ,
        ReferenceId {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getReferenceId();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StartDate {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getStartDate();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setStartDate((Date) value);
            }
        }
        ,
        FinishDate {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getFinishDate();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setFinishDate((Date) value);
            }
        }
        ,
        SyncId {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getSyncId();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LtcProcessId {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getLtcProcessId();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setLtcProcessId((BigDecimal) value);
            }
        }
        ,
        IsPaConflict {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getIsPaConflict();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setIsPaConflict((Boolean) value);
            }
        }
        ,
        BaselineTypeId2 {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getBaselineTypeId2();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setBaselineTypeId2((String) value);
            }
        }
        ,
        TypeName {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getTypeName();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setTypeName((String) value);
            }
        }
        ,
        _TypeCode {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.get_TypeCode();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.set_TypeCode((String) value);
            }
        }
        ,
        Id3 {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getId3();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setId3((BigDecimal) value);
            }
        }
        ,
        LtcTagId {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getLtcTagId();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setLtcTagId((String) value);
            }
        }
        ,
        ProcessDescription {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getProcessDescription();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setProcessDescription((String) value);
            }
        }
        ,
        BaselineTypeName {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getBaselineTypeName();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Id1 {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getId1();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Id2 {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getId2();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ExcelReport {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getExcelReport();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setExcelReport((Clob) value);
            }
        }
        ,
        LtciId {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getLtciId();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setLtciId((String) value);
            }
        }
        ,
        MaxLtcProcessId {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getMaxLtcProcessId();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Publish {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getPublish();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setPublish((String) value);
            }
        }
        ,
        BaselineTypeId {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getBaselineTypeId();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setBaselineTypeId((String) value);
            }
        }
        ,
        SensorView {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getSensorView();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectView {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getProjectView();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TimelineBaselineView {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getTimelineBaselineView();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BaseLineTypeView {
            protected Object get(TimelineViewRowImpl obj) {
                return obj.getBaseLineTypeView();
            }

            protected void put(TimelineViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected abstract Object get(TimelineViewRowImpl object);

        protected abstract void put(TimelineViewRowImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int TYPECODE = AttributesEnum.TypeCode.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int SYNCDATE = AttributesEnum.SyncDate.index();
    public static final int ISSYNCING = AttributesEnum.IsSyncing.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int REFERENCEID = AttributesEnum.ReferenceId.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int FINISHDATE = AttributesEnum.FinishDate.index();
    public static final int SYNCID = AttributesEnum.SyncId.index();
    public static final int LTCPROCESSID = AttributesEnum.LtcProcessId.index();
    public static final int ISPACONFLICT = AttributesEnum.IsPaConflict.index();
    public static final int BASELINETYPEID2 = AttributesEnum.BaselineTypeId2.index();
    public static final int TYPENAME = AttributesEnum.TypeName.index();
    public static final int _TYPECODE = AttributesEnum._TypeCode.index();
    public static final int ID3 = AttributesEnum.Id3.index();
    public static final int LTCTAGID = AttributesEnum.LtcTagId.index();
    public static final int PROCESSDESCRIPTION = AttributesEnum.ProcessDescription.index();
    public static final int BASELINETYPENAME = AttributesEnum.BaselineTypeName.index();
    public static final int ID1 = AttributesEnum.Id1.index();
    public static final int ID2 = AttributesEnum.Id2.index();
    public static final int EXCELREPORT = AttributesEnum.ExcelReport.index();
    public static final int LTCIID = AttributesEnum.LtciId.index();
    public static final int MAXLTCPROCESSID = AttributesEnum.MaxLtcProcessId.index();
    public static final int PUBLISH = AttributesEnum.Publish.index();
    public static final int BASELINETYPEID = AttributesEnum.BaselineTypeId.index();
    public static final int SENSORVIEW = AttributesEnum.SensorView.index();
    public static final int PROJECTVIEW = AttributesEnum.ProjectView.index();
    public static final int TIMELINEBASELINEVIEW = AttributesEnum.TimelineBaselineView.index();
    public static final int BASELINETYPEVIEW = AttributesEnum.BaseLineTypeView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TimelineViewRowImpl() {
    }

    /**
     * Gets Timeline entity object.
     * @return the Timeline
     */
    public IPMSEntityImpl getTimeline() {
        return (IPMSEntityImpl) getEntity(ENTITY_TIMELINE);
    }

    /**
     * Gets TimelineType entity object.
     * @return the TimelineType
     */
    public IPMSEntityImpl getTimelineType() {
        return (IPMSEntityImpl) getEntity(ENTITY_TIMELINETYPE);
    }

    /**
     * Gets BaselineType entity object.
     * @return the BaselineType
     */
    public IPMSEntityImpl getBaselineType() {
        return (IPMSEntityImpl) getEntity(ENTITY_BASELINETYPE);
    }

    /**
     * Gets LtcInstance entity object.
     * @return the LtcInstance
     */
    public IPMSEntityImpl getLtcInstance() {
        return (IPMSEntityImpl) getEntity(ENTITY_LTCINSTANCE);
    }

    /**
     * Gets LTCProcessTimeline entity object.
     * @return the LTCProcessTimeline
     */
    public IPMSEntityImpl getLTCProcessTimeline() {
        return (IPMSEntityImpl) getEntity(ENTITY_LTCPROCESSTIMELINE);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public String getProjectId() {
        return (String) getAttributeInternal(PROJECTID);
    }


    /**
     * Gets the attribute value for TYPE_CODE using the alias name TypeCode.
     * @return the TYPE_CODE
     */
    public String getTypeCode() {
        return (String) getAttributeInternal(TYPECODE);
    }


    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Gets the attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @return the UPDATE_DATE
     */
    public Date getUpdateDate() {
        return (Date) getAttributeInternal(UPDATEDATE);
    }

    /**
     * Gets the attribute value for SYNC_DATE using the alias name SyncDate.
     * @return the SYNC_DATE
     */
    public Date getSyncDate() {
        return (Date) getAttributeInternal(SYNCDATE);
    }

    /**
     * Gets the attribute value for IS_SYNCING using the alias name IsSyncing.
     * @return the IS_SYNCING
     */
    public Boolean getIsSyncing() {
        return (Boolean) getAttributeInternal(ISSYNCING);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_SYNCING using the alias name IsSyncing.
     * @param value value to set the IS_SYNCING
     */
    public void setIsSyncing(Boolean value) {
        setAttributeInternal(ISSYNCING, value);
    }

    /**
     * Gets the attribute value for COMMENTS using the alias name Comments.
     * @return the COMMENTS
     */
    public String getComments() {
        return (String) getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for COMMENTS using the alias name Comments.
     * @param value value to set the COMMENTS
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the attribute value for REFERENCE_ID using the alias name ReferenceId.
     * @return the REFERENCE_ID
     */
    public String getReferenceId() {
        return (String) getAttributeInternal(REFERENCEID);
    }

    /**
     * Gets the attribute value for START_DATE using the alias name StartDate.
     * @return the START_DATE
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for START_DATE using the alias name StartDate.
     * @param value value to set the START_DATE
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for FINISH_DATE using the alias name FinishDate.
     * @return the FINISH_DATE
     */
    public Date getFinishDate() {
        return (Date) getAttributeInternal(FINISHDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for FINISH_DATE using the alias name FinishDate.
     * @param value value to set the FINISH_DATE
     */
    public void setFinishDate(Date value) {
        setAttributeInternal(FINISHDATE, value);
    }

    /**
     * Gets the attribute value for SYNC_ID using the alias name SyncId.
     * @return the SYNC_ID
     */
    public String getSyncId() {
        return (String) getAttributeInternal(SYNCID);
    }

    /**
     * Gets the attribute value for LTC_PROCESS_ID using the alias name LtcProcessId.
     * @return the LTC_PROCESS_ID
     */
    public BigDecimal getLtcProcessId() {
        return (BigDecimal) getAttributeInternal(LTCPROCESSID);
    }

    /**
     * Sets <code>value</code> as attribute value for LTC_PROCESS_ID using the alias name LtcProcessId.
     * @param value value to set the LTC_PROCESS_ID
     */
    public void setLtcProcessId(BigDecimal value) {
        setAttributeInternal(LTCPROCESSID, value);
    }

    /**
     * Gets the attribute value for IS_PA_CONFLICT using the alias name IsPaConflict.
     * @return the IS_PA_CONFLICT
     */
    public Boolean getIsPaConflict() {
        return (Boolean) getAttributeInternal(ISPACONFLICT);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_PA_CONFLICT using the alias name IsPaConflict.
     * @param value value to set the IS_PA_CONFLICT
     */
    public void setIsPaConflict(Boolean value) {
        setAttributeInternal(ISPACONFLICT, value);
    }

    /**
     * Gets the attribute value for BASELINE_TYPE_ID using the alias name BaselineTypeId2.
     * @return the BASELINE_TYPE_ID
     */
    public String getBaselineTypeId2() {
        return (String) getAttributeInternal(BASELINETYPEID2);
    }

    /**
     * Sets <code>value</code> as attribute value for BASELINE_TYPE_ID using the alias name BaselineTypeId2.
     * @param value value to set the BASELINE_TYPE_ID
     */
    public void setBaselineTypeId2(String value) {
        setAttributeInternal(BASELINETYPEID2, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name TypeName.
     * @return the NAME
     */
    public String getTypeName() {
        return (String) getAttributeInternal(TYPENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name TypeName.
     * @param value value to set the NAME
     */
    public void setTypeName(String value) {
        setAttributeInternal(TYPENAME, value);
    }

    /**
     * Gets the attribute value for CODE using the alias name _TypeCode.
     * @return the CODE
     */
    public String get_TypeCode() {
        return (String) getAttributeInternal(_TYPECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name _TypeCode.
     * @param value value to set the CODE
     */
    public void set_TypeCode(String value) {
        setAttributeInternal(_TYPECODE, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id3.
     * @return the ID
     */
    public BigDecimal getId3() {
        return (BigDecimal) getAttributeInternal(ID3);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id3.
     * @param value value to set the ID
     */
    public void setId3(BigDecimal value) {
        setAttributeInternal(ID3, value);
    }

    /**
     * Gets the attribute value for LTC_TAG_ID using the alias name LtcTagId.
     * @return the LTC_TAG_ID
     */
    public String getLtcTagId() {
        return (String) getAttributeInternal(LTCTAGID);
    }

    /**
     * Sets <code>value</code> as attribute value for LTC_TAG_ID using the alias name LtcTagId.
     * @param value value to set the LTC_TAG_ID
     */
    public void setLtcTagId(String value) {
        setAttributeInternal(LTCTAGID, value);
    }

    /**
     * Gets the attribute value for PROCESS_DESCRIPTION using the alias name ProcessDescription.
     * @return the PROCESS_DESCRIPTION
     */
    public String getProcessDescription() {
        return (String) getAttributeInternal(PROCESSDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for PROCESS_DESCRIPTION using the alias name ProcessDescription.
     * @param value value to set the PROCESS_DESCRIPTION
     */
    public void setProcessDescription(String value) {
        setAttributeInternal(PROCESSDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name BaselineTypeName.
     * @return the NAME
     */
    public String getBaselineTypeName() {
        return (String) getAttributeInternal(BASELINETYPENAME);
    }

    /**
     * Gets the attribute value for ID using the alias name Id1.
     * @return the ID
     */
    public String getId1() {
        return (String) getAttributeInternal(ID1);
    }

    /**
     * Gets the attribute value for ID using the alias name Id2.
     * @return the ID
     */
    public BigDecimal getId2() {
        return (BigDecimal) getAttributeInternal(ID2);
    }

    /**
     * Gets the attribute value for EXCEL_REPORT using the alias name ExcelReport.
     * @return the EXCEL_REPORT
     */
    public Clob getExcelReport() {
        return (Clob) getAttributeInternal(EXCELREPORT);
    }

    /**
     * Sets <code>value</code> as attribute value for EXCEL_REPORT using the alias name ExcelReport.
     * @param value value to set the EXCEL_REPORT
     */
    public void setExcelReport(Clob value) {
        setAttributeInternal(EXCELREPORT, value);
    }

    /**
     * Gets the attribute value for LTCI_ID using the alias name LtciId.
     * @return the LTCI_ID
     */
    public String getLtciId() {
        return (String) getAttributeInternal(LTCIID);
    }

    /**
     * Sets <code>value</code> as attribute value for LTCI_ID using the alias name LtciId.
     * @param value value to set the LTCI_ID
     */
    public void setLtciId(String value) {
        setAttributeInternal(LTCIID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MaxLtcProcessId.
     * @return the MaxLtcProcessId
     */
    public String getMaxLtcProcessId() {
        return (String) getAttributeInternal(MAXLTCPROCESSID);
    }
    
    /**
         * Sets <code>value</code> as the attribute value for the calculated attribute MaxLtcProcessId.
         * @param value value to set the  MaxLtcProcessId
         */
        public void setMaxLtcProcessId(String value) {
            setAttributeInternal(MAXLTCPROCESSID, value);
        }



    /**
     * Gets the attribute value for the calculated attribute Publish.
     * @return the Publish
     */
    public String getPublish() {
        return (String) getAttributeInternal(PUBLISH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Publish.
     * @param value value to set the  Publish
     */
    public void setPublish(String value) {
        setAttributeInternal(PUBLISH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BaselineTypeId.
     * @return the BaselineTypeId
     */
    public String getBaselineTypeId() {
        return (String) getAttributeInternal(BASELINETYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BaselineTypeId.
     * @param value value to set the  BaselineTypeId
     */
    public void setBaselineTypeId(String value) {
        setAttributeInternal(BASELINETYPEID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SensorView.
     */
    public RowIterator getSensorView() {
        return (RowIterator) getAttributeInternal(SENSORVIEW);
    }

    /**
     * Gets the associated <code>ProjectViewRowImpl</code> using master-detail link ProjectView.
     */
    public ProjectViewRowImpl getProjectView() {
        return (ProjectViewRowImpl) getAttributeInternal(PROJECTVIEW);
    }

    /**
     * Sets the master-detail link ProjectView between this object and <code>value</code>.
     */
    public void setProjectView(ProjectViewRowImpl value) {
        setAttributeInternal(PROJECTVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TimelineBaselineView.
     */
    public RowIterator getTimelineBaselineView() {
        return (RowIterator) getAttributeInternal(TIMELINEBASELINEVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> BaseLineTypeView.
     */
    public RowSet getBaseLineTypeView() {
        return (RowSet) getAttributeInternal(BASELINETYPEVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    public void publish() {
        runStatement("begin timeline_pkg.publish(?,?,?); end;", true, getId().toString(), getPublish(),
                     getBaselineTypeId());

        this.refresh();
    }

    public void receive() {
        runStatement("begin timeline_pkg.receive(?); end;", true, getId().toString());

        this.refresh();
    }

    public void unlock() {
        runStatement("begin timeline_pkg.unlock(?); end;", true, getId().toString());

        this.refresh();
    }

    public boolean isBusy() {
        return getIsSyncing();
    }

    public void receiveStudies() {
        runStatement("begin timeline_pkg.receive(?,?,?); end;", true, getId().toString(), null,
                     (getIsSyncing() == false ? "0" : "1"));
    }

    public void deleteStudies() {
        runStatement("begin remove_studies_pkg.send(?); end;", true, getId().toString());
    }
}
