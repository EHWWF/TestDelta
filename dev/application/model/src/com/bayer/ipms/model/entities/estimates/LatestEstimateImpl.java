package com.bayer.ipms.model.entities.estimates;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.views.estimates.common.LatestEstimatesProcessView;
import com.bayer.ipms.model.views.estimates.common.LatestEstimatesProcessViewRow;
import com.bayer.ipms.model.views.estimates.common.LatestEstimatesTagViewRow;

import oracle.adf.share.ADFContext;
import oracle.adf.share.security.SecurityContext;

import oracle.jbo.Key;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 28 13:55:24 EET 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LatestEstimateImpl extends IPMSEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(LatestEstimateImpl obj) {
                return obj.getId();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ProjectId {
            public Object get(LatestEstimateImpl obj) {
                return obj.getProjectId();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setProjectId((String) value);
            }
        },
        StudyId {
            public Object get(LatestEstimateImpl obj) {
                return obj.getStudyId();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setStudyId((String) value);
            }
        },
        FunctionCode {
            public Object get(LatestEstimateImpl obj) {
                return obj.getFunctionCode();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setFunctionCode((String) value);
            }
        },
        EstimateDetCurrYear {
            public Object get(LatestEstimateImpl obj) {
                return obj.getEstimateDetCurrYear();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setEstimateDetCurrYear((Float) value);
            }
        },
        EstimateDetNextYear {
            public Object get(LatestEstimateImpl obj) {
                return obj.getEstimateDetNextYear();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setEstimateDetNextYear((Float) value);
            }
        },
        CreateDate {
            public Object get(LatestEstimateImpl obj) {
                return obj.getCreateDate();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        UpdateDate {
            public Object get(LatestEstimateImpl obj) {
                return obj.getUpdateDate();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        EstimateProbCurrYear {
            public Object get(LatestEstimateImpl obj) {
                return obj.getEstimateProbCurrYear();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setEstimateProbCurrYear((Float) value);
            }
        },
        EstimateProbNextYear {
            public Object get(LatestEstimateImpl obj) {
                return obj.getEstimateProbNextYear();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setEstimateProbNextYear((Float) value);
            }
        },
        CreateUserId {
            public Object get(LatestEstimateImpl obj) {
                return obj.getCreateUserId();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        UpdateUserId {
            public Object get(LatestEstimateImpl obj) {
                return obj.getUpdateUserId();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SubtypeCode {
            public Object get(LatestEstimateImpl obj) {
                return obj.getSubtypeCode();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setSubtypeCode((String) value);
            }
        },
        DevelopmentPhaseCode {
            public Object get(LatestEstimateImpl obj) {
                return obj.getDevelopmentPhaseCode();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setDevelopmentPhaseCode((String) value);
            }
        },
        StudyStatusCode {
            public Object get(LatestEstimateImpl obj) {
                return obj.getStudyStatusCode();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setStudyStatusCode((String) value);
            }
        },
        IsUpserted {
            public Object get(LatestEstimateImpl obj) {
                return obj.getIsUpserted();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setIsUpserted((Integer) value);
            }
        },
        Details {
            public Object get(LatestEstimateImpl obj) {
                return obj.getDetails();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setDetails((String) value);
            }
        },
        StartDate {
            public Object get(LatestEstimateImpl obj) {
                return obj.getStartDate();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setStartDate((Date) value);
            }
        },
        FinishDate {
            public Object get(LatestEstimateImpl obj) {
                return obj.getFinishDate();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setFinishDate((Date) value);
            }
        },
        IsPlaceholder {
            public Object get(LatestEstimateImpl obj) {
                return obj.getIsPlaceholder();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setIsPlaceholder((Integer) value);
            }
        },
        ProcessId {
            public Object get(LatestEstimateImpl obj) {
                return obj.getProcessId();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setProcessId((String) value);
            }
        },
        IsPrefilled {
            public Object get(LatestEstimateImpl obj) {
                return obj.getIsPrefilled();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setIsPrefilled((Integer) value);
            }
        },
        CommentsCurrYear {
            public Object get(LatestEstimateImpl obj) {
                return obj.getCommentsCurrYear();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setCommentsCurrYear((String) value);
            }
        },
        CommentsNextYear {
            public Object get(LatestEstimateImpl obj) {
                return obj.getCommentsNextYear();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setCommentsNextYear((String) value);
            }
        },
        LatestEstimatesProcessView {
            public Object get(LatestEstimateImpl obj) {
                return obj.getLatestEstimatesProcessView();
            }

            public void put(LatestEstimateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(LatestEstimateImpl object);

        public abstract void put(LatestEstimateImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int STUDYID = AttributesEnum.StudyId.index();
    public static final int FUNCTIONCODE = AttributesEnum.FunctionCode.index();
    public static final int ESTIMATEDETCURRYEAR = AttributesEnum.EstimateDetCurrYear.index();
    public static final int ESTIMATEDETNEXTYEAR = AttributesEnum.EstimateDetNextYear.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int ESTIMATEPROBCURRYEAR = AttributesEnum.EstimateProbCurrYear.index();
    public static final int ESTIMATEPROBNEXTYEAR = AttributesEnum.EstimateProbNextYear.index();
    public static final int CREATEUSERID = AttributesEnum.CreateUserId.index();
    public static final int UPDATEUSERID = AttributesEnum.UpdateUserId.index();
    public static final int SUBTYPECODE = AttributesEnum.SubtypeCode.index();
    public static final int DEVELOPMENTPHASECODE = AttributesEnum.DevelopmentPhaseCode.index();
    public static final int STUDYSTATUSCODE = AttributesEnum.StudyStatusCode.index();
    public static final int ISUPSERTED = AttributesEnum.IsUpserted.index();
    public static final int DETAILS = AttributesEnum.Details.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int FINISHDATE = AttributesEnum.FinishDate.index();
    public static final int ISPLACEHOLDER = AttributesEnum.IsPlaceholder.index();
    public static final int PROCESSID = AttributesEnum.ProcessId.index();
    public static final int ISPREFILLED = AttributesEnum.IsPrefilled.index();
    public static final int COMMENTSCURRYEAR = AttributesEnum.CommentsCurrYear.index();
    public static final int COMMENTSNEXTYEAR = AttributesEnum.CommentsNextYear.index();
    public static final int LATESTESTIMATESPROCESSVIEW = AttributesEnum.LatestEstimatesProcessView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LatestEstimateImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.bayer.ipms.model.entities.estimates.LatestEstimate");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for ProjectId, using the alias name ProjectId.
     * @return the value of ProjectId
     */
    public String getProjectId() {
        return (String) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectId.
     * @param value value to set the ProjectId
     */
    public void setProjectId(String value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for StudyId, using the alias name StudyId.
     * @return the value of StudyId
     */
    public String getStudyId() {
        return (String) getAttributeInternal(STUDYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StudyId.
     * @param value value to set the StudyId
     */
    public void setStudyId(String value) {
        setAttributeInternal(STUDYID, value);
    }

    /**
     * Gets the attribute value for FunctionCode, using the alias name FunctionCode.
     * @return the value of FunctionCode
     */
    public String getFunctionCode() {
        return (String) getAttributeInternal(FUNCTIONCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FunctionCode.
     * @param value value to set the FunctionCode
     */
    public void setFunctionCode(String value) {
        setAttributeInternal(FUNCTIONCODE, value);
    }

    /**
     * Gets the attribute value for EstimateDetCurrYear, using the alias name EstimateDetCurrYear.
     * @return the value of EstimateDetCurrYear
     */
    public Float getEstimateDetCurrYear() {
        return (Float) getAttributeInternal(ESTIMATEDETCURRYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for EstimateDetCurrYear.
     * @param value value to set the EstimateDetCurrYear
     */
    public void setEstimateDetCurrYear(Float value) {
        setAttributeInternal(ESTIMATEDETCURRYEAR, value);
    }

    /**
     * Gets the attribute value for EstimateDetNextYear, using the alias name EstimateDetNextYear.
     * @return the value of EstimateDetNextYear
     */
    public Float getEstimateDetNextYear() {
        return (Float) getAttributeInternal(ESTIMATEDETNEXTYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for EstimateDetNextYear.
     * @param value value to set the EstimateDetNextYear
     */
    public void setEstimateDetNextYear(Float value) {
        setAttributeInternal(ESTIMATEDETNEXTYEAR, value);
    }

    /**
     * Gets the attribute value for CreateDate, using the alias name CreateDate.
     * @return the value of CreateDate
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Gets the attribute value for UpdateDate, using the alias name UpdateDate.
     * @return the value of UpdateDate
     */
    public Date getUpdateDate() {
        return (Date) getAttributeInternal(UPDATEDATE);
    }

    /**
     * Gets the attribute value for EstimateProbCurrYear, using the alias name EstimateProbCurrYear.
     * @return the value of EstimateProbCurrYear
     */
    public Float getEstimateProbCurrYear() {
        return (Float) getAttributeInternal(ESTIMATEPROBCURRYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for EstimateProbCurrYear.
     * @param value value to set the EstimateProbCurrYear
     */
    public void setEstimateProbCurrYear(Float value) {
        setAttributeInternal(ESTIMATEPROBCURRYEAR, value);
    }

    /**
     * Gets the attribute value for EstimateProbNextYear, using the alias name EstimateProbNextYear.
     * @return the value of EstimateProbNextYear
     */
    public Float getEstimateProbNextYear() {
        return (Float) getAttributeInternal(ESTIMATEPROBNEXTYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for EstimateProbNextYear.
     * @param value value to set the EstimateProbNextYear
     */
    public void setEstimateProbNextYear(Float value) {
        setAttributeInternal(ESTIMATEPROBNEXTYEAR, value);
    }

    /**
     * Gets the attribute value for CreateUserId, using the alias name CreateUserId.
     * @return the value of CreateUserId
     */
    public String getCreateUserId() {
        return (String) getAttributeInternal(CREATEUSERID);
    }

    /**
     * Gets the attribute value for UpdateUserId, using the alias name UpdateUserId.
     * @return the value of UpdateUserId
     */
    public String getUpdateUserId() {
        return (String) getAttributeInternal(UPDATEUSERID);
    }

    /**
     * Gets the attribute value for SubtypeCode, using the alias name SubtypeCode.
     * @return the value of SubtypeCode
     */
    public String getSubtypeCode() {
        return (String) getAttributeInternal(SUBTYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubtypeCode.
     * @param value value to set the SubtypeCode
     */
    public void setSubtypeCode(String value) {
        setAttributeInternal(SUBTYPECODE, value);
    }

    /**
     * Gets the attribute value for DevelopmentPhaseCode, using the alias name DevelopmentPhaseCode.
     * @return the value of DevelopmentPhaseCode
     */
    public String getDevelopmentPhaseCode() {
        return (String) getAttributeInternal(DEVELOPMENTPHASECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DevelopmentPhaseCode.
     * @param value value to set the DevelopmentPhaseCode
     */
    public void setDevelopmentPhaseCode(String value) {
        setAttributeInternal(DEVELOPMENTPHASECODE, value);
    }

    /**
     * Gets the attribute value for StudyStatusCode, using the alias name StudyStatusCode.
     * @return the value of StudyStatusCode
     */
    public String getStudyStatusCode() {
        return (String) getAttributeInternal(STUDYSTATUSCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StudyStatusCode.
     * @param value value to set the StudyStatusCode
     */
    public void setStudyStatusCode(String value) {
        setAttributeInternal(STUDYSTATUSCODE, value);
    }

    /**
     * Gets the attribute value for IsUpserted, using the alias name IsUpserted.
     * @return the value of IsUpserted
     */
    public Integer getIsUpserted() {
        return (Integer) getAttributeInternal(ISUPSERTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsUpserted.
     * @param value value to set the IsUpserted
     */
    public void setIsUpserted(Integer value) {
        setAttributeInternal(ISUPSERTED, value);
    }

    /**
     * Gets the attribute value for Details, using the alias name Details.
     * @return the value of Details
     */
    public String getDetails() {
        return (String) getAttributeInternal(DETAILS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Details.
     * @param value value to set the Details
     */
    public void setDetails(String value) {
        setAttributeInternal(DETAILS, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the value of StartDate
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for FinishDate, using the alias name FinishDate.
     * @return the value of FinishDate
     */
    public Date getFinishDate() {
        return (Date) getAttributeInternal(FINISHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FinishDate.
     * @param value value to set the FinishDate
     */
    public void setFinishDate(Date value) {
        setAttributeInternal(FINISHDATE, value);
    }

    /**
     * Gets the attribute value for IsPlaceholder, using the alias name IsPlaceholder.
     * @return the value of IsPlaceholder
     */
    public Integer getIsPlaceholder() {
        return (Integer) getAttributeInternal(ISPLACEHOLDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsPlaceholder.
     * @param value value to set the IsPlaceholder
     */
    public void setIsPlaceholder(Integer value) {
        setAttributeInternal(ISPLACEHOLDER, value);
    }

    /**
     * Gets the attribute value for ProcessId, using the alias name ProcessId.
     * @return the value of ProcessId
     */
    public String getProcessId() {
        return (String) getAttributeInternal(PROCESSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProcessId.
     * @param value value to set the ProcessId
     */
    public void setProcessId(String value) {
        setAttributeInternal(PROCESSID, value);
    }

    /**
     * Gets the attribute value for IsPrefilled, using the alias name IsPrefilled.
     * @return the value of IsPrefilled
     */
    public Integer getIsPrefilled() {
        return (Integer) getAttributeInternal(ISPREFILLED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsPrefilled.
     * @param value value to set the IsPrefilled
     */
    public void setIsPrefilled(Integer value) {
        setAttributeInternal(ISPREFILLED, value);
    }

    /**
     * Gets the attribute value for CommentsCurrYear, using the alias name CommentsCurrYear.
     * @return the value of CommentsCurrYear
     */
    public String getCommentsCurrYear() {
        return (String) getAttributeInternal(COMMENTSCURRYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for CommentsCurrYear.
     * @param value value to set the CommentsCurrYear
     */
    public void setCommentsCurrYear(String value) {
        setAttributeInternal(COMMENTSCURRYEAR, value);
    }

    /**
     * Gets the attribute value for CommentsNextYear, using the alias name CommentsNextYear.
     * @return the value of CommentsNextYear
     */
    public String getCommentsNextYear() {
        return (String) getAttributeInternal(COMMENTSNEXTYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for CommentsNextYear.
     * @param value value to set the CommentsNextYear
     */
    public void setCommentsNextYear(String value) {
        setAttributeInternal(COMMENTSNEXTYEAR, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LatestEstimatesProcessView.
     */
    public RowSet getLatestEstimatesProcessView() {
        return (RowSet) getAttributeInternal(LATESTESTIMATESPROCESSVIEW);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }

    public boolean validateIsProcessTerminated() {

        SecurityContext sctx = ADFContext.getCurrent().getSecurityContext();

        if (!sctx.isUserInRole("EstimatesTagMeetingFinalize") && ( sctx.isUserInRole("EstimatesProvide") ||
            sctx.isUserInRole("EstimatesProvideAssigned")) ) {

            LatestEstimatesProcessView lep =
                (LatestEstimatesProcessView) getLatestEstimatesProcessView().getViewObject();
            LatestEstimatesProcessViewRow lepRow = (LatestEstimatesProcessViewRow) lep.getRowById(getProcessId());

            return lepRow.getStatusCode().equals("RUN");
        } else {
            return true;
        }
    }

    public boolean validateIsTagFrozen() {

        SecurityContext sctx = ADFContext.getCurrent().getSecurityContext();
        if (sctx.isUserInRole("EstimatesTagMeetingFinalize")) {

            LatestEstimatesProcessView lep =
                (LatestEstimatesProcessView) getLatestEstimatesProcessView().getViewObject();
            LatestEstimatesProcessViewRow lepRow = (LatestEstimatesProcessViewRow) lep.getRowById(getProcessId());
            LatestEstimatesTagViewRow letRow = (LatestEstimatesTagViewRow) lepRow.getLatestEstimatesTagView();

            return !letRow.getIsFrozen();
        } else {
            return true;
        }
    }


}

