package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.common.AnnouncementViewRow;

import java.sql.Date;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 03 17:27:37 EEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AnnouncementViewRowImpl extends IPMSViewRowImpl implements AnnouncementViewRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CreateDate {
            public Object get(AnnouncementViewRowImpl obj) {
                return obj.getCreateDate();
            }

            public void put(AnnouncementViewRowImpl obj, Object value) {
                obj.setCreateDate((Date)value);
            }
        }
        ,
        CreateUserId {
            public Object get(AnnouncementViewRowImpl obj) {
                return obj.getCreateUserId();
            }

            public void put(AnnouncementViewRowImpl obj, Object value) {
                obj.setCreateUserId((String)value);
            }
        }
        ,
        FinishDate {
            public Object get(AnnouncementViewRowImpl obj) {
                return obj.getFinishDate();
            }

            public void put(AnnouncementViewRowImpl obj, Object value) {
                obj.setFinishDate((Date)value);
            }
        }
        ,
        Id {
            public Object get(AnnouncementViewRowImpl obj) {
                return obj.getId();
            }

            public void put(AnnouncementViewRowImpl obj, Object value) {
                obj.setId((String)value);
            }
        }
        ,
        StartDate {
            public Object get(AnnouncementViewRowImpl obj) {
                return obj.getStartDate();
            }

            public void put(AnnouncementViewRowImpl obj, Object value) {
                obj.setStartDate((Date)value);
            }
        }
        ,
        Text {
            public Object get(AnnouncementViewRowImpl obj) {
                return obj.getText();
            }

            public void put(AnnouncementViewRowImpl obj, Object value) {
                obj.setText((String)value);
            }
        }
        ,
        UpdateDate {
            public Object get(AnnouncementViewRowImpl obj) {
                return obj.getUpdateDate();
            }

            public void put(AnnouncementViewRowImpl obj, Object value) {
                obj.setUpdateDate((Date)value);
            }
        }
        ,
        UpdateUserId {
            public Object get(AnnouncementViewRowImpl obj) {
                return obj.getUpdateUserId();
            }

            public void put(AnnouncementViewRowImpl obj, Object value) {
                obj.setUpdateUserId((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AnnouncementViewRowImpl object);

        public abstract void put(AnnouncementViewRowImpl object, Object value);

        public int index() {
            return AnnouncementViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AnnouncementViewRowImpl.AttributesEnum.firstIndex() + AnnouncementViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AnnouncementViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int CREATEUSERID = AttributesEnum.CreateUserId.index();
    public static final int FINISHDATE = AttributesEnum.FinishDate.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int TEXT = AttributesEnum.Text.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int UPDATEUSERID = AttributesEnum.UpdateUserId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AnnouncementViewRowImpl() {
    }

    /**
     * Gets Announcement entity object.
     * @return the Announcement
     */
    public IPMSEntityImpl getAnnouncement() {
        return (IPMSEntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_DATE using the alias name CreateDate.
     * @param value value to set the CREATE_DATE
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for CREATE_USER_ID using the alias name CreateUserId.
     * @return the CREATE_USER_ID
     */
    public String getCreateUserId() {
        return (String) getAttributeInternal(CREATEUSERID);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_USER_ID using the alias name CreateUserId.
     * @param value value to set the CREATE_USER_ID
     */
    public void setCreateUserId(String value) {
        setAttributeInternal(CREATEUSERID, value);
    }

    /**
     * Gets the attribute value for FINISH_DATE using the alias name FinishDate.
     * @return the FINISH_DATE
     */
    public Date getFinishDate() {
        return (Date) getAttributeInternal(FINISHDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for FINISH_DATE using the alias name FinishDate.
     * @param value value to set the FINISH_DATE
     */
    public void setFinishDate(Date value) {
        setAttributeInternal(FINISHDATE, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for START_DATE using the alias name StartDate.
     * @return the START_DATE
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for START_DATE using the alias name StartDate.
     * @param value value to set the START_DATE
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for TEXT using the alias name Text.
     * @return the TEXT
     */
    public String getText() {
        return (String) getAttributeInternal(TEXT);
    }

    /**
     * Sets <code>value</code> as attribute value for TEXT using the alias name Text.
     * @param value value to set the TEXT
     */
    public void setText(String value) {
        setAttributeInternal(TEXT, value);
    }

    /**
     * Gets the attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @return the UPDATE_DATE
     */
    public Date getUpdateDate() {
        return (Date) getAttributeInternal(UPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @param value value to set the UPDATE_DATE
     */
    public void setUpdateDate(Date value) {
        setAttributeInternal(UPDATEDATE, value);
    }

    /**
     * Gets the attribute value for UPDATE_USER_ID using the alias name UpdateUserId.
     * @return the UPDATE_USER_ID
     */
    public String getUpdateUserId() {
        return (String) getAttributeInternal(UPDATEUSERID);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATE_USER_ID using the alias name UpdateUserId.
     * @param value value to set the UPDATE_USER_ID
     */
    public void setUpdateUserId(String value) {
        setAttributeInternal(UPDATEUSERID, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
