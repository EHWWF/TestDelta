package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.common.RoadmapViewRow;

import java.sql.Date;
import java.text.SimpleDateFormat;

import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 20 10:10:08 CEST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RoadmapViewRowImpl extends IPMSViewRowImpl implements RoadmapViewRow {


    public static final int ENTITY_PROJECTROADMAP = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id {
            protected Object get(RoadmapViewRowImpl obj) {
                return obj.getId();
            }

            protected void put(RoadmapViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectId {
            protected Object get(RoadmapViewRowImpl obj) {
                return obj.getProjectId();
            }

            protected void put(RoadmapViewRowImpl obj, Object value) {
                obj.setProjectId((String) value);
            }
        }
        ,
        Topic {
            protected Object get(RoadmapViewRowImpl obj) {
                return obj.getTopic();
            }

            protected void put(RoadmapViewRowImpl obj, Object value) {
                obj.setTopic((String) value);
            }
        }
        ,
        Date {
            protected Object get(RoadmapViewRowImpl obj) {
                return obj.getDate();
            }

            protected void put(RoadmapViewRowImpl obj, Object value) {
                obj.setDate((Date) value);
            }
        }
        ,
        Description {
            protected Object get(RoadmapViewRowImpl obj) {
                return obj.getDescription();
            }

            protected void put(RoadmapViewRowImpl obj, Object value) {
                obj.setDescription((String) value);
            }
        }
        ,
        UpdateDate {
            protected Object get(RoadmapViewRowImpl obj) {
                return obj.getUpdateDate();
            }

            protected void put(RoadmapViewRowImpl obj, Object value) {
                obj.setUpdateDate((Date) value);
            }
        }
        ,
        UpdateUserId {
            protected Object get(RoadmapViewRowImpl obj) {
                return obj.getUpdateUserId();
            }

            protected void put(RoadmapViewRowImpl obj, Object value) {
                obj.setUpdateUserId((String) value);
            }
        }
        ,
        CreateDate {
            protected Object get(RoadmapViewRowImpl obj) {
                return obj.getCreateDate();
            }

            protected void put(RoadmapViewRowImpl obj, Object value) {
                obj.setCreateDate((Date) value);
            }
        }
        ,
        CreateUserId {
            protected Object get(RoadmapViewRowImpl obj) {
                return obj.getCreateUserId();
            }

            protected void put(RoadmapViewRowImpl obj, Object value) {
                obj.setCreateUserId((String) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected abstract Object get(RoadmapViewRowImpl object);

        protected abstract void put(RoadmapViewRowImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int TOPIC = AttributesEnum.Topic.index();
    public static final int DATE = AttributesEnum.Date.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int UPDATEUSERID = AttributesEnum.UpdateUserId.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int CREATEUSERID = AttributesEnum.CreateUserId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RoadmapViewRowImpl() {
    }

    /**
     * Gets ProjectRoadmap entity object.
     * @return the ProjectRoadmap
     */
    public IPMSEntityImpl getProjectRoadmap() {
        return (IPMSEntityImpl) getEntity(ENTITY_PROJECTROADMAP);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }


    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public String getProjectId() {
        return (String) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(String value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for TOPIC using the alias name Topic.
     * @return the TOPIC
     */
    public String getTopic() {
        return (String) getAttributeInternal(TOPIC);
    }

    /**
     * Sets <code>value</code> as attribute value for TOPIC using the alias name Topic.
     * @param value value to set the TOPIC
     */
    public void setTopic(String value) {
        setAttributeInternal(TOPIC, value);
    }

    /**
     * Gets the attribute value for "DATE" using the alias name Date.
     * @return the "DATE"
     */
    public Date getDate() {
        return (Date) getAttributeInternal(DATE);
    }

    /**
     * Sets <code>value</code> as attribute value for "DATE" using the alias name Date.
     * @param value value to set the "DATE"
     */
    public void setDate(Date value) {
        setAttributeInternal(DATE, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @return the UPDATE_DATE
     */
    public Date getUpdateDate() {
        return (Date) getAttributeInternal(UPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @param value value to set the UPDATE_DATE
     */
    public void setUpdateDate(Date value) {
        setAttributeInternal(UPDATEDATE, value);
    }

    /**
     * Gets the attribute value for UPDATE_USER_ID using the alias name UpdateUserId.
     * @return the UPDATE_USER_ID
     */
    public String getUpdateUserId() {
        return (String) getAttributeInternal(UPDATEUSERID);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATE_USER_ID using the alias name UpdateUserId.
     * @param value value to set the UPDATE_USER_ID
     */
    public void setUpdateUserId(String value) {
        setAttributeInternal(UPDATEUSERID, value);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_DATE using the alias name CreateDate.
     * @param value value to set the CREATE_DATE
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for CREATE_USER_ID using the alias name CreateUserId.
     * @return the CREATE_USER_ID
     */
    public String getCreateUserId() {
        return (String) getAttributeInternal(CREATEUSERID);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_USER_ID using the alias name CreateUserId.
     * @param value value to set the CREATE_USER_ID
     */
    public void setCreateUserId(String value) {
        setAttributeInternal(CREATEUSERID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    public void createRoadmap(String projectId, Date date, String topic, String description) {
         
         String date1 = null;
         if (date != null) {
             SimpleDateFormat dateFormat = new SimpleDateFormat("DD-MM-RR");
             date1 = dateFormat.format(date);
         }
         
      //   RoadmapViewImpl vo = (RoadmapViewImpl)this.getViewObject();
      //   System.err.println("createRoadmap, vo.getProjectId():" + projectId);

         runStatement("begin project_roadmap_pkg.insert_roadmap(?,?,?,?,?); end;", true, 
                      null, projectId, date1, topic, description);
         
         refresh();
     }
}

