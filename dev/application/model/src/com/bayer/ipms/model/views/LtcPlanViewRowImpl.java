package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;
import com.bayer.ipms.model.views.common.LtcPlanViewRow;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.RowIterator;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 01 09:44:23 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LtcPlanViewRowImpl extends IPMSViewRowImpl implements LtcPlanViewRow {


    public static final int ENTITY_LTCPLAN = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        LtciId,
        Code,
        Name,
        StudyId,
        WbsId,
        ParentWbsId,
        CreateDate,
        StartDate,
        FinishDate,
        IntExtFlag,
        StudyModusNo,
        StudyModusName,
        ClinPlanType,
        StudyUnitCount,
        ActualPatients,
        PlanPatients,
        StudyUnitCountPlan,
        LtIntCost,
        LtCroCost,
        LtEcgCost,
        LtOecCost,
        ActIntCost,
        ActCroCost,
        ActEcgCost,
        ActOeciCost,
        FcIntCost,
        FcCroCost,
        FcEcgCost,
        FcOeciCost,
        TotalFlag,
        SearcFcExists,
        SearchLtcvExists,
        SearchStudyRelated,
        LtcPlan1,
        LtcValueView,
        LtciIdLtcPlanView;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int LTCIID = AttributesEnum.LtciId.index();
    public static final int CODE = AttributesEnum.Code.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int STUDYID = AttributesEnum.StudyId.index();
    public static final int WBSID = AttributesEnum.WbsId.index();
    public static final int PARENTWBSID = AttributesEnum.ParentWbsId.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int FINISHDATE = AttributesEnum.FinishDate.index();
    public static final int INTEXTFLAG = AttributesEnum.IntExtFlag.index();
    public static final int STUDYMODUSNO = AttributesEnum.StudyModusNo.index();
    public static final int STUDYMODUSNAME = AttributesEnum.StudyModusName.index();
    public static final int CLINPLANTYPE = AttributesEnum.ClinPlanType.index();
    public static final int STUDYUNITCOUNT = AttributesEnum.StudyUnitCount.index();
    public static final int ACTUALPATIENTS = AttributesEnum.ActualPatients.index();
    public static final int PLANPATIENTS = AttributesEnum.PlanPatients.index();
    public static final int STUDYUNITCOUNTPLAN = AttributesEnum.StudyUnitCountPlan.index();
    public static final int LTINTCOST = AttributesEnum.LtIntCost.index();
    public static final int LTCROCOST = AttributesEnum.LtCroCost.index();
    public static final int LTECGCOST = AttributesEnum.LtEcgCost.index();
    public static final int LTOECCOST = AttributesEnum.LtOecCost.index();
    public static final int ACTINTCOST = AttributesEnum.ActIntCost.index();
    public static final int ACTCROCOST = AttributesEnum.ActCroCost.index();
    public static final int ACTECGCOST = AttributesEnum.ActEcgCost.index();
    public static final int ACTOECICOST = AttributesEnum.ActOeciCost.index();
    public static final int FCINTCOST = AttributesEnum.FcIntCost.index();
    public static final int FCCROCOST = AttributesEnum.FcCroCost.index();
    public static final int FCECGCOST = AttributesEnum.FcEcgCost.index();
    public static final int FCOECICOST = AttributesEnum.FcOeciCost.index();
    public static final int TOTALFLAG = AttributesEnum.TotalFlag.index();
    public static final int SEARCFCEXISTS = AttributesEnum.SearcFcExists.index();
    public static final int SEARCHLTCVEXISTS = AttributesEnum.SearchLtcvExists.index();
    public static final int SEARCHSTUDYRELATED = AttributesEnum.SearchStudyRelated.index();
    public static final int LTCPLAN1 = AttributesEnum.LtcPlan1.index();
    public static final int LTCVALUEVIEW = AttributesEnum.LtcValueView.index();
    public static final int LTCIIDLTCPLANVIEW = AttributesEnum.LtciIdLtcPlanView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LtcPlanViewRowImpl() {
    }

    /**
     * Gets LtcPlan entity object.
     * @return the LtcPlan
     */
    public IPMSEntityImpl getLtcPlan() {
        return (IPMSEntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for LTCI_ID using the alias name LtciId.
     * @return the LTCI_ID
     */
    public BigDecimal getLtciId() {
        return (BigDecimal) getAttributeInternal(LTCIID);
    }

    /**
     * Sets <code>value</code> as attribute value for LTCI_ID using the alias name LtciId.
     * @param value value to set the LTCI_ID
     */
    public void setLtciId(BigDecimal value) {
        setAttributeInternal(LTCIID, value);
    }

    /**
     * Gets the attribute value for CODE using the alias name Code.
     * @return the CODE
     */
    public String getCode() {
        return (String) getAttributeInternal(CODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name Code.
     * @param value value to set the CODE
     */
    public void setCode(String value) {
        setAttributeInternal(CODE, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for STUDY_ID using the alias name StudyId.
     * @return the STUDY_ID
     */
    public String getStudyId() {
        return (String) getAttributeInternal(STUDYID);
    }

    /**
     * Sets <code>value</code> as attribute value for STUDY_ID using the alias name StudyId.
     * @param value value to set the STUDY_ID
     */
    public void setStudyId(String value) {
        setAttributeInternal(STUDYID, value);
    }

    /**
     * Gets the attribute value for WBS_ID using the alias name WbsId.
     * @return the WBS_ID
     */
    public String getWbsId() {
        return (String) getAttributeInternal(WBSID);
    }

    /**
     * Sets <code>value</code> as attribute value for WBS_ID using the alias name WbsId.
     * @param value value to set the WBS_ID
     */
    public void setWbsId(String value) {
        setAttributeInternal(WBSID, value);
    }

    /**
     * Gets the attribute value for PARENT_WBS_ID using the alias name ParentWbsId.
     * @return the PARENT_WBS_ID
     */
    public String getParentWbsId() {
        return (String) getAttributeInternal(PARENTWBSID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARENT_WBS_ID using the alias name ParentWbsId.
     * @param value value to set the PARENT_WBS_ID
     */
    public void setParentWbsId(String value) {
        setAttributeInternal(PARENTWBSID, value);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_DATE using the alias name CreateDate.
     * @param value value to set the CREATE_DATE
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute SearcFcExists.
     * @return the SearcFcExists
     */
    public Boolean getSearcFcExists() {
        return (Boolean) getAttributeInternal(SEARCFCEXISTS);
    }

    /**
     * Gets the attribute value for the calculated attribute SearchLtcvExists.
     * @return the SearchLtcvExists
     */
    public Boolean getSearchLtcvExists() {
        return (Boolean) getAttributeInternal(SEARCHLTCVEXISTS);
    }

    /**
     * Gets the attribute value for the calculated attribute SearchStudyRelated.
     * @return the SearchStudyRelated
     */
    public Boolean getSearchStudyRelated() {
        return (Boolean) getAttributeInternal(SEARCHSTUDYRELATED);
    }

    /**
     * Gets the attribute value for ACTUAL_PATIENTS using the alias name ActualPatients.
     * @return the ACTUAL_PATIENTS
     */
    public BigDecimal getActualPatients() {
        return (BigDecimal) getAttributeInternal(ACTUALPATIENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_PATIENTS using the alias name ActualPatients.
     * @param value value to set the ACTUAL_PATIENTS
     */
    public void setActualPatients(BigDecimal value) {
        setAttributeInternal(ACTUALPATIENTS, value);
    }

    /**
     * Gets the attribute value for PLAN_PATIENTS using the alias name PlanPatients.
     * @return the PLAN_PATIENTS
     */
    public BigDecimal getPlanPatients() {
        return (BigDecimal) getAttributeInternal(PLANPATIENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for PLAN_PATIENTS using the alias name PlanPatients.
     * @param value value to set the PLAN_PATIENTS
     */
    public void setPlanPatients(BigDecimal value) {
        setAttributeInternal(PLANPATIENTS, value);
    }

    /**
     * Gets the attribute value for STUDY_UNIT_COUNT_PLAN using the alias name StudyUnitCountPlan.
     * @return the STUDY_UNIT_COUNT_PLAN
     */
    public BigDecimal getStudyUnitCountPlan() {
        return (BigDecimal) getAttributeInternal(STUDYUNITCOUNTPLAN);
    }

    /**
     * Sets <code>value</code> as attribute value for STUDY_UNIT_COUNT_PLAN using the alias name StudyUnitCountPlan.
     * @param value value to set the STUDY_UNIT_COUNT_PLAN
     */
    public void setStudyUnitCountPlan(BigDecimal value) {
        setAttributeInternal(STUDYUNITCOUNTPLAN, value);
    }


    /**
     * Gets the attribute value for the calculated attribute LtIntCost.
     * @return the LtIntCost
     */
    public BigDecimal getLtIntCost() {
        return (BigDecimal) getAttributeInternal(LTINTCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute LtCroCost.
     * @return the LtCroCost
     */
    public BigDecimal getLtCroCost() {
        return (BigDecimal) getAttributeInternal(LTCROCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute LtEcgCost.
     * @return the LtEcgCost
     */
    public BigDecimal getLtEcgCost() {
        return (BigDecimal) getAttributeInternal(LTECGCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute LtOecCost.
     * @return the LtOecCost
     */
    public BigDecimal getLtOecCost() {
        return (BigDecimal) getAttributeInternal(LTOECCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute ActIntCost.
     * @return the ActIntCost
     */
    public BigDecimal getActIntCost() {
        return (BigDecimal) getAttributeInternal(ACTINTCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute ActCroCost.
     * @return the ActCroCost
     */
    public BigDecimal getActCroCost() {
        return (BigDecimal) getAttributeInternal(ACTCROCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute ActEcgCost.
     * @return the ActEcgCost
     */
    public BigDecimal getActEcgCost() {
        return (BigDecimal) getAttributeInternal(ACTECGCOST);
    }


    /**
     * Gets the attribute value for the calculated attribute ActOeciCost.
     * @return the ActOeciCost
     */
    public BigDecimal getActOeciCost() {
        return (BigDecimal) getAttributeInternal(ACTOECICOST);
    }

    /**
     * Gets the attribute value for the calculated attribute FcIntCost.
     * @return the FcIntCost
     */
    public BigDecimal getFcIntCost() {
        return (BigDecimal) getAttributeInternal(FCINTCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute FcCroCost.
     * @return the FcCroCost
     */
    public BigDecimal getFcCroCost() {
        return (BigDecimal) getAttributeInternal(FCCROCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute FcEcgCost.
     * @return the FcEcgCost
     */
    public BigDecimal getFcEcgCost() {
        return (BigDecimal) getAttributeInternal(FCECGCOST);
    }


    /**
     * Gets the attribute value for the calculated attribute FcOeciCost.
     * @return the FcOeciCost
     */
    public BigDecimal getFcOeciCost() {
        return (BigDecimal) getAttributeInternal(FCOECICOST);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalFlag.
     * @return the TotalFlag
     */
    public BigDecimal getTotalFlag() {
        return (BigDecimal) getAttributeInternal(TOTALFLAG);
    }

    /**
     * Gets the attribute value for INT_EXT_FLAG using the alias name IntExtFlag.
     * @return the INT_EXT_FLAG
     */
    public String getIntExtFlag() {
        return (String) getAttributeInternal(INTEXTFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for INT_EXT_FLAG using the alias name IntExtFlag.
     * @param value value to set the INT_EXT_FLAG
     */
    public void setIntExtFlag(String value) {
        setAttributeInternal(INTEXTFLAG, value);
    }

    /**
     * Gets the attribute value for STUDY_MODUS_NO using the alias name StudyModusNo.
     * @return the STUDY_MODUS_NO
     */
    public BigDecimal getStudyModusNo() {
        return (BigDecimal) getAttributeInternal(STUDYMODUSNO);
    }

    /**
     * Sets <code>value</code> as attribute value for STUDY_MODUS_NO using the alias name StudyModusNo.
     * @param value value to set the STUDY_MODUS_NO
     */
    public void setStudyModusNo(BigDecimal value) {
        setAttributeInternal(STUDYMODUSNO, value);
    }

    /**
     * Gets the attribute value for STUDY_MODUS_NAME using the alias name StudyModusName.
     * @return the STUDY_MODUS_NAME
     */
    public String getStudyModusName() {
        return (String) getAttributeInternal(STUDYMODUSNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for STUDY_MODUS_NAME using the alias name StudyModusName.
     * @param value value to set the STUDY_MODUS_NAME
     */
    public void setStudyModusName(String value) {
        setAttributeInternal(STUDYMODUSNAME, value);
    }

    /**
     * Gets the attribute value for STUDY_UNIT_COUNT using the alias name StudyUnitCount.
     * @return the STUDY_UNIT_COUNT
     */
    public BigDecimal getStudyUnitCount() {
        return (BigDecimal) getAttributeInternal(STUDYUNITCOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for STUDY_UNIT_COUNT using the alias name StudyUnitCount.
     * @param value value to set the STUDY_UNIT_COUNT
     */
    public void setStudyUnitCount(BigDecimal value) {
        setAttributeInternal(STUDYUNITCOUNT, value);
    }

    /**
     * Gets the attribute value for CLIN_PLAN_TYPE using the alias name ClinPlanType.
     * @return the CLIN_PLAN_TYPE
     */
    public String getClinPlanType() {
        return (String) getAttributeInternal(CLINPLANTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CLIN_PLAN_TYPE using the alias name ClinPlanType.
     * @param value value to set the CLIN_PLAN_TYPE
     */
    public void setClinPlanType(String value) {
        setAttributeInternal(CLINPLANTYPE, value);
    }

    /**
     * Gets the attribute value for START_DATE using the alias name StartDate.
     * @return the START_DATE
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for START_DATE using the alias name StartDate.
     * @param value value to set the START_DATE
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for FINISH_DATE using the alias name FinishDate.
     * @return the FINISH_DATE
     */
    public Date getFinishDate() {
        return (Date) getAttributeInternal(FINISHDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for FINISH_DATE using the alias name FinishDate.
     * @param value value to set the FINISH_DATE
     */
    public void setFinishDate(Date value) {
        setAttributeInternal(FINISHDATE, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LtcValueView.
     */
    public RowIterator getLtcValueView() {
        return (RowIterator)getAttributeInternal(LTCVALUEVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LtciIdLtcPlanView.
     */
    public RowIterator getLtciIdLtcPlanView() {
        return (RowIterator)getAttributeInternal(LTCIIDLTCPLANVIEW);
    }


}
