package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.common.SubstanceCodeAssignmentViewRow;

import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 24 15:58:04 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SubstanceCodeAssignmentViewRowImpl extends IPMSViewRowImpl implements SubstanceCodeAssignmentViewRow {


    public static final int ENTITY_SUBSTANCECODEASSIGNMENT = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(SubstanceCodeAssignmentViewRowImpl obj) {
                return obj.getId();
            }

            public void put(SubstanceCodeAssignmentViewRowImpl obj,
                            Object value) {
                obj.setId((String)value);
            }
        }
        ,
        ProjectId {
            public Object get(SubstanceCodeAssignmentViewRowImpl obj) {
                return obj.getProjectId();
            }

            public void put(SubstanceCodeAssignmentViewRowImpl obj,
                            Object value) {
                obj.setProjectId((String)value);
            }
        }
        ,
        SubstanceCode {
            public Object get(SubstanceCodeAssignmentViewRowImpl obj) {
                return obj.getSubstanceCode();
            }

            public void put(SubstanceCodeAssignmentViewRowImpl obj,
                            Object value) {
                obj.setSubstanceCode((String)value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(SubstanceCodeAssignmentViewRowImpl object);

        public abstract void put(SubstanceCodeAssignmentViewRowImpl object, Object value);

        public int index() {
            return SubstanceCodeAssignmentViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return SubstanceCodeAssignmentViewRowImpl.AttributesEnum.firstIndex() +
                   SubstanceCodeAssignmentViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals =
                    SubstanceCodeAssignmentViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int SUBSTANCECODE =
        AttributesEnum.SubstanceCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SubstanceCodeAssignmentViewRowImpl() {
    }


    /**
     * Gets SubstanceCodeAssignment entity object.
     * @return the SubstanceCodeAssignment
     */
    public IPMSEntityImpl getSubstanceCodeAssignment() {
        return (IPMSEntityImpl)getEntity(ENTITY_SUBSTANCECODEASSIGNMENT);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public String getProjectId() {
        return (String)getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(String value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for SUBSTANCE_CODE using the alias name SubstanceCode1.
     * @return the SUBSTANCE_CODE
     */
    public String getSubstanceCode() {
        return (String)getAttributeInternal(SUBSTANCECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBSTANCE_CODE using the alias name SubstanceCode1.
     * @param value value to set the SUBSTANCE_CODE
     */
    public void setSubstanceCode(String value) {
        setAttributeInternal(SUBSTANCECODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                   AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

