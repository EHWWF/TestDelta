package com.bayer.ipms.model.views.imports;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;

import com.bayer.ipms.model.views.imports.common.ImportViewRow;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 16 08:35:10 EEST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ImportViewRowImpl extends IPMSViewRowImpl implements ImportViewRow {

    public static final int ENTITY_IMPORTDATA = 0;
    public static final int ENTITY_IMPORTSTATUS = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ImportViewRowImpl obj) {
                return obj.getId();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProjectId {
            public Object get(ImportViewRowImpl obj) {
                return obj.getProjectId();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setProjectId((String) value);
            }
        }
        ,
        CreateDate {
            public Object get(ImportViewRowImpl obj) {
                return obj.getCreateDate();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UpdateDate {
            public Object get(ImportViewRowImpl obj) {
                return obj.getUpdateDate();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SyncDate {
            public Object get(ImportViewRowImpl obj) {
                return obj.getSyncDate();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IsSyncing {
            public Object get(ImportViewRowImpl obj) {
                return obj.getIsSyncing();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StatusCode {
            public Object get(ImportViewRowImpl obj) {
                return obj.getStatusCode();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        _StatusCode {
            public Object get(ImportViewRowImpl obj) {
                return obj.get_StatusCode();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.set_StatusCode((String) value);
            }
        }
        ,
        StatusName {
            public Object get(ImportViewRowImpl obj) {
                return obj.getStatusName();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreateUserId {
            public Object get(ImportViewRowImpl obj) {
                return obj.getCreateUserId();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UpdateUserId {
            public Object get(ImportViewRowImpl obj) {
                return obj.getUpdateUserId();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TypeMask {
            public Object get(ImportViewRowImpl obj) {
                return obj.getTypeMask();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setTypeMask((Integer) value);
            }
        }
        ,
        IsManual {
            public Object get(ImportViewRowImpl obj) {
                return obj.getIsManual();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setIsManual((Integer) value);
            }
        }
        ,
        Source {
            public Object get(ImportViewRowImpl obj) {
                return obj.getSource();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setSource((String) value);
            }
        }
        ,
        SandboxId {
            public Object get(ImportViewRowImpl obj) {
                return obj.getSandboxId();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setSandboxId((String) value);
            }
        }
        ,
        ImportTimelineElementView {
            public Object get(ImportViewRowImpl obj) {
                return obj.getImportTimelineElementView();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ImportStudyDataView {
            public Object get(ImportViewRowImpl obj) {
                return obj.getImportStudyDataView();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ImportStudyView {
            public Object get(ImportViewRowImpl obj) {
                return obj.getImportStudyView();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ImportStudyTargetWbsView {
            public Object get(ImportViewRowImpl obj) {
                return obj.getImportStudyTargetWbsView();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ImportProjectActivityView {
            public Object get(ImportViewRowImpl obj) {
                return obj.getImportProjectActivityView();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TimelineView {
            public Object get(ImportViewRowImpl obj) {
                return obj.getTimelineView();
            }

            public void put(ImportViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(ImportViewRowImpl object);

        public abstract void put(ImportViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int SYNCDATE = AttributesEnum.SyncDate.index();
    public static final int ISSYNCING = AttributesEnum.IsSyncing.index();
    public static final int STATUSCODE = AttributesEnum.StatusCode.index();
    public static final int _STATUSCODE = AttributesEnum._StatusCode.index();
    public static final int STATUSNAME = AttributesEnum.StatusName.index();
    public static final int CREATEUSERID = AttributesEnum.CreateUserId.index();
    public static final int UPDATEUSERID = AttributesEnum.UpdateUserId.index();
    public static final int TYPEMASK = AttributesEnum.TypeMask.index();
    public static final int ISMANUAL = AttributesEnum.IsManual.index();
    public static final int SOURCE = AttributesEnum.Source.index();
    public static final int SANDBOXID = AttributesEnum.SandboxId.index();
    public static final int IMPORTTIMELINEELEMENTVIEW = AttributesEnum.ImportTimelineElementView.index();
    public static final int IMPORTSTUDYDATAVIEW = AttributesEnum.ImportStudyDataView.index();
    public static final int IMPORTSTUDYVIEW = AttributesEnum.ImportStudyView.index();
    public static final int IMPORTSTUDYTARGETWBSVIEW = AttributesEnum.ImportStudyTargetWbsView.index();
    public static final int IMPORTPROJECTACTIVITYVIEW = AttributesEnum.ImportProjectActivityView.index();
    public static final int TIMELINEVIEW = AttributesEnum.TimelineView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ImportViewRowImpl() {
    }

    /**
     * Gets ImportData entity object.
     * @return the ImportData
     */
    public IPMSEntityImpl getImportData() {
        return (IPMSEntityImpl)getEntity(0);
    }

    /**
     * Gets ImportStatus entity object.
     * @return the ImportStatus
     */
    public IPMSEntityImpl getImportStatus() {
        return (IPMSEntityImpl)getEntity(1);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }


    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public String getProjectId() {
        return (String) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(String value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date)getAttributeInternal(CREATEDATE);
    }


    /**
     * Gets the attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @return the UPDATE_DATE
     */
    public Date getUpdateDate() {
        return (Date)getAttributeInternal(UPDATEDATE);
    }


    /**
     * Gets the attribute value for SYNC_DATE using the alias name SyncDate.
     * @return the SYNC_DATE
     */
    public Date getSyncDate() {
        return (Date)getAttributeInternal(SYNCDATE);
    }


    /**
     * Gets the attribute value for IS_SYNCING using the alias name IsSyncing.
     * @return the IS_SYNCING
     */
    public Boolean getIsSyncing() {
        return (Boolean)getAttributeInternal(ISSYNCING);
    }


    /**
     * Gets the attribute value for STATUS_CODE using the alias name StatusCode.
     * @return the STATUS_CODE
     */
    public String getStatusCode() {
        return (String) getAttributeInternal(STATUSCODE);
    }


    /**
     * Gets the attribute value for CODE using the alias name _StatusCode.
     * @return the CODE
     */
    public String get_StatusCode() {
        return (String) getAttributeInternal(_STATUSCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name _StatusCode.
     * @param value value to set the CODE
     */
    public void set_StatusCode(String value) {
        setAttributeInternal(_STATUSCODE, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name StatusName.
     * @return the NAME
     */
    public String getStatusName() {
        return (String) getAttributeInternal(STATUSNAME);
    }


    /**
     * Gets the attribute value for CREATE_USER_ID using the alias name CreateUserId.
     * @return the CREATE_USER_ID
     */
    public String getCreateUserId() {
        return (String) getAttributeInternal(CREATEUSERID);
    }


    /**
     * Gets the attribute value for UPDATE_USER_ID using the alias name UpdateUserId.
     * @return the UPDATE_USER_ID
     */
    public String getUpdateUserId() {
        return (String) getAttributeInternal(UPDATEUSERID);
    }


    /**
     * Gets the attribute value for TYPE_MASK using the alias name TypeMask.
     * @return the TYPE_MASK
     */
    public Integer getTypeMask() {
        return (Integer) getAttributeInternal(TYPEMASK);
    }

    /**
     * Sets <code>value</code> as attribute value for TYPE_MASK using the alias name TypeMask.
     * @param value value to set the TYPE_MASK
     */
    public void setTypeMask(Integer value) {
        setAttributeInternal(TYPEMASK, value);
    }


    /**
     * Gets the attribute value for IS_MANUAL using the alias name IsManual.
     * @return the IS_MANUAL
     */
    public Integer getIsManual() {
        return (Integer) getAttributeInternal(ISMANUAL);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_MANUAL using the alias name IsManual.
     * @param value value to set the IS_MANUAL
     */
    public void setIsManual(Integer value) {
        setAttributeInternal(ISMANUAL, value);
    }

    /**
     * Gets the attribute value for SOURCE using the alias name Source.
     * @return the SOURCE
     */
    public String getSource() {
        return (String) getAttributeInternal(SOURCE);
    }

    /**
     * Sets <code>value</code> as attribute value for SOURCE using the alias name Source.
     * @param value value to set the SOURCE
     */
    public void setSource(String value) {
        setAttributeInternal(SOURCE, value);
    }

    /**
     * Gets the attribute value for SANDBOX_ID using the alias name SandboxId.
     * @return the SANDBOX_ID
     */
    public String getSandboxId() {
        return (String) getAttributeInternal(SANDBOXID);
    }

    /**
     * Sets <code>value</code> as attribute value for SANDBOX_ID using the alias name SandboxId.
     * @param value value to set the SANDBOX_ID
     */
    public void setSandboxId(String value) {
        setAttributeInternal(SANDBOXID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ImportTimelineElementView.
     */
    public RowIterator getImportTimelineElementView() {
        return (RowIterator)getAttributeInternal(IMPORTTIMELINEELEMENTVIEW);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ImportStudyDataView.
     */
    public RowIterator getImportStudyDataView() {
        return (RowIterator)getAttributeInternal(IMPORTSTUDYDATAVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ImportStudyView.
     */
    public RowIterator getImportStudyView() {
        return (RowIterator) getAttributeInternal(IMPORTSTUDYVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ImportStudyTargetWbsView.
     */
    public RowIterator getImportStudyTargetWbsView() {
        return (RowIterator) getAttributeInternal(IMPORTSTUDYTARGETWBSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ImportProjectActivityView.
     */
    public RowIterator getImportProjectActivityView() {
        return (RowIterator) getAttributeInternal(IMPORTPROJECTACTIVITYVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TimelineView.
     */
    public RowIterator getTimelineView() {
        return (RowIterator) getAttributeInternal(TIMELINEVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public void start() {
        runStatement("begin import_pkg.launch(?); end;", true, getId().toString());

        this.refresh();
    }

    public void finish() {
        runStatement("begin import_pkg.finish(?); end;", true, getId().toString());

        this.refresh();
    }

    public void cancel() {
        getDBTransaction().rollback();

        runStatement("begin import_pkg.cancel(?); end;", true, getId().toString());

        //this.refresh();
    }

    public Integer launch(String projectId, short importType, boolean isManual) {
        // 1. Execute the import_pkg.launch
        String importId = this.<String>executeFunction("begin ? := import_pkg.launch(?, ?, ?); end;", true, projectId, String.valueOf(importType), (isManual ? "1" : "0"));
        
        // 2. Set the new import row as current for the row set
        Key importRowKey = new Key(new Object[] {importId});
        
        Row[] rows = this.getRowSet().findByKey(importRowKey, 1);
        
        if (rows != null && rows.length > 0)
            this.getRowSet().setCurrentRow(rows[0]);
        
        // 3. Return import row id
        if (importId == null)
            return null;
        
        return Integer.valueOf(importId);
    }
}
