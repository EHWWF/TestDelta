package com.bayer.ipms.model.views;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSViewRowImpl;
import com.bayer.ipms.model.views.common.CostsProbabilityExternalViewRow;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 01 12:52:46 EEST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CostsProbabilityExternalViewRowImpl extends IPMSViewRowImpl implements CostsProbabilityExternalViewRow {


    public static final int ENTITY_COSTSPROBABILITY2 = 0;
    public static final int ENTITY_COSTSPROBABILITY = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(CostsProbabilityExternalViewRowImpl obj) {
                return obj.getId();
            }

            public void put(CostsProbabilityExternalViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FunctionCode {
            public Object get(CostsProbabilityExternalViewRowImpl obj) {
                return obj.getFunctionCode();
            }

            public void put(CostsProbabilityExternalViewRowImpl obj, Object value) {
                obj.setFunctionCode((String) value);
            }
        }
        ,
        Lag {
            public Object get(CostsProbabilityExternalViewRowImpl obj) {
                return obj.getLag();
            }

            public void put(CostsProbabilityExternalViewRowImpl obj, Object value) {
                obj.setLag((Integer) value);
            }
        }
        ,
        Probability {
            public Object get(CostsProbabilityExternalViewRowImpl obj) {
                return obj.getProbability();
            }

            public void put(CostsProbabilityExternalViewRowImpl obj, Object value) {
                obj.setProbability((Integer) value);
            }
        }
        ,
        ProjectId {
            public Object get(CostsProbabilityExternalViewRowImpl obj) {
                return obj.getProjectId();
            }

            public void put(CostsProbabilityExternalViewRowImpl obj, Object value) {
                obj.setProjectId((String) value);
            }
        }
        ,
        RuleCode {
            public Object get(CostsProbabilityExternalViewRowImpl obj) {
                return obj.getRuleCode();
            }

            public void put(CostsProbabilityExternalViewRowImpl obj, Object value) {
                obj.setRuleCode((String) value);
            }
        }
        ,
        StudyElementId {
            public Object get(CostsProbabilityExternalViewRowImpl obj) {
                return obj.getStudyElementId();
            }

            public void put(CostsProbabilityExternalViewRowImpl obj, Object value) {
                obj.setStudyElementId((String) value);
            }
        }
        ,
        ScopeCode {
            public Object get(CostsProbabilityExternalViewRowImpl obj) {
                return obj.getScopeCode();
            }

            public void put(CostsProbabilityExternalViewRowImpl obj, Object value) {
                obj.setScopeCode((String) value);
            }
        }
        ,
        FunctionView {
            public Object get(CostsProbabilityExternalViewRowImpl obj) {
                return obj.getFunctionView();
            }

            public void put(CostsProbabilityExternalViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProbabilityRuleView {
            public Object get(CostsProbabilityExternalViewRowImpl obj) {
                return obj.getProbabilityRuleView();
            }

            public void put(CostsProbabilityExternalViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(CostsProbabilityExternalViewRowImpl object);

        public abstract void put(CostsProbabilityExternalViewRowImpl object, Object value);

        public int index() {
            return CostsProbabilityExternalViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return CostsProbabilityExternalViewRowImpl.AttributesEnum.firstIndex() +
                   CostsProbabilityExternalViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = CostsProbabilityExternalViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int FUNCTIONCODE = AttributesEnum.FunctionCode.index();
    public static final int LAG = AttributesEnum.Lag.index();
    public static final int PROBABILITY = AttributesEnum.Probability.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int RULECODE = AttributesEnum.RuleCode.index();
    public static final int STUDYELEMENTID = AttributesEnum.StudyElementId.index();
    public static final int SCOPECODE = AttributesEnum.ScopeCode.index();
    public static final int FUNCTIONVIEW = AttributesEnum.FunctionView.index();
    public static final int PROBABILITYRULEVIEW = AttributesEnum.ProbabilityRuleView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CostsProbabilityExternalViewRowImpl() {
    }

    /**
     * Gets CostsProbability2 entity object.
     * @return the CostsProbability2
     */
    public IPMSEntityImpl getCostsProbability2() {
        return (IPMSEntityImpl) getEntity(ENTITY_COSTSPROBABILITY2);
    }

    /**
     * Gets CostsProbability entity object.
     * @return the CostsProbability
     */
    public IPMSEntityImpl getCostsProbability() {
        return (IPMSEntityImpl) getEntity(ENTITY_COSTSPROBABILITY);
    }

    /**
     * Gets the attribute value for FUNCTION_CODE using the alias name FunctionCode.
     * @return the FUNCTION_CODE
     */
    public String getFunctionCode() {
        return (String) getAttributeInternal(FUNCTIONCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for FUNCTION_CODE using the alias name FunctionCode.
     * @param value value to set the FUNCTION_CODE
     */
    public void setFunctionCode(String value) {
        setAttributeInternal(FUNCTIONCODE, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for LAG using the alias name Lag.
     * @return the LAG
     */
    public Integer getLag() {
        return (Integer) getAttributeInternal(LAG);
    }

    /**
     * Sets <code>value</code> as attribute value for LAG using the alias name Lag.
     * @param value value to set the LAG
     */
    public void setLag(Integer value) {
        setAttributeInternal(LAG, value);
    }

    /**
     * Gets the attribute value for PROBABILITY using the alias name Probability.
     * @return the PROBABILITY
     */
    public Integer getProbability() {
        return (Integer) getAttributeInternal(PROBABILITY);
    }

    /**
     * Sets <code>value</code> as attribute value for PROBABILITY using the alias name Probability.
     * @param value value to set the PROBABILITY
     */
    public void setProbability(Integer value) {
        setAttributeInternal(PROBABILITY, value);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public String getProjectId() {
        return (String) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(String value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for RULE_CODE using the alias name RuleCode.
     * @return the RULE_CODE
     */
    public String getRuleCode() {
        return (String) getAttributeInternal(RULECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for RULE_CODE using the alias name RuleCode.
     * @param value value to set the RULE_CODE
     */
    public void setRuleCode(String value) {
        setAttributeInternal(RULECODE, value);
    }

    /**
     * Gets the attribute value for STUDY_ELEMENT_ID using the alias name StudyElementId.
     * @return the STUDY_ELEMENT_ID
     */
    public String getStudyElementId() {
        return (String) getAttributeInternal(STUDYELEMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for STUDY_ELEMENT_ID using the alias name StudyElementId.
     * @param value value to set the STUDY_ELEMENT_ID
     */
    public void setStudyElementId(String value) {
        setAttributeInternal(STUDYELEMENTID, value);
    }

    /**
     * Gets the attribute value for SCOPE_CODE using the alias name ScopeCode.
     * @return the SCOPE_CODE
     */
    public String getScopeCode() {
        return (String) getAttributeInternal(SCOPECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for SCOPE_CODE using the alias name ScopeCode.
     * @param value value to set the SCOPE_CODE
     */
    public void setScopeCode(String value) {
        setAttributeInternal(SCOPECODE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> FunctionView.
     */
    public RowSet getFunctionView() {
        return (RowSet) getAttributeInternal(FUNCTIONVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SharedAppModule_ProbabilityRuleView1.
     */
    public RowSet getProbabilityRuleView() {
        return (RowSet) getAttributeInternal(PROBABILITYRULEVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

