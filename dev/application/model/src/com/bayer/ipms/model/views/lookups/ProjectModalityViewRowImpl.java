package com.bayer.ipms.model.views.lookups;

import com.bayer.ipms.model.base.IPMSEntityImpl;
import com.bayer.ipms.model.base.IPMSLookupViewRow;
import com.bayer.ipms.model.base.IPMSLookupViewRowImpl;

import java.sql.Date;

import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 12 17:56:23 BST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProjectModalityViewRowImpl extends IPMSLookupViewRowImpl implements IPMSLookupViewRow
 {


    public static final int ENTITY_PROJECTMODALITY = 0;

    @Override
    public boolean isActive() {
        return 1 == getIsActiveDB();
    }

    @Override
    public Boolean getIsActive() {
        return isActive();
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IsActive.
     * @param value value to set the  IsActive
     */
    public void setIsActive(Boolean value) {
        setAttributeInternal(ISACTIVE, value);
        setIsActiveDB(Boolean.TRUE.equals(value)? 1 : 0 );
    }

    /**
     * Gets the attribute value for the calculated attribute Description.
     * @return the Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Description.
     * @param value value to set the  Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Code {
            protected Object get(ProjectModalityViewRowImpl obj) {
                return obj.getCode();
            }

            protected void put(ProjectModalityViewRowImpl obj, Object value) {
                obj.setCode((String) value);
            }
        }
        ,
        Name {
            protected Object get(ProjectModalityViewRowImpl obj) {
                return obj.getName();
            }

            protected void put(ProjectModalityViewRowImpl obj, Object value) {
                obj.setName((String) value);
            }
        }
        ,
        IsActiveDB {
            protected Object get(ProjectModalityViewRowImpl obj) {
                return obj.getIsActiveDB();
            }

            protected void put(ProjectModalityViewRowImpl obj, Object value) {
                obj.setIsActiveDB((Integer) value);
            }
        }
        ,
        CreateDate {
            protected Object get(ProjectModalityViewRowImpl obj) {
                return obj.getCreateDate();
            }

            protected void put(ProjectModalityViewRowImpl obj, Object value) {
                obj.setCreateDate((Date) value);
            }
        }
        ,
        UpdateDate {
            protected Object get(ProjectModalityViewRowImpl obj) {
                return obj.getUpdateDate();
            }

            protected void put(ProjectModalityViewRowImpl obj, Object value) {
                obj.setUpdateDate((Date) value);
            }
        }
        ,
        IsActive {
            protected Object get(ProjectModalityViewRowImpl obj) {
                return obj.getIsActive();
            }

            protected void put(ProjectModalityViewRowImpl obj, Object value) {
                obj.setIsActive((Boolean) value);
            }
        }
        ,
        Description {
            protected Object get(ProjectModalityViewRowImpl obj) {
                return obj.getDescription();
            }

            protected void put(ProjectModalityViewRowImpl obj, Object value) {
                obj.setDescription((String) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;


        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }


        protected abstract Object get(ProjectModalityViewRowImpl object);

        protected abstract void put(ProjectModalityViewRowImpl object, Object value);
    }


    public static final int CODE = AttributesEnum.Code.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int ISACTIVEDB = AttributesEnum.IsActiveDB.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProjectModalityViewRowImpl() {
    }

    /**
     * Gets ProjectModality entity object.
     * @return the ProjectModality
     */
    public IPMSEntityImpl getProjectModality() {
        return (IPMSEntityImpl) getEntity(ENTITY_PROJECTMODALITY);
    }

    /**
     * Gets the attribute value for CODE using the alias name Code.
     * @return the CODE
     */
    public String getCode() {
        return (String) getAttributeInternal(CODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name Code.
     * @param value value to set the CODE
     */
    public void setCode(String value) {
        setAttributeInternal(CODE, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for IS_ACTIVE using the alias name IsActive.
     * @return the IS_ACTIVE
     */
    public Integer getIsActiveDB() {
        return (Integer) getAttributeInternal(ISACTIVEDB);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_ACTIVE using the alias name IsActive.
     * @param value value to set the IS_ACTIVE
     */
    public void setIsActiveDB(Integer value) {
        setAttributeInternal(ISACTIVEDB, value);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_DATE using the alias name CreateDate.
     * @param value value to set the CREATE_DATE
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @return the UPDATE_DATE
     */
    public Date getUpdateDate() {
        return (Date) getAttributeInternal(UPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATE_DATE using the alias name UpdateDate.
     * @param value value to set the UPDATE_DATE
     */
    public void setUpdateDate(Date value) {
        setAttributeInternal(UPDATEDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

