create table phase_planning_type (
	code varchar2(10) constraint phase_planning_type_pk primary key,
	name varchar2(100) constraint phase_plan_type_name_cnn not null,
	description varchar2(500),
	is_active number(1) default 1 constraint phase_planning_type_act_cnn not null constraint phase_planning_type_act_ca check(is_active in (0,1)),
	create_date date default sysdate constraint phase_plan_t_create_date_cnn not null,
	update_date date default sysdate constraint phase_plan_t_update_date_cnn not null
);
------------
comment on table phase_planning_type is 'Table represents the lookup for Project Phase Planning. Table was created while implementing requirement: PROMIS-461';
comment on column phase_planning_type.code is 'Unique code for the type.';
comment on column phase_planning_type.name is 'The name of the type.';
------------
create or replace trigger phase_planning_type_tr
before insert or update on phase_planning_type
for each row
begin
	if inserting then
		:new.create_date := sysdate;
	end if;
	:new.update_date := sysdate;
end;
/
------------
merge into phase_planning_type dst
using (
	select 'c23' code,'combined Phase II/III' name, '1' is_active from dual
		union all
	select 'c13','combined Phase I/III','1' from dual
		union all
	select 'c12','combined Phase I/II','1' from dual
		union all
	select 'c2a2b','combined Phase IIa/IIb','1' from dual
		union all
	select 's1','skipped Phase I','1' from dual
		union all
	select 's2','skipped Phase II','1' from dual
		union all
	select 's3','skipped Phase III','1' from dual
) src
on (dst.code=src.code)
when matched then
	update set dst.name=src.name, dst.is_active=src.is_active
when not matched then
	insert(code,name,is_active) values (src.code,src.name,src.is_active);
------------
create table project_phase_planning (
	id number constraint prj_phase_plan_pk primary key,
	project_id nvarchar2(20) constraint prj_phase_plan_project_id_cnn not null constraint prj_phase_plan_project_id_fk references project(id) on delete cascade,
	phase_planning_code varchar2(10) constraint prj_phase_plan_code_cnn not null constraint prj_phase_plan_code_fk references phase_planning_type(code),
	create_date date constraint prj_phase_plan_create_date_cnn not null,
	create_user_id varchar2(20) constraint prj_phase_plan_create_by_cnn not null,
	update_date date constraint prj_phase_plan_update_date_cnn not null,
	update_user_id varchar2(20) constraint prj_phase_plan_update_by_cnn not null
);
------------
create index prj_phase_plan_project_id_fki on project_phase_planning(project_id);
create index prj_phase_plan_code_fk on project_phase_planning(phase_planning_code);
------------
comment on table project_phase_planning is 'Table stores all phase planning types for elected project. Table was created while implementing requirement: PROMIS-461';
comment on column project_phase_planning.id is 'Autogenerated surogate ID.';
comment on column project_phase_planning.project_id is 'The project for which phase planning is being selected.';
comment on column project_phase_planning.phase_planning_code is 'Selected relevant phase planning type.';
------------
create sequence prj_phase_plan_id_seq maxvalue 9999999999999999999 minvalue 1 cycle;
------------
create or replace trigger project_phase_planning_tr
before insert or update on project_phase_planning
for each row
begin
	if inserting then
		if :new.id is null then
			select prj_phase_plan_id_seq.nextval into :new.id from dual;
		end if;
		:new.create_date := sysdate;
		:new.create_user_id := nvl(:new.create_user_id,'TRIGGER');
		:new.update_user_id := :new.create_user_id;
	end if;
	if updating then
		:new.update_user_id := nvl(:new.update_user_id,'TRIGGER');
	end if;
	:new.update_date := sysdate;
end;
/