-------------------------------------------------------------------------------
---Below LTC tables for ProMIS Release42. Trigers are moved to standard folder in order to have it every deployment compilated
-------------------------------------------------------------------------------
--drop table ltc_tag cascade constraints;
--drop sequence ltc_tag_id_seq;
--drop table ltc_process cascade constraints;
--drop sequence ltc_process_id_seq;
--drop table ltc_project cascade constraints;
--drop sequence ltc_project_id_seq;
--alter table ltc_tag add is_forecast_prob number(1,0) default 0 constraint ltc_tag_is_forecast_prob_cnn not null;
-------------------------------------------------------------------------------
create table ltc_tag (
	id number constraint ltc_tag_pk primary key,
	name nvarchar2(100) constraint ltc_tag_name_cnn not null,
	start_year number(4,0) constraint ltc_tag_start_year_cnn not null,
	is_frozen number(1,0) default 0 constraint ltc_tag_is_frozen_cnn not null,
	is_forecast_prob number(1,0) default 0 constraint ltc_tag_is_forecast_prob_cnn not null,
	submit_report_date date,
	submit_report_user_id nvarchar2(20),
	prefil_from_profit_date date,
	prefil_from_profit_user_id nvarchar2(20),
	calculate_prob_date date,
	calculate_prob_user_id nvarchar2(20),
	create_date date constraint ltc_tag_create_date_cnn not null,
	create_user_id nvarchar2(20) constraint ltc_tag_create_by_cnn not null,
	update_date date constraint ltc_tag_update_date_cnn not null,
	update_user_id nvarchar2(20) constraint ltc_tag_update_by_cnn not null,
	vc_name as (replace(upper(name),' ')),
	constraint ltc_tag_name_ui unique (vc_name),
	constraint ltc_tag_start_year_c check (start_year>2000 and start_year<2100)
);
comment on table ltc_tag is 'LTC tag is used to logically combine LTC processes of the particular HPR process. It facilitates in identifying and aggregating LTC planning data for the specific HPR business process in reporting.';
comment on column ltc_tag.id is 'Autogenerated surogate ID.';
comment on column ltc_tag.name is 'Unique LTC TAG name.';
comment on column ltc_tag.start_year is 'Start of the planning period. Calendar year indicating the start of the LTC planning period. Subject to the LTC form.';
comment on column ltc_tag.vc_name is 'Virtual column just for assuring uniqness of a tag name.';
comment on column ltc_tag.is_frozen is 'The flag for freezing the LTC TAG. Default value is 0.';
comment on column ltc_tag.is_forecast_prob is 'The flag that comes from UI when user selects checkbox-Calculate probabilistic LTC. Default value is 0.';
comment on column ltc_tag.submit_report_date is 'The date indicating when tag-specific LTC and FTE planning data was made available for reporting.';
--
create sequence ltc_tag_id_seq maxvalue 9999999999999999999 minvalue 1 cycle;
--DONE--move this trigger to separatea file to trigger folder:
create or replace trigger ltc_tag_biu_tr
before insert or update on ltc_tag for each row
begin
	if inserting then
		if :new.id is null then
			select ltc_tag_id_seq.nextval into :new.id from dual;
		end if;
		:new.create_date := sysdate;
		:new.create_user_id := nvl(:new.create_user_id,'TRIGGER');
		:new.update_date := :new.create_date;
		:new.update_user_id := :new.create_user_id;
	end if;
	if updating then
		:new.update_date := sysdate;
		:new.update_user_id := nvl(:new.update_user_id,'TRIGGER');
	end if;
end;
/
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
create table ltc_process (
	id number constraint ltc_process_pk primary key,
	ltc_tag_id number constraint ltc_process_tag_id_cnn not null constraint ltc_process_tag_id_fk references ltc_tag(id),
	name nvarchar2(100) constraint ltc_process_name_cnn not null,
	termination_date date constraint ltc_process_term_date_cnn not null,
	status_code	nvarchar2(10) default 'NEW' constraint ltc_process_status_code_cnn not null constraint ltc_process_status_code_fk references process_status(code),
	status_date date default sysdate constraint ltc_process_status_date_cnn not null,
	is_syncing number(1,0) default 0 constraint ltc_process_is_sync_cnn not null,
	sync_date date,
	sync_id nvarchar2(20), --SOFT ref
	comments nvarchar2(500),
	terminate_date date,
	terminate_user_id nvarchar2(20),
	create_date date constraint ltc_process_create_date_cnn not null,
	create_user_id nvarchar2(20) constraint ltc_process_create_by_cnn not null,
	update_date date constraint ltc_process_update_date_cnn not null,
	update_user_id nvarchar2(20) constraint ltc_process_update_by_cnn not null,
	constraint ltc_process_is_sync_c check (is_syncing in (1,0))
	--vc_name as (replace(upper(name),' ')),constraint ltc_process_name_ui unique (vc_name)
);
--
create index ltc_process_tag_id_fki on ltc_process(ltc_tag_id);
create index ltc_process_status_code_fki on ltc_process(status_code);
--
comment on table ltc_process is 'LTC planning process that belongs to the specific LTC tag.';
comment on column ltc_process.id is 'Autogenerated surogate ID.';
comment on column ltc_process.ltc_tag_id is 'Reference to: ltc_tag(id).';
comment on column ltc_process.status_code is 'Reference to: process_status(code).';
comment on column ltc_process.status_date is 'Data of the last update of process status.';
comment on column ltc_process.sync_date is 'Data of the last synchronization/action with BPM.';
comment on column ltc_process.name is 'LTC process name.';
comment on column ltc_process.is_syncing is 'Flag for BPM synchronization, if 1 then means BPM process have not responded yet for the request.';
comment on column ltc_process.comments is 'Comment on the data to be collected or a set of projects included in the LTC process.';
comment on column ltc_process.termination_date is 'Date that indicates a deadline to provide initial LTC planning data for the requested projects. This date is used for information purpose only. It does not serve as a process termination date.';
comment on column ltc_process.terminate_date is 'Date that shows fact the date when process was terminated.';
comment on column ltc_process.sync_id is 'Soft reference to: message(id).';
--
create sequence ltc_process_id_seq maxvalue 9999999999999999999 minvalue 1 cycle;
--DONE--move this trigger to separatea file to trigger folder:
create or replace trigger ltc_process_biu_tr
before insert or update on ltc_process for each row
begin
	if inserting then
		--if :new.id is null then --ADF sends alwyas dummy number
			select ltc_process_id_seq.nextval into :new.id from dual;
		--end if;
		:new.create_date := sysdate;
		:new.create_user_id := nvl(:new.create_user_id,'TRIGGER');
		:new.update_date := :new.create_date;
		:new.update_user_id := :new.create_user_id;
	end if;
	if updating then
		:new.update_date := sysdate;
		:new.update_user_id := nvl(:new.update_user_id,'TRIGGER');
	end if;
end;
/
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
create table ltc_project (
	id number constraint ltc_project_pk primary key,
	ltc_process_id number constraint ltc_project_tag_id_cnn not null constraint ltc_project_proc_id_fk references ltc_process(id),
	project_id nvarchar2(20) constraint ltc_project_project_id_cnn not null constraint ltc_project_project_id_fk references project(id),
	create_date date constraint ltc_project_create_date_cnn not null,
	create_user_id nvarchar2(20) constraint ltc_project_create_by_cnn not null,
	update_date date constraint ltc_project_update_date_cnn not null,
	update_user_id nvarchar2(20) constraint ltc_project_update_by_cnn not null,
	constraint ltc_project_ui unique (ltc_process_id,project_id)
);
--
create index ltc_project_proc_id_fki on ltc_project(ltc_process_id);
create index ltc_project_project_id_fki on ltc_project(project_id);
--
comment on table ltc_project is 'Project that is selected for LTC planning process.';
comment on column ltc_project.id is 'Autogenerated surogate ID.';
comment on column ltc_project.ltc_process_id is 'Reference to: ltc_process(id).';
comment on column ltc_project.project_id is 'Reference to: project(id).';
--
create sequence ltc_project_id_seq maxvalue 9999999999999999999 minvalue 1 cycle;
--DONE--move this trigger to separatea file to trigger folder:
create or replace trigger ltc_project_biu_tr
before insert or update on ltc_project for each row
begin
	if inserting then
		--if :new.id is null then --ADF sends alwyas dummy number
			select ltc_project_id_seq.nextval into :new.id from dual;
		--end if;
		:new.create_date := sysdate;
		:new.create_user_id := nvl(:new.create_user_id,'TRIGGER');
		:new.update_date := :new.create_date;
		:new.update_user_id := :new.create_user_id;
	end if;
	if updating then
		:new.update_date := sysdate;
		:new.update_user_id := nvl(:new.update_user_id,'TRIGGER');
	end if;
end;
/
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
create table ltc_estimate (
    id number constraint ltc_estimate_pk primary key,
    ltc_project_id number constraint ltc_estimate_ltc_project_cnn not null constraint ltc_estimate_ltc_project_fk references ltc_project(id),
    phase_name nvarchar2(100),
    study_id nvarchar2(20),
    function_code nvarchar2(10) constraint ltc_estimate_function_cnn not null constraint ltc_estimate_function_fk references function(code),
    scope_code nvarchar2(10) constraint ltc_estimate_scope_cnn not null,
    is_external_fte number(1) default 0 constraint ltc_estimate_extfte_cnn not null constraint ltc_estimate_extfte_in check(is_external_fte in (0,1)),
    comments nvarchar2(4000),
    lt_y1_cost_previous number,
    lt_y1_cost number,
    lt_y2_cost_previous number,
    lt_y2_cost number,
    lt_y3_cost_previous number,
    lt_y3_cost number,
    lt_y4_cost number,
    lt_y5_cost number,
    lt_y6_cost number,
    lt_y7_cost number,
    lt_y8_cost number,
    lt_y9_cost number,
    lt_y10_cost number,
    lt_y11_cost number,
    lt_y12_cost number,
    lt_y13_cost number,
    lt_y14_cost number,
    lt_y15_cost number,
    create_date date constraint ltc_estimate_create_date_cnn not null,
    create_user_id nvarchar2(20) constraint ltc_estimate_create_by_cnn not null,
    update_date date constraint ltc_estimate_update_date_cnn not null,
    update_user_id nvarchar2(20) constraint ltc_estimate_update_by_cnn not null,
    is_discrepancy number(1) default 0 constraint ltc_estimate_discrep_cnn not null constraint ltc_estimate_discrep_in check(is_discrepancy in (0,1)),
    constraint ltc_estimate_ui unique (ltc_project_id,phase_name,study_id,function_code,scope_code,is_external_fte,is_discrepancy)
);
--
create index ltc_estimate_ltc_project_fki on ltc_estimate(ltc_project_id);
create index ltc_estimate_phase_fki on ltc_estimate(phase_name);
create index ltc_estimate_function_fki on ltc_estimate(function_code);
--
comment on table ltc_estimate is 'LTC estimates';
comment on column ltc_estimate.id is 'Autogenerated surogate ID.';
comment on column ltc_estimate.ltc_project_id is 'Reference to ltc_project(id)';
comment on column ltc_estimate.phase_name is 'Phase to which cost belong to. WBS_CATEGORY for study level costs - soft reference to MILESTONE.WBS_CATEGORY. PHASE_NAME for project level - soft reference to MILESTONE_PHASE_MAPPING.PHASE_NAME';
comment on column ltc_estimate.study_id is 'Trial No.';
comment on column ltc_estimate.function_code is 'Function on which LTC cost is planned. Reference to: function(code)';
comment on column ltc_estimate.scope_code is 'Scope of the costs on which LTC is planned.';
comment on column ltc_estimate.comments is 'Planning assumption GPM';
comment on column ltc_estimate.lt_y1_cost_previous is 'LTC for first year, previous value before prefill';
comment on column ltc_estimate.lt_y1_cost is 'LTC for first year';
comment on column ltc_estimate.is_discrepancy is 'Boolean flag (1,0), showing whether particular row was deleted during forecast recalculation';
--
create sequence ltc_estimate_id_seq maxvalue 9999999999999999999 minvalue 1 cycle;
--DONE--move this trigger to separatea file to trigger folder:
create or replace trigger ltc_estimate_biu_tr
before insert or update on ltc_estimate for each row
    begin
        if inserting then
            if :new.id is null then
                select ltc_estimate_id_seq.nextval into :new.id from dual;
            end if;
            :new.create_date := sysdate;
            :new.create_user_id := nvl(:new.create_user_id,'TRIGGER');
            :new.update_date := :new.create_date;
            :new.update_user_id := :new.create_user_id;
        end if;
        if updating then
            :new.update_date := sysdate;
            :new.update_user_id := nvl(:new.update_user_id,'TRIGGER');
        end if;
    end;
/
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------