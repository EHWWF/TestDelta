<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns2="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ipms-qplan="http://xmlns.bayer.com/ipms/qplan" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:qplan="https://quickplan-p.bayer-ag.com/services" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:i0="https://by-quickplan-p.bayer-ag.com/services" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:ipms="http://xmlns.bayer.com/ipms" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bpmn="http://schemas.oracle.com/bpm/xpath" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl wsdl ipms-qplan ipms xsd wsa ns2 wsa10 soap12 soapenc soap wsx wsap wsaw qplan wsp i0 msc wsu wsam xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:ipms-soa="http://xmlns.bayer.com/ipms/soa"
                xmlns:ns1="http://schemas.oracle.com/bpel/extension">

	<oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../CreateProject.wsdl"/>
            <oracle-xsl-mapper:rootElement name="callQPlan" namespace="http://xmlns.bayer.com/ipms/qplan"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../Interface.svc.wsdl"/>
            <oracle-xsl-mapper:rootElement name="CreateProject" namespace="https://quickplan-p.bayer-ag.com/services"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <oracle-xsl-mapper:named-template-schema>
         <oracle-xsl-mapper:template name="milestone">
            <oracle-xsl-mapper:mapSources/>
         </oracle-xsl-mapper:template>
      </oracle-xsl-mapper:named-template-schema>
      <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [MON JUN 01 10:43:30 CEST 2015].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
		<qplan:CreateProject>
			<qplan:createProjectRequest>
				<qplan:cwid>
				  <xsl:value-of select="/ipms-qplan:callQPlan/ipms-qplan:createProject/@cwid"/>
				</qplan:cwid>
				<qplan:projectId>
				  <xsl:value-of select="/ipms-qplan:callQPlan/ipms-qplan:createProject/@projectCode"/>
				</qplan:projectId>
		
				<xsl:apply-templates select="/ipms-qplan:callQPlan/ipms-qplan:createProject/ipms-qplan:masterData"/>
				<xsl:apply-templates select="/ipms-qplan:callQPlan/ipms-qplan:createProject/ipms-qplan:decisionMilestones"/>

			</qplan:createProjectRequest>
		</qplan:CreateProject>
	</xsl:template>
	
	<xsl:template match="ipms-qplan:masterData">
		<qplan:keyData>
			<xsl:for-each select="ipms-qplan:entry">
			<qplan:keyDataAttribute>
				<qplan:key>
					<xsl:value-of select="ipms-qplan:key"/>
				</qplan:key>
				<qplan:value>
					<xsl:value-of select="ipms-qplan:value"/>
				</qplan:value>
			</qplan:keyDataAttribute>
			</xsl:for-each>
		</qplan:keyData>
	</xsl:template>

	<xsl:template match="ipms-qplan:decisionMilestones">
		
		<qplan:milestoneData>
			<xsl:choose>
				<xsl:when test="ipms-qplan:milestone">
					<qplan:milestoneOutOfSync>
						<xsl:value-of select="@outOfSync='true' or false"/>
					</qplan:milestoneOutOfSync>

					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">D1</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">D2</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">CSM</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">D3</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">PCC</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">toxFimRC</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">D4</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">M4A</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">POC</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">D5</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">D6</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">D7</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">D8</xsl:with-param>
					</xsl:call-template>
					<xsl:call-template name="milestone">
						<xsl:with-param name="milestoneCode">M9</xsl:with-param>
					</xsl:call-template>
				</xsl:when>
				<xsl:otherwise>
					<xsl:attribute name="xsi:nil">true</xsl:attribute> 
				</xsl:otherwise>
			</xsl:choose>
		</qplan:milestoneData>
		
	</xsl:template>  
	
	<xsl:template name="milestone">
		<xsl:param name="milestoneCode"/>
		<xsl:variable name="milestone" select="ipms-qplan:milestone[ipms-qplan:milestoneCode=$milestoneCode][1]"/>

		<xsl:element name="qplan:{$milestoneCode}">
			<xsl:if test="empty($milestone/ipms-qplan:genericDate/text() | $milestone/ipms-qplan:planDate/text() | $milestone/ipms-qplan:actualDate/text())">
				<xsl:attribute name="xsi:nil">true</xsl:attribute> 
			</xsl:if>
			<xsl:if test="$milestone/ipms-qplan:genericDate/text()">
				<qplan:generic>
               <xsl:value-of select="$milestone/ipms-qplan:genericDate"/>
            </qplan:generic>
			</xsl:if>
			<xsl:if test="$milestone/ipms-qplan:planDate/text()">
				<qplan:planned>
               <xsl:value-of select="$milestone/ipms-qplan:planDate"/>
            </qplan:planned>
			</xsl:if>
			<xsl:if test="$milestone/ipms-qplan:actualDate/text()">
				<qplan:actual>
               <xsl:value-of select="$milestone/ipms-qplan:actualDate"/>
            </qplan:actual>
			</xsl:if>
		</xsl:element>
	</xsl:template> 
	
</xsl:stylesheet>