<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ns2="http://xmlns.oracle.com/Primavera/P6/V18.8.4/API/BusinessObjects" xmlns:ns0="http://xmlns.oracle.com/Primavera/P6/WS/Project/V2" xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns1="http://xmlns.bayer.com/ipms" xmlns:ns11="http://xmlns.bayer.com/ipms/soa" xmlns:intgfault="http://xmlns.oracle.com/Primavera/P6/WS/IntegrationFaultType/V1" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:client="http://xmlns.bayer.com/ipms/soa" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://xmlns.oracle.com/Primavera/P6/WS/EPS/V1" xmlns:bpmn="http://schemas.oracle.com/bpm/xpath" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl ns2 ns0 plnk soap wsdl ns1 intgfault client xsd tns bpws xp20 bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../ReadProject.wsdl"/>
            <oracle-xsl-mapper:rootElement name="APIBusinessObjects" namespace="http://xmlns.oracle.com/Primavera/P6/V18.8.4/API/BusinessObjects"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../ReadConfiguration.wsdl"/>
            <oracle-xsl-mapper:rootElement name="config" namespace="http://xmlns.bayer.com/ipms/soa"/>
            <oracle-xsl-mapper:param name="ReadCfgOut.payload"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../wsdl/ProjectService.wsdl"/>
            <oracle-xsl-mapper:rootElement name="ReadProjectsResponse" namespace="http://xmlns.oracle.com/Primavera/P6/WS/Project/V2"/>
            <oracle-xsl-mapper:param name="ReadPrjOut.result"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../ReadProject.wsdl"/>
            <oracle-xsl-mapper:rootElement name="response" namespace="http://xmlns.bayer.com/ipms/soa"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [MON JUN 01 10:43:33 CEST 2015].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="ReadCfgOut.payload"/>
  <xsl:param name="ReadPrjOut.result"/>
  <xsl:template match="/">
    <ns11:response>
        <xsl:attribute name="id">
            <xsl:value-of select="/ns11:read/@id"/>
        </xsl:attribute>     
      <ns11:complete>
            <xsl:attribute name="id">
                <xsl:value-of select="/ns11:read/@id"/>
            </xsl:attribute>      
            <ns1:project>
              <xsl:attribute name="programId">
                <xsl:value-of select="/ns2:APIBusinessObjects/ns2:EPS[ns2:ObjectId = /ns2:APIBusinessObjects/ns2:EPS[(ns2:ObjectId = /ns2:APIBusinessObjects/ns2:Project/ns2:ParentEPSObjectId)]/ns2:ParentObjectId]/ns2:Id"/>
              </xsl:attribute>
              <xsl:attribute name="id">
                <xsl:value-of select="substring-before(/ns2:APIBusinessObjects/ns2:Project/ns2:Id,&quot;-RAW&quot;)"/>
              </xsl:attribute>
              <xsl:if test="/ns2:APIBusinessObjects/ns2:Project/ns2:UDF[ns2:TypeObjectId = $ReadCfgOut.payload/ns11:config/ns11:project/ns11:codeTypeId]">
                <ns1:code>
                  <xsl:value-of select="/ns2:APIBusinessObjects/ns2:Project/ns2:UDF[ns2:TypeObjectId = $ReadCfgOut.payload/ns11:config/ns11:project/ns11:codeTypeId]/ns2:TextValue"/>
                </ns1:code>
              </xsl:if>
              <ns1:name>
                <xsl:value-of select="/ns2:APIBusinessObjects/ns2:Project/ns2:Name"/>
              </ns1:name>
              <ns1:timelines>
                <xsl:for-each select="$ReadPrjOut.result/ns0:ReadProjectsResponse/ns0:Project">
                  <ns1:timeline>
                    <xsl:attribute name="programId">
                      <xsl:value-of select="/ns2:APIBusinessObjects/ns2:EPS[ns2:ObjectId = /ns2:APIBusinessObjects/ns2:EPS[(ns2:ObjectId = /ns2:APIBusinessObjects/ns2:Project/ns2:ParentEPSObjectId)]/ns2:ParentObjectId]/ns2:Id"/>
                    </xsl:attribute>
                    <xsl:attribute name="projectId">
                      <xsl:value-of select="substring-before(/ns2:APIBusinessObjects/ns2:Project/ns2:Id,&quot;-RAW&quot;)"/>
                    </xsl:attribute>
                    <xsl:attribute name="referenceId">
                      <xsl:value-of select="ns0:WBSObjectId"/>
                    </xsl:attribute>
                    <xsl:attribute name="id">
                      <xsl:value-of select="ns0:Id"/>
                    </xsl:attribute>
                    <ns1:typeCode>
                      <xsl:value-of select="substring(ns0:Id,string-length(ns0:Id) - 2.0,3.0)"/>
                    </ns1:typeCode>
                    <xsl:if test="ns0:StartDate">
                      <ns1:startDate>
                        <xsl:value-of select="ns0:StartDate"/>
                      </ns1:startDate>
                    </xsl:if>
                  </ns1:timeline>
                </xsl:for-each>
              </ns1:timelines>             
            </ns1:project>
      </ns11:complete>            
    </ns11:response>            
  </xsl:template>
</xsl:stylesheet>