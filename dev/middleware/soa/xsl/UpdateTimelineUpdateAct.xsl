<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:tns="http://xmlns.oracle.com/Primavera/P6/WS/Project/V2" xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:intgfault="http://xmlns.oracle.com/Primavera/P6/WS/IntegrationFaultType/V1" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns0="http://xmlns.oracle.com/Primavera/P6/WS/Activity/V1" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:client="http://xmlns.bayer.com/ipms/soa" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://xmlns.bayer.com/ipms" xmlns:bpmn="http://schemas.oracle.com/bpm/xpath" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl plnk wsdl client xsd ns1 soap intgfault ns0 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:ns2="http://xmlns.bayer.com/ipms/cache"
                xmlns:ns3="http://xmlns.bayer.com/ipms/qplan">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../UpdateTimeline.wsdl"/>
            <oracle-xsl-mapper:rootElement name="update" namespace="http://xmlns.bayer.com/ipms/soa"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../wsdl/ActivityService.wsdl"/>
            <oracle-xsl-mapper:rootElement name="UpdateActivities" namespace="http://xmlns.oracle.com/Primavera/P6/WS/Activity/V1"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [MON JUN 01 10:43:33 CEST 2015].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
    <ns0:UpdateActivities>
      <xsl:for-each select="/client:update/ns1:timeline/ns1:activities/ns1:activity[ns1:actualStart or ns1:actualFinish or ns1:planStart or ns1:planFinish]">
          <xsl:choose>
          <xsl:when test="@mustBeDeleted = &quot;true&quot;"/>
          <xsl:otherwise>
            <ns0:Activity>
              <xsl:if test="ns1:actualFinish">
                <ns0:ActualFinishDate>
                  <xsl:value-of select="ns1:actualFinish"/>
                </ns0:ActualFinishDate>
              </xsl:if>
              <xsl:if test="ns1:actualStart">
                <ns0:ActualStartDate>
                  <xsl:value-of select="ns1:actualStart"/>
                </ns0:ActualStartDate>
              </xsl:if>
              <ns0:ObjectId>
                <xsl:value-of select="@id"/>
              </ns0:ObjectId>
              <xsl:if test="ns1:planFinish">
                <ns0:PlannedFinishDate>
                  <xsl:value-of select="ns1:planFinish"/>
                </ns0:PlannedFinishDate>
              </xsl:if>
              <xsl:if test="ns1:planStart">
                <ns0:PlannedStartDate>
                  <xsl:value-of select="ns1:planStart"/>
                </ns0:PlannedStartDate>
              </xsl:if>
              
              <xsl:choose>
                  <xsl:when test="@restricted = &quot;true&quot;">
                      <xsl:choose>
                        <xsl:when test="ns1:type = &quot;WBS Summary&quot;"/>
                        <xsl:when test="ns1:type = &quot;Start Milestone&quot;">
                            <ns0:PrimaryConstraintType>
                                <xsl:text disable-output-escaping="no">Mandatory Start</xsl:text>
                            </ns0:PrimaryConstraintType>
                            <ns0:PrimaryConstraintDate>
                                <xsl:value-of select="ns1:planStart"/>
                            </ns0:PrimaryConstraintDate>
                        </xsl:when>
                        <xsl:when test="ns1:type = &quot;Finish Milestone&quot;">
                            <ns0:PrimaryConstraintType>
                                <xsl:text disable-output-escaping="no">Mandatory Finish</xsl:text>
                            </ns0:PrimaryConstraintType>
                            <ns0:PrimaryConstraintDate>
                                <xsl:value-of select="ns1:planFinish"/>
                            </ns0:PrimaryConstraintDate>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns0:PrimaryConstraintDate>
                                <xsl:value-of select="ns1:planStart"/>
                            </ns0:PrimaryConstraintDate>
                            <ns0:PrimaryConstraintType>
                                <xsl:text disable-output-escaping="no">Start On or After</xsl:text>
                            </ns0:PrimaryConstraintType>
                            <ns0:SecondaryConstraintDate>
                                <xsl:value-of select="ns1:planFinish"/>
                            </ns0:SecondaryConstraintDate>
                            <ns0:SecondaryConstraintType>
                                <xsl:text disable-output-escaping="no">Finish On or Before</xsl:text>
                            </ns0:SecondaryConstraintType>
                         </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns0:PrimaryConstraintType/>
                        <ns0:SecondaryConstraintType/>
                    </xsl:otherwise>
                </xsl:choose>
    
                <xsl:choose>              
                  <xsl:when test="ns1:wbsCategoryName">
                    <ns0:WBSObjectId>
                      <xsl:value-of select="@wbsId"/>
                    </ns0:WBSObjectId>
                    <ns0:Name>
                      <xsl:value-of select="ns1:name"/>
                    </ns0:Name>
                  </xsl:when>
                </xsl:choose>
         
            </ns0:Activity>
            
          </xsl:otherwise>
          </xsl:choose>
      </xsl:for-each>
    </ns0:UpdateActivities>
  </xsl:template>
</xsl:stylesheet>