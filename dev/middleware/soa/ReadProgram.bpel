<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer

  Created: Wed Feb 06 11:31:24 EET 2013
  Author:  gytis
  Type: BPEL 1.1 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ReadProgram"
               targetNamespace="http://xmlns.bayer.com/ipms/soa"
               xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
               xmlns:client="http://xmlns.bayer.com/ipms/soa"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://xmlns.oracle.com/Primavera/P6/WS/EPS/V1"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns2="http://xmlns.bayer.com/ipms"
         xmlns:ns3="http://xmlns.oracle.com/Primavera/P6/WS/Project/V2"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!--
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS
        List of services participating in this BPEL process
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
  <bpelx:annotation>
    <bpelx:analysis>
      <bpelx:property name="wsdlFile">
        <![CDATA[ReadProgram.wsdl]]>
      </bpelx:property>
    </bpelx:analysis>
  </bpelx:annotation>
  <partnerLinks>
    <!--
      The 'client' role represents the requester of this service. It is
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="ReadProgramService" partnerLinkType="client:ReadProgram" myRole="ReadProgramProvider"
                 partnerRole="ReadProgramRequester"/>
    <partnerLink name="EPSService" partnerLinkType="ns1:EPSService"
                 partnerRole="EPSPortType"/>
  </partnerLinks>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES
      List of messages and XML documents used within this BPEL process
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:ReadProgramRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:ReadProgramResponseMessage"/>
    <variable name="ReadEpsIn" messageType="ns1:ReadEPS"/>
    <variable name="ReadEpsOut" messageType="ns1:ReadEPSResponse"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <scope name="mainFaultCatchingScope" variableAccessSerializable="no">
        <variables>
          <variable name="faultVariable"
                    messageType="client:ReadProgramResponseMessage"/>
        </variables>
        <sequence name="rethrowFault">
          <assign name="assignFaultOutput">
            <copy>
              <from expression="ora:getFaultAsString()"/>
              <to variable="faultVariable" part="payload"
                  query="/client:response/ns2:error/ns2:description"/>
            </copy>
            <copy>
              <from expression="ora:getFaultName()"/>
              <to variable="faultVariable" part="payload"
                  query="/client:response/ns2:error/ns2:code"/>
            </copy>
            <copy>
              <from variable="inputVariable" part="payload"
                    query="/client:read/@id"/>
              <to variable="faultVariable" part="payload"
                  query="/client:response/ns2:error/@id"/>
            </copy>
            <copy>
              <from variable="inputVariable" part="payload"
                    query="/client:read/@id"/>
              <to variable="faultVariable" part="payload"
                  query="/client:response/@id"/>
            </copy>
          </assign>
          <invoke name="callbackFaultOutput" bpelx:invokeAsDetail="no"
                  inputVariable="faultVariable"
                  partnerLink="ReadProgramService"
                  portType="client:ReadProgramCallback" operation="callback"/>
        </sequence>
      </scope>
    </catchAll>
  </faultHandlers>
  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC
     Set of activities coordinating the flow of messages across the
     services integrated within this business process
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ReadProgram.wsdl) -->
    <receive name="receiveInput" partnerLink="ReadProgramService" portType="client:ReadProgram" operation="process" variable="inputVariable" createInstance="yes"/>
    <assign name="AssignReadEpsIn">
      <copy>
        <from><v1:Field xmlns:v1="http://xmlns.oracle.com/Primavera/P6/WS/EPS/V1">Id</v1:Field></from>
        <to variable="ReadEpsIn" part="params" query="/ns1:ReadEPS/ns1:Field"/>
      </copy>
      <bpelx:insertAfter>
        <bpelx:from><v1:Field xmlns:v1="http://xmlns.oracle.com/Primavera/P6/WS/EPS/V1">Name</v1:Field></bpelx:from>
        <bpelx:to variable="ReadEpsIn" part="params"
                  query="/ns1:ReadEPS/ns1:Field"/>
      </bpelx:insertAfter>
      <copy>
        <from expression="concat(&quot;Id='&quot;,bpws:getVariableData('inputVariable','payload','/client:read/ns2:program/@id'),&quot;'&quot;)"/>
        <to variable="ReadEpsIn" part="params" query="/ns1:ReadEPS/ns1:Filter"/>
      </copy>
    </assign>
    <invoke name="ReadEps" bpelx:invokeAsDetail="no" inputVariable="ReadEpsIn"
            outputVariable="ReadEpsOut" partnerLink="EPSService"
            portType="ns1:EPSPortType" operation="ReadEPS"/>
    <assign name="AssignOut">
      <copy bpelx:ignoreMissingFromData="yes">
        <from variable="ReadEpsOut" part="result"
              query="/ns1:ReadEPSResponse/ns1:EPS/ns1:Name"/>
        <to variable="outputVariable" part="payload"
            query="/client:response/client:complete/ns2:program/ns2:name"/>
      </copy>
      <copy bpelx:ignoreMissingFromData="yes">
        <from variable="ReadEpsOut" part="result"
              query="/ns1:ReadEPSResponse/ns1:EPS/ns1:Id"/>
        <to variable="outputVariable" part="payload"
            query="/client:response/client:complete/ns2:program/@id"/>
      </copy>
      <copy bpelx:ignoreMissingFromData="yes">
        <from variable="inputVariable" part="payload" query="/client:read/@id"/>
        <to variable="outputVariable" part="payload"
            query="/client:response/client:complete/@id"/>
      </copy>
      <copy bpelx:ignoreMissingFromData="yes">
        <from variable="inputVariable" part="payload" query="/client:read/@id"/>
        <to variable="outputVariable" part="payload"
            query="/client:response/@id"/>
      </copy>
    </assign>
    <!-- Generate reply to synchronous request -->
    <invoke name="callbackOutput" bpelx:invokeAsDetail="no"
            inputVariable="outputVariable" partnerLink="ReadProgramService"
            portType="client:ReadProgramCallback" operation="callback"/>
  </sequence>
</process>